{
  "id": "07f33f8d44d100e09f6f56338bd1ee0e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@safe-global/safe-contracts/contracts/common/Enum.sol": {
        "content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title Enum - Collection of enums used in Safe contracts.\n * @author Richard Meissner - @rmeissner\n */\nabstract contract Enum {\n    enum Operation {\n        Call,\n        DelegateCall\n    }\n}\n"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
      },
      "contracts/CholoDromeModule.sol": {
        "content": "// SPDX-License-Identifier: LGPL-3.0\npragma solidity ^0.8.0;\n// Imports will be added here\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@safe-global/safe-contracts/contracts/common/Enum.sol\";\nimport \"./choloInterfaces.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"./ISafe.sol\";\n\ncontract CholoDromeModule is Ownable {\n    address public rewardToken; // Velo token address\n    address public rewardStable; // USDT token address\n    address public swapRouter; // Address of the Uniswap V3 Swap Router\n    address public immutable USDC;\n\n    uint256 private constant SLIPPAGE_DENOMINATOR = 10000;\n    uint256 public slippageTolerance = 50; // 0.5% default slippage tolerance\n\n    // Mapping to store approved pools\n    mapping(address => bool) public approvedPools;\n\n    // Mapping to store encoded paths for swaps between two tokens\n    mapping(address => mapping(address => bytes)) public swapPaths;\n\n    // Mapping to store price feed addresses for token pairs\n    mapping(address => mapping(address => address)) public priceFeeds;\n\n    event PoolApproved(address indexed safe, address indexed pool);\n    event PoolRemoved(address indexed safe, address indexed pool);\n    event EarningsCollected(\n        address indexed safe,\n        address indexed pool,\n        uint256 tokenId,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 veloAmount,\n        uint256 totalUsdtAmount\n    );\n    event RewardTokenUpdated(\n        address indexed oldToken,\n        address indexed newToken\n    );\n    event RewardStableUpdated(\n        address indexed oldStable,\n        address indexed newStable\n    );\n    event SlippageToleranceUpdated(uint256 oldTolerance, uint256 newTolerance);\n    event PriceFeedUpdated(\n        address indexed fromToken,\n        address indexed toToken,\n        address indexed priceFeed\n    );\n\n    constructor(\n        address _owner,\n        address _rewardToken,\n        address _rewardStable,\n        address _swapRouter,\n        address _usdc\n    ) Ownable(_owner) {\n        require(_owner != address(0), \"Invalid owner\");\n        require(_rewardToken != address(0), \"Invalid reward token\");\n        require(_rewardStable != address(0), \"Invalid reward stable\");\n        require(_swapRouter != address(0), \"Invalid swap router\");\n        require(_usdc != address(0), \"Invalid USDC address\");\n        rewardToken = _rewardToken;\n        rewardStable = _rewardStable;\n        swapRouter = _swapRouter;\n        USDC = _usdc;\n    }\n\n    /// @notice Set the slippage tolerance for swaps\n    /// @param _slippageTolerance The new slippage tolerance (in basis points, e.g. 50 = 0.5%)\n    function setSlippageTolerance(\n        uint256 _slippageTolerance\n    ) external onlyOwner {\n        require(_slippageTolerance <= 1000, \"Slippage too high\"); // Max 10%\n        uint256 oldTolerance = slippageTolerance;\n        slippageTolerance = _slippageTolerance;\n        emit SlippageToleranceUpdated(oldTolerance, _slippageTolerance);\n    }\n\n    /// @notice Approve a pool for all safes\n    /// @dev Can only be called by the owner\n    /// @param pool The address of the pool to approve\n    function approvePool(address pool) external onlyOwner {\n        require(pool != address(0), \"Invalid pool\");\n        approvedPools[pool] = true;\n        emit PoolApproved(address(0), pool); // Use address(0) to indicate all safes\n    }\n\n    /// @notice Remove approval for a pool for all safes\n    /// @dev Can only be called by the owner\n    /// @param pool The address of the pool to remove\n    function removePool(address pool) external onlyOwner {\n        require(pool != address(0), \"Invalid pool\");\n        approvedPools[pool] = false;\n        emit PoolRemoved(address(0), pool); // Use address(0) to indicate all safes\n    }\n\n    /// @notice Update the reward token address (Velo)\n    /// @param _newRewardToken The new reward token address\n    function setRewardToken(address _newRewardToken) external onlyOwner {\n        require(_newRewardToken != address(0), \"Invalid reward token\");\n        address oldToken = rewardToken;\n        rewardToken = _newRewardToken;\n        emit RewardTokenUpdated(oldToken, _newRewardToken);\n    }\n\n    /// @notice Update the reward stable token address (USDT)\n    /// @param _newRewardStable The new reward stable token address\n    function setRewardStable(address _newRewardStable) external onlyOwner {\n        require(_newRewardStable != address(0), \"Invalid reward stable\");\n        address oldStable = rewardStable;\n        rewardStable = _newRewardStable;\n        emit RewardStableUpdated(oldStable, _newRewardStable);\n    }\n\n    /// @notice Update the encoded path for swaps between two tokens\n    /// @dev Can only be called by the owner\n    /// @param fromToken The address of the token to swap from\n    /// @param toToken The address of the token to swap to\n    /// @param path The encoded path for the swap\n    function setSwapPath(\n        address fromToken,\n        address toToken,\n        bytes calldata path\n    ) external onlyOwner {\n        require(fromToken != address(0), \"Invalid fromToken\");\n        require(toToken != address(0), \"Invalid toToken\");\n        require(path.length > 0, \"Invalid path\");\n        swapPaths[fromToken][toToken] = path;\n    }\n\n    /// @notice Retrieve the swap path for a given token pair\n    /// @param fromToken The address of the token to swap from\n    /// @param toToken The address of the token to swap to\n    /// @return path The encoded path for the swap\n    function _getSwapPath(\n        address fromToken,\n        address toToken\n    ) internal view returns (bytes memory path) {\n        path = swapPaths[fromToken][toToken];\n        require(path.length > 0, \"Swap path not set\");\n    }\n\n    /// @notice Set the price feed for a token pair\n    /// @param fromToken The source token address\n    /// @param toToken The destination token address\n    /// @param priceFeed The Chainlink price feed address for the token pair\n    function setPriceFeed(\n        address fromToken,\n        address toToken,\n        address priceFeed\n    ) external onlyOwner {\n        require(fromToken != address(0), \"Invalid from token\");\n        require(toToken != address(0), \"Invalid to token\");\n        require(priceFeed != address(0), \"Invalid price feed\");\n        priceFeeds[fromToken][toToken] = priceFeed;\n        emit PriceFeedUpdated(fromToken, toToken, priceFeed);\n    }\n\n    /// @notice Get the latest price from a Chainlink feed with validation\n    /// @param priceFeed The address of the price feed\n    /// @return price The normalized price (8 decimals)\n    function _getValidatedPrice(\n        address priceFeed\n    ) internal view returns (uint256) {\n        require(priceFeed != address(0), \"Price feed not set\");\n\n        AggregatorV3Interface oracle = AggregatorV3Interface(priceFeed);\n\n        (, int256 price, , uint256 updatedAt, ) = oracle.latestRoundData();\n\n        require(price > 0, \"Invalid price\");\n        require(block.timestamp - updatedAt <= 24 hours, \"Price feed too old\");\n\n        return uint256(price);\n    }\n\n    /// @notice Check if a price feed exists for a token pair\n    /// @param fromToken The source token address\n    /// @param toToken The destination token address\n    /// @return priceFeed The price feed address, reverts if not found\n    function _getPriceFeed(\n        address fromToken,\n        address toToken\n    ) internal view returns (address priceFeed) {\n        priceFeed = priceFeeds[fromToken][toToken];\n        require(priceFeed != address(0), \"No price feed for token pair\");\n        return priceFeed;\n    }\n\n    /// @notice Calculate the minimum amount out with slippage tolerance using Chainlink oracle\n    /// @param token The input token address\n    /// @param amountIn The input amount\n    /// @return The minimum amount out in USDT considering slippage\n    function _calculateAmountOutMinimum(\n        address token,\n        uint256 amountIn\n    ) internal view returns (uint256) {\n        if (token == rewardStable) return amountIn;\n\n        // Get the USDC/USDT price feed which we'll need in both cases\n        address usdcUsdtFeed = _getPriceFeed(USDC, rewardStable);\n        uint256 usdcUsdtPrice = _getValidatedPrice(usdcUsdtFeed);\n        uint256 expectedAmount;\n\n        if (token == USDC) {\n            // Direct USDC to USDT conversion\n            // Both USDC and USDT have 6 decimals, price feed has 8 decimals\n            expectedAmount = (amountIn * usdcUsdtPrice) / 1e8;\n            return\n                (expectedAmount * (SLIPPAGE_DENOMINATOR - slippageTolerance)) /\n                SLIPPAGE_DENOMINATOR;\n        }\n\n        // For all other tokens, we need to go through USDC first\n        address tokenUsdcFeed = _getPriceFeed(token, USDC);\n        uint256 tokenUsdcPrice = _getValidatedPrice(tokenUsdcFeed);\n\n        // Get token decimals\n        uint8 tokenDecimals = IERC20Metadata(token).decimals();\n\n        // First convert to USDC equivalent\n        // Need to adjust for:\n        // 1. Price feed decimals (8)\n        // 2. Token decimals (tokenDecimals)\n        // 3. USDC decimals (6)\n        uint256 usdcAmount = (amountIn * tokenUsdcPrice) /\n            (10 ** (8 + tokenDecimals - 6));\n\n        // Then convert USDC amount to USDT\n        // Both USDC and USDT have 6 decimals, price feed has 8 decimals\n        expectedAmount = (usdcAmount * usdcUsdtPrice) / 1e8;\n\n        // Apply slippage tolerance\n        return\n            (expectedAmount * (SLIPPAGE_DENOMINATOR - slippageTolerance)) /\n            SLIPPAGE_DENOMINATOR;\n    }\n\n    function unstakeAndCollect(address pool, uint256 tokenId) external {\n        require(approvedPools[pool], \"Pool not approved for this module\");\n\n        ISafe safe = ISafe(payable(msg.sender));\n        address gaugeAddress = ICLPool(pool).gauge();\n        ICLGauge clGauge = ICLGauge(gaugeAddress);\n        bool isStaked = clGauge.stakedContains(address(safe), tokenId);\n\n        require(isStaked, \"Position not staked\");\n\n        uint256 initialUsdtBalance = _getUsdtBalance(address(safe));\n\n        uint256 veloAmount = clGauge.earned(address(safe), tokenId);\n\n        _handleUnstakeAndCollect(safe, gaugeAddress, tokenId);\n\n        uint256 finalUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 totalUsdtAmount = finalUsdtBalance - initialUsdtBalance;\n\n        emit EarningsCollected(\n            address(safe),\n            pool,\n            tokenId,\n            0,\n            0,\n            veloAmount,\n            totalUsdtAmount\n        );\n    }\n\n    /// @notice Handles unstaking from gauge if position is staked\n    function _handleUnstakeAndCollect(\n        ISafe safe,\n        address gauge,\n        uint256 tokenId\n    ) internal {\n        require(gauge != address(0), \"Invalid gauge\");\n\n        ICLGauge clGauge = ICLGauge(gauge);\n        bool isStaked = clGauge.stakedContains(address(safe), tokenId);\n\n        require(isStaked, \"Position not staked\");\n\n        uint256 amount = clGauge.earned(address(safe), tokenId);\n\n        bytes memory withdrawData = abi.encodeWithSelector(\n            ICLGauge.withdraw.selector,\n            tokenId\n        );\n\n        require(\n            safe.execTransactionFromModule(\n                gauge,\n                0,\n                withdrawData,\n                Enum.Operation.Call\n            ),\n            \"Gauge withdraw failed\"\n        );\n\n        if (amount > 0) {\n            require(\n                _swapToStable(safe, rewardToken, amount),\n                \"Swap to stable failed\"\n            );\n        }\n    }\n\n    /// @notice Decreases liquidity and returns new token amounts\n    function _decreaseLiquidity(\n        ISafe safe,\n        address nftManager,\n        uint256 tokenId,\n        uint128 liquidity\n    ) internal {\n        bytes memory decreaseData = abi.encodeWithSelector(\n            INonfungiblePositionManager.decreaseLiquidity.selector,\n            INonfungiblePositionManager.DecreaseLiquidityParams({\n                tokenId: tokenId,\n                liquidity: liquidity,\n                amount0Min: 0,\n                amount1Min: 0,\n                deadline: block.timestamp\n            })\n        );\n        require(\n            safe.execTransactionFromModule(\n                nftManager,\n                0,\n                decreaseData,\n                Enum.Operation.Call\n            ),\n            \"Decrease liquidity failed\"\n        );\n    }\n\n    /// @notice Collects owed tokens from positions.\n    // Which may be earned fees or LP tokens after decreasing liquidity\n    function _collectOwed(\n        ISafe safe,\n        address nftManager,\n        uint256 tokenId\n    ) internal returns (uint256 amount0, uint256 amount1) {\n        bytes memory collectData = abi.encodeWithSelector(\n            INonfungiblePositionManager.collect.selector,\n            INonfungiblePositionManager.CollectParams({\n                tokenId: tokenId,\n                recipient: address(safe),\n                amount0Max: type(uint128).max,\n                amount1Max: type(uint128).max\n            })\n        );\n\n        (bool success, bytes memory returnData) = safe\n            .execTransactionFromModuleReturnData(\n                nftManager,\n                0,\n                collectData,\n                Enum.Operation.Call\n            );\n        require(success, \"Collect failed\");\n        (amount0, amount1) = abi.decode(returnData, (uint256, uint256));\n    }\n\n    /// @notice Swaps tokens to USDT using the stored path\n    function _swapToStable(\n        ISafe safe,\n        address token,\n        uint256 amountIn\n    ) internal returns (bool) {\n        if (amountIn == 0) return true;\n        if (token == rewardStable) return true;\n\n        bytes memory path = _getSwapPath(token, rewardStable);\n\n        // Approve the swap router to spend the input token\n        bytes memory approveData = abi.encodeWithSelector(\n            IERC20.approve.selector,\n            swapRouter,\n            amountIn\n        );\n        require(\n            safe.execTransactionFromModule(\n                token,\n                0,\n                approveData,\n                Enum.Operation.Call\n            ),\n            \"Token approve failed\"\n        );\n\n        // Calculate minimum amount out with slippage tolerance\n        uint256 amountOutMinimum = _calculateAmountOutMinimum(token, amountIn);\n\n        // Create the swap parameters\n        ISwapRouter.ExactInputParams memory params = ISwapRouter\n            .ExactInputParams({\n                path: path,\n                recipient: address(safe),\n                deadline: block.timestamp + 300, // 5-minute deadline\n                amountIn: amountIn,\n                amountOutMinimum: amountOutMinimum\n            });\n\n        // Execute the swap\n        bytes memory swapData = abi.encodeWithSelector(\n            ISwapRouter.exactInput.selector,\n            params\n        );\n\n        return\n            safe.execTransactionFromModule(\n                swapRouter,\n                0,\n                swapData,\n                Enum.Operation.Call\n            );\n    }\n\n    /// @notice Main function to withdraw liquidity and collect fees\n    function withdrawAndCollect(address pool, uint256 tokenId) external {\n        require(approvedPools[pool], \"Pool not approved for this module\");\n\n        ISafe safe = ISafe(payable(msg.sender));\n        address nftManager = ICLPool(pool).nft();\n        INonfungiblePositionManager nftPositionManager = INonfungiblePositionManager(\n                nftManager\n            );\n\n        // Get initial position details\n        (\n            ,\n            ,\n            address token0,\n            address token1,\n            ,\n            ,\n            ,\n            uint128 liquidity,\n            ,\n            ,\n            ,\n\n        ) = nftPositionManager.positions(tokenId);\n\n        uint256 initialUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 veloAmount = 0;\n\n        address gaugeAddress = ICLPool(pool).gauge();\n        ICLGauge clGauge = ICLGauge(gaugeAddress);\n        bool isStaked = clGauge.stakedContains(address(safe), tokenId);\n\n        // Handle unstaking if needed\n        if (isStaked) {\n            veloAmount = clGauge.earned(address(safe), tokenId);\n            _handleUnstakeAndCollect(safe, gaugeAddress, tokenId);\n        }\n\n        uint256 amount0 = 0;\n        uint256 amount1 = 0;\n\n        if (!isStaked) {\n            // collect actual fees since collect can give u LP tokens and others\n            (amount0, amount1) = _collectOwed(safe, nftManager, tokenId);\n            if (amount0 > 0) {\n                // Swap earned fees to USDT\n                require(\n                    _swapToStable(safe, token0, amount0),\n                    \"Token0 swap failed\"\n                );\n            }\n\n            if (amount1 > 0) {\n                require(\n                    _swapToStable(safe, token1, amount1),\n                    \"Token1 swap failed\"\n                );\n            }\n        }\n\n        // Decrease liquidity if any\n        if (liquidity > 0) {\n            _decreaseLiquidity(safe, nftManager, tokenId, liquidity);\n        }\n\n        _collectOwed(safe, nftManager, tokenId);\n        // Collect fees\n\n        _burnPosition(safe, nftManager, tokenId);\n\n        uint256 finalUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 totalUsdtAmount = finalUsdtBalance - initialUsdtBalance;\n\n        // when token is staked the amount0 and amount1 are 0 because we dont get to collect those\n        // when not staked we collect the fees (velos)\n        emit EarningsCollected(\n            address(safe),\n            pool,\n            tokenId,\n            amount0,\n            amount1,\n            veloAmount,\n            totalUsdtAmount\n        );\n    }\n\n    function _burnPosition(\n        ISafe safe,\n        address nftManager,\n        uint256 tokenId\n    ) internal {\n        bytes memory burnData = abi.encodeWithSelector(\n            INonfungiblePositionManager.burn.selector,\n            tokenId\n        );\n        require(\n            safe.execTransactionFromModule(\n                nftManager,\n                0,\n                burnData,\n                Enum.Operation.Call\n            ),\n            \"Burn failed\"\n        );\n    }\n\n    /// @notice Collects fees from a position and converts them to USDT\n    /// @param pool The pool address\n    /// @param tokenId The ID of the position\n    function collectAndConvertFees(address pool, uint256 tokenId) external {\n        require(approvedPools[pool], \"Pool not approved for this module\");\n\n        ISafe safe = ISafe(payable(msg.sender));\n        address nftManager = ICLPool(pool).nft();\n        INonfungiblePositionManager nftPositionManager = INonfungiblePositionManager(\n                nftManager\n            );\n\n        // Get initial position details\n        (\n            ,\n            ,\n            address token0,\n            address token1,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n\n        ) = nftPositionManager.positions(tokenId);\n\n        address gaugeAddress = ICLPool(pool).gauge();\n        ICLGauge clGauge = ICLGauge(gaugeAddress);\n\n        uint256 initialUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 veloAmount;\n        uint256 amount0;\n        uint256 amount1;\n\n        bool isStaked = clGauge.stakedContains(address(safe), tokenId);\n\n        // Claim gauge rewards if staked\n        if (isStaked) {\n            veloAmount = clGauge.earned(address(safe), tokenId);\n            if (veloAmount > 0) {\n                bytes memory getRewardData = abi.encodeWithSelector(\n                    ICLGauge.getReward.selector,\n                    tokenId\n                );\n                require(\n                    safe.execTransactionFromModule(\n                        gaugeAddress,\n                        0,\n                        getRewardData,\n                        Enum.Operation.Call\n                    ),\n                    \"Gauge get reward failed\"\n                );\n\n                require(\n                    _swapToStable(safe, rewardToken, veloAmount),\n                    \"Swap to stable failed\"\n                );\n            }\n        } else {\n            // Collect fees\n            (amount0, amount1) = _collectOwed(safe, nftManager, tokenId);\n\n            // Swap collected fees to USDT if any\n            if (amount0 > 0) {\n                require(\n                    _swapToStable(safe, token0, amount0),\n                    \"Token0 swap failed\"\n                );\n            }\n            if (amount1 > 0) {\n                require(\n                    _swapToStable(safe, token1, amount1),\n                    \"Token1 swap failed\"\n                );\n            }\n        }\n\n        uint256 finalUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 totalUsdtAmount = finalUsdtBalance - initialUsdtBalance;\n\n        emit EarningsCollected(\n            address(safe),\n            pool,\n            tokenId,\n            amount0,\n            amount1,\n            veloAmount,\n            totalUsdtAmount\n        );\n    }\n\n    // Helper function to get USDT balance\n    function _getUsdtBalance(address safe) internal view returns (uint256) {\n        return IERC20(rewardStable).balanceOf(safe);\n    }\n\n    /// @notice Stakes a position in the gauge and collects any earned fees before staking\n    /// @param pool The pool address\n    /// @param tokenId The ID of the position\n    function stakeAndCollect(address pool, uint256 tokenId) external {\n        require(approvedPools[pool], \"Pool not approved for this module\");\n\n        ISafe safe = ISafe(payable(msg.sender));\n        address nftManager = ICLPool(pool).nft();\n        address gaugeAddress = ICLPool(pool).gauge();\n\n        INonfungiblePositionManager nftPositionManager = INonfungiblePositionManager(\n                nftManager\n            );\n        ICLGauge clGauge = ICLGauge(gaugeAddress);\n\n        // Check if already staked\n        bool isStaked = clGauge.stakedContains(address(safe), tokenId);\n        require(!isStaked, \"Position already staked\");\n\n        uint256 initialUsdtBalance = _getUsdtBalance(address(safe));\n\n        // Get initial position details\n        (\n            ,\n            ,\n            address token0,\n            address token1,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n\n        ) = nftPositionManager.positions(tokenId);\n\n        // Collect any pending fees before staking\n        (uint256 amount0, uint256 amount1) = _collectOwed(\n            safe,\n            nftManager,\n            tokenId\n        );\n\n        // Swap collected fees to USDT if any\n        if (amount0 > 0) {\n            require(_swapToStable(safe, token0, amount0), \"Token0 swap failed\");\n        }\n        if (amount1 > 0) {\n            require(_swapToStable(safe, token1, amount1), \"Token1 swap failed\");\n        }\n\n        // Check if NFT approval is needed\n        bool isApproved = INonfungiblePositionManager(nftManager)\n            .isApprovedForAll(address(safe), gaugeAddress);\n\n        if (!isApproved) {\n            bytes memory approvalData = abi.encodeWithSelector(\n                INonfungiblePositionManager.setApprovalForAll.selector,\n                gaugeAddress,\n                true\n            );\n            require(\n                safe.execTransactionFromModule(\n                    nftManager,\n                    0,\n                    approvalData,\n                    Enum.Operation.Call\n                ),\n                \"NFT approval failed\"\n            );\n        }\n\n        // Stake the position\n        bytes memory stakeData = abi.encodeWithSelector(\n            ICLGauge.deposit.selector,\n            tokenId\n        );\n        require(\n            safe.execTransactionFromModule(\n                gaugeAddress,\n                0,\n                stakeData,\n                Enum.Operation.Call\n            ),\n            \"Stake failed\"\n        );\n\n        uint256 finalUsdtBalance = _getUsdtBalance(address(safe));\n        uint256 totalUsdtAmount = finalUsdtBalance - initialUsdtBalance;\n\n        emit EarningsCollected(\n            address(safe),\n            pool,\n            tokenId,\n            amount0,\n            amount1,\n            0, // No velo rewards yet since we just staked\n            totalUsdtAmount\n        );\n    }\n}\n"
      },
      "contracts/choloInterfaces.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nstruct Route {\n    address from;\n    address to;\n    bool stable;\n}\n\ninterface AggregatorV3Interface {\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n\n    function decimals() external view returns (uint8);\n}\n\ninterface ICLPool {\n    /// @notice The gauge corresponding to this pool\n    /// @return The gauge contract address\n    function gauge() external view returns (address);\n\n    /// @notice The nft manager\n    /// @return The nft manager contract address\n    function nft() external view returns (address);\n}\n\ninterface ICLGauge {\n    /// @notice Check whether a position is staked in the gauge by a certain user\n    /// @param depositor The address of the user\n    /// @param tokenId The tokenId of the position\n    /// @return Whether the position is staked in the gauge\n    function stakedContains(\n        address depositor,\n        uint256 tokenId\n    ) external view returns (bool);\n\n    /// @notice Used to deposit a CL position into the gauge\n    /// @notice Allows the user to receive emissions instead of fees\n    /// @param tokenId The tokenId of the position\n    function deposit(uint256 tokenId) external;\n\n    /// @notice Returns the claimable rewards for a given account and tokenId\n    /// @dev Throws if account is not the position owner\n    /// @dev pool.updateRewardsGrowthGlobal() needs to be called first, to return the correct claimable rewards\n    /// @param account The address of the user\n    /// @param tokenId The tokenId of the position\n    /// @return The amount of claimable reward\n    function earned(\n        address account,\n        uint256 tokenId\n    ) external view returns (uint256);\n\n    /// @notice Used to withdraw a CL position from the gauge\n    /// @notice Allows the user to receive fees instead of emissions\n    /// @notice Outstanding emissions will be collected on withdrawal\n    /// @param tokenId The tokenId of the position\n    function withdraw(uint256 tokenId) external;\n\n    /// @notice Retrieve rewards for a tokenId\n    /// @dev Throws if not called by the position owner\n    /// @param tokenId The tokenId of the position\n    function getReward(uint256 tokenId) external;\n}\n\ninterface INonfungiblePositionManager {\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Returns true if operator is approved to transfer all of owner's tokens\n    /// @param owner The address that owns the NFTs\n    /// @param operator The address that acts on behalf of the owner\n    /// @return True if operator is approved to transfer all of owner's tokens\n    function isApprovedForAll(\n        address owner,\n        address operator\n    ) external view returns (bool);\n\n    /// @notice Approve or remove operator as an operator for the caller\n    /// @param operator The address to approve/remove as an operator\n    /// @param approved True if the operator is approved, false to revoke approval\n    function setApprovalForAll(address operator, bool approved) external;\n\n    function positions(\n        uint256 tokenId\n    )\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            int24 tickSpacing,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    /// @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\n    /// @dev for tokens that have very high decimals.\n    /// @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\n    /// @dev This is equivalent to 1e20 value with 18 decimals.\n    function decreaseLiquidity(\n        DecreaseLiquidityParams calldata params\n    ) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @notice Used to update staked positions before deposit and withdraw\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        CollectParams calldata params\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"
      },
      "contracts/ISafe.sol": {
        "content": "// SPDX-License-Identifier: LGPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@safe-global/safe-contracts/contracts/common/Enum.sol\";\n\ninterface ISafe {\n    function execTransactionFromModule(\n        address to,\n        uint256 value,\n        bytes memory data,\n        Enum.Operation operation\n    ) external returns (bool);\n\n    function execTransactionFromModuleReturnData(\n        address to,\n        uint256 value,\n        bytes memory data,\n        Enum.Operation operation\n    ) external returns (bool success, bytes memory returnData);\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              281
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 282,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 281,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                281
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ]
          },
          "id": 226,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:1",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [
                225
              ],
              "name": "IERC20",
              "nameLocation": "214:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 159,
                  "name": "Transfer",
                  "nameLocation": "396:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "405:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "427:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "447:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:1"
                  },
                  "src": "390:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 168,
                  "name": "Approval",
                  "nameLocation": "627:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "636:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "659:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "684:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:1"
                  },
                  "src": "621:78:1"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:1",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "821:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:1"
                  },
                  "scope": 225,
                  "src": "775:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:1",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "931:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "971:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:1"
                  },
                  "scope": 225,
                  "src": "912:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1222:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1234:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1267:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:1"
                  },
                  "scope": 225,
                  "src": "1204:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1567:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1582:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1622:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:1"
                  },
                  "scope": 225,
                  "src": "1548:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2326:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2343:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2376:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:1"
                  },
                  "scope": 225,
                  "src": "2309:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2712:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2726:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2738:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2771:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:1"
                  },
                  "scope": 225,
                  "src": "2690:87:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 226,
              "src": "204:2575:1",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "106:2674:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ],
            "IERC20Metadata": [
              251
            ]
          },
          "id": 252,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 229,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 252,
              "sourceUnit": 226,
              "src": "151:37:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 228,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 225,
                    "src": "159:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 231,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 225,
                    "src": "306:6:2"
                  },
                  "id": 232,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:2"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 230,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:2",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 251,
              "linearizedBaseContracts": [
                251,
                225
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:2"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "417:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:2"
                  },
                  "scope": 251,
                  "src": "378:54:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:2",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 244,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:2"
                  },
                  "returnParameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "540:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:2"
                  },
                  "scope": 251,
                  "src": "499:56:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 245,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:2",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 250,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:2"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "674:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:2"
                  },
                  "scope": 251,
                  "src": "631:50:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 252,
              "src": "278:405:2",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "125:559:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              281
            ]
          },
          "id": 282,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 253,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 254,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:3",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 281,
              "linearizedBaseContracts": [
                281
              ],
              "name": "Context",
              "nameLocation": "642:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "718:34:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 258,
                        "id": 261,
                        "nodeType": "Return",
                        "src": "728:17:3"
                      }
                    ]
                  },
                  "id": 263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:3"
                  },
                  "returnParameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "709:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:3"
                  },
                  "scope": 281,
                  "src": "656:96:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "825:32:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 268,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:3",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 267,
                        "id": 270,
                        "nodeType": "Return",
                        "src": "835:15:3"
                      }
                    ]
                  },
                  "id": 272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:3"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "809:14:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:3"
                  },
                  "scope": 281,
                  "src": "758:99:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "935:25:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 276,
                        "id": 278,
                        "nodeType": "Return",
                        "src": "945:8:3"
                      }
                    ]
                  },
                  "id": 280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "926:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:3"
                  },
                  "scope": 281,
                  "src": "863:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 282,
              "src": "624:338:3",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:3"
        },
        "id": 3
      },
      "@safe-global/safe-contracts/contracts/common/Enum.sol": {
        "ast": {
          "absolutePath": "@safe-global/safe-contracts/contracts/common/Enum.sol",
          "exportedSymbols": {
            "Enum": [
              288
            ]
          },
          "id": 289,
          "license": "LGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 283,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:31:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Enum",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 284,
                "nodeType": "StructuredDocumentation",
                "src": "75:109:4",
                "text": " @title Enum - Collection of enums used in Safe contracts.\n @author Richard Meissner - @rmeissner"
              },
              "fullyImplemented": true,
              "id": 288,
              "linearizedBaseContracts": [
                288
              ],
              "name": "Enum",
              "nameLocation": "203:4:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Enum.Operation",
                  "id": 287,
                  "members": [
                    {
                      "id": 285,
                      "name": "Call",
                      "nameLocation": "239:4:4",
                      "nodeType": "EnumValue",
                      "src": "239:4:4"
                    },
                    {
                      "id": 286,
                      "name": "DelegateCall",
                      "nameLocation": "253:12:4",
                      "nodeType": "EnumValue",
                      "src": "253:12:4"
                    }
                  ],
                  "name": "Operation",
                  "nameLocation": "219:9:4",
                  "nodeType": "EnumDefinition",
                  "src": "214:57:4"
                }
              ],
              "scope": 289,
              "src": "185:88:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "42:232:4"
        },
        "id": 4
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "ast": {
          "absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
          "exportedSymbols": {
            "IUniswapV3SwapCallback": [
              302
            ]
          },
          "id": 303,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 290,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV3SwapCallback",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 291,
                "nodeType": "StructuredDocumentation",
                "src": "71:144:5",
                "text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
              },
              "fullyImplemented": false,
              "id": 302,
              "linearizedBaseContracts": [
                302
              ],
              "name": "IUniswapV3SwapCallback",
              "nameLocation": "225:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 292,
                    "nodeType": "StructuredDocumentation",
                    "src": "254:898:5",
                    "text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
                  },
                  "functionSelector": "fa461e33",
                  "id": 301,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uniswapV3SwapCallback",
                  "nameLocation": "1166:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "amount0Delta",
                        "nameLocation": "1204:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "1197:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1197:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "amount1Delta",
                        "nameLocation": "1233:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "1226:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1270:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "1255:19:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1187:93:5"
                  },
                  "returnParameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1289:0:5"
                  },
                  "scope": 302,
                  "src": "1157:133:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 303,
              "src": "215:1077:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "45:1248:5"
        },
        "id": 5
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "exportedSymbols": {
            "ISwapRouter": [
              402
            ],
            "IUniswapV3SwapCallback": [
              302
            ]
          },
          "id": 403,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 304,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:6"
            },
            {
              "id": 305,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:19:6"
            },
            {
              "absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
              "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
              "id": 306,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 403,
              "sourceUnit": 303,
              "src": "91:83:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 308,
                    "name": "IUniswapV3SwapCallback",
                    "nameLocations": [
                      "305:22:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 302,
                    "src": "305:22:6"
                  },
                  "id": 309,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:22:6"
                }
              ],
              "canonicalName": "ISwapRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 307,
                "nodeType": "StructuredDocumentation",
                "src": "176:104:6",
                "text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
              },
              "fullyImplemented": false,
              "id": 402,
              "linearizedBaseContracts": [
                402,
                302
              ],
              "name": "ISwapRouter",
              "nameLocation": "290:11:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ISwapRouter.ExactInputSingleParams",
                  "id": 326,
                  "members": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "382:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "374:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "374:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "407:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "399:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "399:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "432:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "425:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "425:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "453:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "445:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "445:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "480:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "472:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "472:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 321,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "506:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "498:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "498:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "amountOutMinimum",
                      "nameLocation": "532:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "524:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "524:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "sqrtPriceLimitX96",
                      "nameLocation": "566:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 326,
                      "src": "558:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "558:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactInputSingleParams",
                  "nameLocation": "341:22:6",
                  "nodeType": "StructDefinition",
                  "scope": 402,
                  "src": "334:256:6",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:250:6",
                    "text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
                  },
                  "functionSelector": "414bf389",
                  "id": 335,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactInputSingle",
                  "nameLocation": "860:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "909:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "877:38:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$326_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        },
                        "typeName": {
                          "id": 329,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 328,
                            "name": "ExactInputSingleParams",
                            "nameLocations": [
                              "877:22:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 326,
                            "src": "877:22:6"
                          },
                          "referencedDeclaration": 326,
                          "src": "877:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$326_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "876:40:6"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "951:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "943:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "943:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "942:19:6"
                  },
                  "scope": 402,
                  "src": "851:111:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISwapRouter.ExactInputParams",
                  "id": 346,
                  "members": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "1008:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "1002:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1002:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1030:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "1022:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1022:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "1057:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "1049:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1083:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "1075:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "amountOutMinimum",
                      "nameLocation": "1109:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "1101:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1101:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactInputParams",
                  "nameLocation": "975:16:6",
                  "nodeType": "StructDefinition",
                  "scope": 402,
                  "src": "968:164:6",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 347,
                    "nodeType": "StructuredDocumentation",
                    "src": "1138:273:6",
                    "text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
                  },
                  "functionSelector": "c04b8d59",
                  "id": 355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactInput",
                  "nameLocation": "1425:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "1462:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "1436:32:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputParams_$346_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactInputParams"
                        },
                        "typeName": {
                          "id": 349,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 348,
                            "name": "ExactInputParams",
                            "nameLocations": [
                              "1436:16:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 346,
                            "src": "1436:16:6"
                          },
                          "referencedDeclaration": 346,
                          "src": "1436:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputParams_$346_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactInputParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1435:34:6"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1504:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "1496:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:19:6"
                  },
                  "scope": 402,
                  "src": "1416:99:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISwapRouter.ExactOutputSingleParams",
                  "id": 372,
                  "members": [
                    {
                      "constant": false,
                      "id": 357,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "1570:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1562:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1562:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "1595:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1587:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1587:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1620:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1613:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1613:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1641:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1633:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1633:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "1668:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1660:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1660:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 367,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "1694:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1686:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1686:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "amountInMaximum",
                      "nameLocation": "1721:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1713:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1713:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 371,
                      "mutability": "mutable",
                      "name": "sqrtPriceLimitX96",
                      "nameLocation": "1754:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 372,
                      "src": "1746:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "1746:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactOutputSingleParams",
                  "nameLocation": "1528:23:6",
                  "nodeType": "StructDefinition",
                  "scope": 402,
                  "src": "1521:257:6",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "1784:250:6",
                    "text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
                  },
                  "functionSelector": "db3e2198",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactOutputSingle",
                  "nameLocation": "2048:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "2099:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "2066:39:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputSingleParams_$372_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                        },
                        "typeName": {
                          "id": 375,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 374,
                            "name": "ExactOutputSingleParams",
                            "nameLocations": [
                              "2066:23:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 372,
                            "src": "2066:23:6"
                          },
                          "referencedDeclaration": 372,
                          "src": "2066:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$372_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2065:41:6"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2141:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "2133:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2133:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2132:18:6"
                  },
                  "scope": 402,
                  "src": "2039:112:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISwapRouter.ExactOutputParams",
                  "id": 392,
                  "members": [
                    {
                      "constant": false,
                      "id": 383,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2198:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2192:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 382,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2192:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2220:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2212:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2212:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 387,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "2247:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2239:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2239:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2273:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2265:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2265:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "amountInMaximum",
                      "nameLocation": "2300:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "2292:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2292:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactOutputParams",
                  "nameLocation": "2164:17:6",
                  "nodeType": "StructDefinition",
                  "scope": 402,
                  "src": "2157:165:6",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "2328:284:6",
                    "text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
                  },
                  "functionSelector": "f28c0498",
                  "id": 401,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactOutput",
                  "nameLocation": "2626:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "2665:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "2638:33:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputParams_$392_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputParams"
                        },
                        "typeName": {
                          "id": 395,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 394,
                            "name": "ExactOutputParams",
                            "nameLocations": [
                              "2638:17:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 392,
                            "src": "2638:17:6"
                          },
                          "referencedDeclaration": 392,
                          "src": "2638:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$392_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2637:35:6"
                  },
                  "returnParameters": {
                    "id": 400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2707:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "2699:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2698:18:6"
                  },
                  "scope": 402,
                  "src": "2617:100:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 403,
              "src": "280:2439:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "45:2675:6"
        },
        "id": 6
      },
      "contracts/CholoDromeModule.sol": {
        "ast": {
          "absolutePath": "contracts/CholoDromeModule.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              2262
            ],
            "CholoDromeModule": [
              2200
            ],
            "Context": [
              281
            ],
            "Enum": [
              288
            ],
            "ICLGauge": [
              2314
            ],
            "ICLPool": [
              2275
            ],
            "IERC20": [
              225
            ],
            "IERC20Metadata": [
              251
            ],
            "INonfungiblePositionManager": [
              2410
            ],
            "ISafe": [
              2234
            ],
            "ISwapRouter": [
              402
            ],
            "IUniswapV3SwapCallback": [
              302
            ],
            "Ownable": [
              147
            ],
            "Route": [
              2243
            ]
          },
          "id": 2201,
          "license": "LGPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 404,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 405,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 252,
              "src": "91:75:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 148,
              "src": "167:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@safe-global/safe-contracts/contracts/common/Enum.sol",
              "file": "@safe-global/safe-contracts/contracts/common/Enum.sol",
              "id": 407,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 289,
              "src": "220:63:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/choloInterfaces.sol",
              "file": "./choloInterfaces.sol",
              "id": 408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 2411,
              "src": "284:31:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
              "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
              "id": 409,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 403,
              "src": "316:68:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/ISafe.sol",
              "file": "./ISafe.sol",
              "id": 410,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2201,
              "sourceUnit": 2235,
              "src": "385:21:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 411,
                    "name": "Ownable",
                    "nameLocations": [
                      "437:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "437:7:7"
                  },
                  "id": 412,
                  "nodeType": "InheritanceSpecifier",
                  "src": "437:7:7"
                }
              ],
              "canonicalName": "CholoDromeModule",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2200,
              "linearizedBaseContracts": [
                2200,
                147,
                281
              ],
              "name": "CholoDromeModule",
              "nameLocation": "417:16:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "f7c618c1",
                  "id": 414,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "466:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "451:26:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f2bf87e3",
                  "id": 416,
                  "mutability": "mutable",
                  "name": "rewardStable",
                  "nameLocation": "520:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "505:27:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c31c9c07",
                  "id": 418,
                  "mutability": "mutable",
                  "name": "swapRouter",
                  "nameLocation": "575:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "560:25:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "89a30271",
                  "id": 420,
                  "mutability": "immutable",
                  "name": "USDC",
                  "nameLocation": "657:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "632:29:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 423,
                  "mutability": "constant",
                  "name": "SLIPPAGE_DENOMINATOR",
                  "nameLocation": "693:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "668:53:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "716:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "d03153aa",
                  "id": 426,
                  "mutability": "mutable",
                  "name": "slippageTolerance",
                  "nameLocation": "742:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "727:37:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530",
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "762:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50_by_1",
                      "typeString": "int_const 50"
                    },
                    "value": "50"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f0bbcec4",
                  "id": 430,
                  "mutability": "mutable",
                  "name": "approvedPools",
                  "nameLocation": "877:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "845:45:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 429,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 427,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "853:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "845:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 428,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "864:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4a6a749c",
                  "id": 436,
                  "mutability": "mutable",
                  "name": "swapPaths",
                  "nameLocation": "1017:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "964:62:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes_storage_$_$",
                    "typeString": "mapping(address => mapping(address => bytes))"
                  },
                  "typeName": {
                    "id": 435,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 431,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "972:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "964:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes_storage_$_$",
                      "typeString": "mapping(address => mapping(address => bytes))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 434,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 432,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "991:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "983:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes_storage_$",
                        "typeString": "mapping(address => bytes)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 433,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1002:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f90c6906",
                  "id": 442,
                  "mutability": "mutable",
                  "name": "priceFeeds",
                  "nameLocation": "1149:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "1094:65:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                    "typeString": "mapping(address => mapping(address => address))"
                  },
                  "typeName": {
                    "id": 441,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 437,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1102:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1094:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                      "typeString": "mapping(address => mapping(address => address))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 440,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 438,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1121:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1113:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 439,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1132:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e8",
                  "id": 448,
                  "name": "PoolApproved",
                  "nameLocation": "1172:12:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "1201:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1185:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 443,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "1223:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1207:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1184:44:7"
                  },
                  "src": "1166:63:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "987eb3c2f78454541205f72f34839b434c306c9eaf4922efd7c0c3060fdb2e4c",
                  "id": 454,
                  "name": "PoolRemoved",
                  "nameLocation": "1240:11:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "1268:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "1252:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "1290:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "1274:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1274:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:44:7"
                  },
                  "src": "1234:62:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c457dabb1cd0422f2d4ee0e35bed2d324c897ff52ca6d0033a86d6a43ce80502",
                  "id": 470,
                  "name": "EarningsCollected",
                  "nameLocation": "1307:17:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "1350:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1334:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1334:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "1380:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1364:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1364:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1402:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1394:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1394:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1427:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1419:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1419:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 464,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1452:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1444:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 463,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1444:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 466,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "veloAmount",
                        "nameLocation": "1477:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1469:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1469:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 468,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalUsdtAmount",
                        "nameLocation": "1505:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "1497:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1324:202:7"
                  },
                  "src": "1301:226:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "906ff2422a6ffa134f2d7ccaffd446bc0c583a5cb6615749b4b2836942a5fea8",
                  "id": 476,
                  "name": "RewardTokenUpdated",
                  "nameLocation": "1538:18:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldToken",
                        "nameLocation": "1582:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "1566:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newToken",
                        "nameLocation": "1616:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "1600:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1600:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:74:7"
                  },
                  "src": "1532:99:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9d4858dccb76debed7845fd87ec5c769962d072d518c9e34182581abb3e8247c",
                  "id": 482,
                  "name": "RewardStableUpdated",
                  "nameLocation": "1642:19:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldStable",
                        "nameLocation": "1687:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "1671:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1671:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 480,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newStable",
                        "nameLocation": "1722:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "1706:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1706:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:76:7"
                  },
                  "src": "1636:102:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a45306575",
                  "id": 488,
                  "name": "SlippageToleranceUpdated",
                  "nameLocation": "1749:24:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldTolerance",
                        "nameLocation": "1782:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "1774:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1774:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 486,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newTolerance",
                        "nameLocation": "1804:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "1796:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1796:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1773:44:7"
                  },
                  "src": "1743:75:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "749f8bd52d751fb993fa16283117f0242f19e5471f5cb26f1185d1028cd803e5",
                  "id": 496,
                  "name": "PriceFeedUpdated",
                  "nameLocation": "1829:16:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "fromToken",
                        "nameLocation": "1871:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "1855:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1855:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "toToken",
                        "nameLocation": "1906:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "1890:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1890:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 494,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "priceFeed",
                        "nameLocation": "1939:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "1923:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1923:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1845:109:7"
                  },
                  "src": "1823:132:7"
                },
                {
                  "body": {
                    "id": 578,
                    "nodeType": "Block",
                    "src": "2132:462:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 513,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 498,
                                "src": "2150:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 516,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2168:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2160:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 514,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2160:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2160:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2150:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206f776e6572",
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2172:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                                "typeString": "literal_string \"Invalid owner\""
                              },
                              "value": "Invalid owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
                                "typeString": "literal_string \"Invalid owner\""
                              }
                            ],
                            "id": 512,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2142:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2142:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "2142:46:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 523,
                                "name": "_rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "2206:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2230:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2222:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 524,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2222:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2222:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2206:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072657761726420746f6b656e",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2234:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
                                "typeString": "literal_string \"Invalid reward token\""
                              },
                              "value": "Invalid reward token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
                                "typeString": "literal_string \"Invalid reward token\""
                              }
                            ],
                            "id": 522,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2198:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2198:59:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "2198:59:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 533,
                                "name": "_rewardStable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "2275:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2300:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2292:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 534,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2292:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2292:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2275:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072657761726420737461626c65",
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2304:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eed88a0aa7eac44bf743197932779f090be781caeb0a0cd7a021841ff53a2867",
                                "typeString": "literal_string \"Invalid reward stable\""
                              },
                              "value": "Invalid reward stable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eed88a0aa7eac44bf743197932779f090be781caeb0a0cd7a021841ff53a2867",
                                "typeString": "literal_string \"Invalid reward stable\""
                              }
                            ],
                            "id": 532,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2267:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:61:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 541,
                        "nodeType": "ExpressionStatement",
                        "src": "2267:61:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 543,
                                "name": "_swapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 504,
                                "src": "2346:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 546,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2369:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2361:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 544,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2361:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2361:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2346:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207377617020726f75746572",
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2373:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a80ff0b859aa4f4f9d71f3bd675f38ba96b010e98f529811ec38e8b4da949a9c",
                                "typeString": "literal_string \"Invalid swap router\""
                              },
                              "value": "Invalid swap router"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a80ff0b859aa4f4f9d71f3bd675f38ba96b010e98f529811ec38e8b4da949a9c",
                                "typeString": "literal_string \"Invalid swap router\""
                              }
                            ],
                            "id": 542,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2338:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2338:57:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 551,
                        "nodeType": "ExpressionStatement",
                        "src": "2338:57:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 553,
                                "name": "_usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "2413:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 556,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2430:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2422:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 554,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2422:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2422:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2413:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420555344432061646472657373",
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2434:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
                                "typeString": "literal_string \"Invalid USDC address\""
                              },
                              "value": "Invalid USDC address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_768308344d94e849ff3f5e31c8c5ffd3ba25816fc055df9374d86b549adb5dbe",
                                "typeString": "literal_string \"Invalid USDC address\""
                              }
                            ],
                            "id": 552,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2405:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2405:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "2405:52:7"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "2467:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "2481:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2467:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "2467:26:7"
                      },
                      {
                        "expression": {
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 566,
                            "name": "rewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2503:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 567,
                            "name": "_rewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "2518:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2503:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 569,
                        "nodeType": "ExpressionStatement",
                        "src": "2503:28:7"
                      },
                      {
                        "expression": {
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 570,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "2541:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 571,
                            "name": "_swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "2554:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2541:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "2541:24:7"
                      },
                      {
                        "expression": {
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 574,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "2575:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 575,
                            "name": "_usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "2582:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2575:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 577,
                        "nodeType": "ExpressionStatement",
                        "src": "2575:12:7"
                      }
                    ]
                  },
                  "id": 579,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 509,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "2124:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 510,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 508,
                        "name": "Ownable",
                        "nameLocations": [
                          "2116:7:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2116:7:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2116:15:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 498,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1990:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "1982:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1982:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "_rewardToken",
                        "nameLocation": "2014:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2006:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2006:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "_rewardStable",
                        "nameLocation": "2044:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2036:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2036:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "_swapRouter",
                        "nameLocation": "2075:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2067:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2067:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "_usdc",
                        "nameLocation": "2104:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2096:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2096:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1972:143:7"
                  },
                  "returnParameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2132:0:7"
                  },
                  "scope": 2200,
                  "src": "1961:633:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 607,
                    "nodeType": "Block",
                    "src": "2839:255:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 588,
                                "name": "_slippageTolerance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "2857:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2879:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "2857:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536c69707061676520746f6f2068696768",
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2885:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
                                "typeString": "literal_string \"Slippage too high\""
                              },
                              "value": "Slippage too high"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a86e69a466710f7cd7b4fb45698efeb7621db06508eb8ce01e2139f051412eb",
                                "typeString": "literal_string \"Slippage too high\""
                              }
                            ],
                            "id": 587,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2849:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2849:56:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 593,
                        "nodeType": "ExpressionStatement",
                        "src": "2849:56:7"
                      },
                      {
                        "assignments": [
                          595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 595,
                            "mutability": "mutable",
                            "name": "oldTolerance",
                            "nameLocation": "2934:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 607,
                            "src": "2926:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 594,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2926:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 597,
                        "initialValue": {
                          "id": 596,
                          "name": "slippageTolerance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "2949:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2926:40:7"
                      },
                      {
                        "expression": {
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 598,
                            "name": "slippageTolerance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "2976:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 599,
                            "name": "_slippageTolerance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "2996:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2976:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 601,
                        "nodeType": "ExpressionStatement",
                        "src": "2976:38:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 603,
                              "name": "oldTolerance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "3054:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 604,
                              "name": "_slippageTolerance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "3068:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 602,
                            "name": "SlippageToleranceUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "3029:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3029:58:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 606,
                        "nodeType": "EmitStatement",
                        "src": "3024:63:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 580,
                    "nodeType": "StructuredDocumentation",
                    "src": "2600:143:7",
                    "text": "@notice Set the slippage tolerance for swaps\n @param _slippageTolerance The new slippage tolerance (in basis points, e.g. 50 = 0.5%)"
                  },
                  "functionSelector": "117da1ee",
                  "id": 608,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 585,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 584,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2829:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2829:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2829:9:7"
                    }
                  ],
                  "name": "setSlippageTolerance",
                  "nameLocation": "2757:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "_slippageTolerance",
                        "nameLocation": "2795:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 608,
                        "src": "2787:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2787:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2777:42:7"
                  },
                  "returnParameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2839:0:7"
                  },
                  "scope": 2200,
                  "src": "2748:346:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 640,
                    "nodeType": "Block",
                    "src": "3299:181:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 617,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 611,
                                "src": "3317:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3333:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3325:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 618,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3325:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3325:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3317:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420706f6f6c",
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3337:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f360b33bfe895928de02515948a0ed001f38b1feb515d5228209e7ea318f2dae",
                                "typeString": "literal_string \"Invalid pool\""
                              },
                              "value": "Invalid pool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f360b33bfe895928de02515948a0ed001f38b1feb515d5228209e7ea318f2dae",
                                "typeString": "literal_string \"Invalid pool\""
                              }
                            ],
                            "id": 616,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3309:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3309:43:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "3309:43:7"
                      },
                      {
                        "expression": {
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 626,
                              "name": "approvedPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3362:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 628,
                            "indexExpression": {
                              "id": 627,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "3376:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3362:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3384:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3362:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "3362:26:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3424:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3416:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 633,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3416:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3416:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 637,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "3428:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 632,
                            "name": "PoolApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "3403:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3403:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 639,
                        "nodeType": "EmitStatement",
                        "src": "3398:35:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 609,
                    "nodeType": "StructuredDocumentation",
                    "src": "3100:140:7",
                    "text": "@notice Approve a pool for all safes\n @dev Can only be called by the owner\n @param pool The address of the pool to approve"
                  },
                  "functionSelector": "424c265b",
                  "id": 641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 614,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 613,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3289:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3289:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3289:9:7"
                    }
                  ],
                  "name": "approvePool",
                  "nameLocation": "3254:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "3274:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "3266:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3266:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3265:14:7"
                  },
                  "returnParameters": {
                    "id": 615,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3299:0:7"
                  },
                  "scope": 2200,
                  "src": "3245:235:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 673,
                    "nodeType": "Block",
                    "src": "3695:181:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 650,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 644,
                                "src": "3713:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3729:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3721:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 651,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3721:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3721:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3713:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420706f6f6c",
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3733:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f360b33bfe895928de02515948a0ed001f38b1feb515d5228209e7ea318f2dae",
                                "typeString": "literal_string \"Invalid pool\""
                              },
                              "value": "Invalid pool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f360b33bfe895928de02515948a0ed001f38b1feb515d5228209e7ea318f2dae",
                                "typeString": "literal_string \"Invalid pool\""
                              }
                            ],
                            "id": 649,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3705:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3705:43:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 658,
                        "nodeType": "ExpressionStatement",
                        "src": "3705:43:7"
                      },
                      {
                        "expression": {
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 659,
                              "name": "approvedPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3758:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 661,
                            "indexExpression": {
                              "id": 660,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "3772:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3758:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3780:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3758:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 664,
                        "nodeType": "ExpressionStatement",
                        "src": "3758:27:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3820:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3812:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 666,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3812:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3812:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 670,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "3824:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 665,
                            "name": "PoolRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "3800:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:29:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 672,
                        "nodeType": "EmitStatement",
                        "src": "3795:34:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 642,
                    "nodeType": "StructuredDocumentation",
                    "src": "3486:151:7",
                    "text": "@notice Remove approval for a pool for all safes\n @dev Can only be called by the owner\n @param pool The address of the pool to remove"
                  },
                  "functionSelector": "3b7d0946",
                  "id": 674,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 647,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 646,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3685:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "3685:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3685:9:7"
                    }
                  ],
                  "name": "removePool",
                  "nameLocation": "3651:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "3670:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 674,
                        "src": "3662:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3662:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3661:14:7"
                  },
                  "returnParameters": {
                    "id": 648,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3695:0:7"
                  },
                  "scope": 2200,
                  "src": "3642:234:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "4065:218:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 683,
                                "name": "_newRewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 677,
                                "src": "4083:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 686,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4110:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4102:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 684,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4102:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4102:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4083:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072657761726420746f6b656e",
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4114:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
                                "typeString": "literal_string \"Invalid reward token\""
                              },
                              "value": "Invalid reward token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
                                "typeString": "literal_string \"Invalid reward token\""
                              }
                            ],
                            "id": 682,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4075:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4075:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "4075:62:7"
                      },
                      {
                        "assignments": [
                          693
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 693,
                            "mutability": "mutable",
                            "name": "oldToken",
                            "nameLocation": "4155:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "4147:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 692,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4147:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 695,
                        "initialValue": {
                          "id": 694,
                          "name": "rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "4166:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4147:30:7"
                      },
                      {
                        "expression": {
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 696,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "4187:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 697,
                            "name": "_newRewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "4201:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4187:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 699,
                        "nodeType": "ExpressionStatement",
                        "src": "4187:29:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 701,
                              "name": "oldToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "4250:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 702,
                              "name": "_newRewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "4260:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 700,
                            "name": "RewardTokenUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "4231:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4231:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 704,
                        "nodeType": "EmitStatement",
                        "src": "4226:50:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 675,
                    "nodeType": "StructuredDocumentation",
                    "src": "3882:110:7",
                    "text": "@notice Update the reward token address (Velo)\n @param _newRewardToken The new reward token address"
                  },
                  "functionSelector": "8aee8127",
                  "id": 706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 680,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 679,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4055:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4055:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4055:9:7"
                    }
                  ],
                  "name": "setRewardToken",
                  "nameLocation": "4006:14:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "_newRewardToken",
                        "nameLocation": "4029:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "4021:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4021:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4020:25:7"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4065:0:7"
                  },
                  "scope": 2200,
                  "src": "3997:286:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 737,
                    "nodeType": "Block",
                    "src": "4489:227:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 715,
                                "name": "_newRewardStable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 709,
                                "src": "4507:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4535:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4527:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 716,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4527:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4527:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4507:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642072657761726420737461626c65",
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4539:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eed88a0aa7eac44bf743197932779f090be781caeb0a0cd7a021841ff53a2867",
                                "typeString": "literal_string \"Invalid reward stable\""
                              },
                              "value": "Invalid reward stable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eed88a0aa7eac44bf743197932779f090be781caeb0a0cd7a021841ff53a2867",
                                "typeString": "literal_string \"Invalid reward stable\""
                              }
                            ],
                            "id": 714,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4499:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4499:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "4499:64:7"
                      },
                      {
                        "assignments": [
                          725
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 725,
                            "mutability": "mutable",
                            "name": "oldStable",
                            "nameLocation": "4581:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 737,
                            "src": "4573:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 724,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4573:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 727,
                        "initialValue": {
                          "id": 726,
                          "name": "rewardStable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "4593:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4573:32:7"
                      },
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 728,
                            "name": "rewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "4615:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 729,
                            "name": "_newRewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "4630:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4615:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "4615:31:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 733,
                              "name": "oldStable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "4681:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 734,
                              "name": "_newRewardStable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "4692:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 732,
                            "name": "RewardStableUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "4661:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4661:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 736,
                        "nodeType": "EmitStatement",
                        "src": "4656:53:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "4289:125:7",
                    "text": "@notice Update the reward stable token address (USDT)\n @param _newRewardStable The new reward stable token address"
                  },
                  "functionSelector": "c13d2f75",
                  "id": 738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 712,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 711,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "4479:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4479:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4479:9:7"
                    }
                  ],
                  "name": "setRewardStable",
                  "nameLocation": "4428:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "_newRewardStable",
                        "nameLocation": "4452:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "4444:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4444:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4443:26:7"
                  },
                  "returnParameters": {
                    "id": 713,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4489:0:7"
                  },
                  "scope": 2200,
                  "src": "4419:297:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 786,
                    "nodeType": "Block",
                    "src": "5135:225:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 751,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 741,
                                "src": "5153:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5174:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5166:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 752,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5166:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5166:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5153:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642066726f6d546f6b656e",
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5178:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8c90eeed811ecb56a03a3a1ae00d84866e37d3383aef0aa84da254b4f13e060",
                                "typeString": "literal_string \"Invalid fromToken\""
                              },
                              "value": "Invalid fromToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b8c90eeed811ecb56a03a3a1ae00d84866e37d3383aef0aa84da254b4f13e060",
                                "typeString": "literal_string \"Invalid fromToken\""
                              }
                            ],
                            "id": 750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5145:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5145:53:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "5145:53:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 761,
                                "name": "toToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 743,
                                "src": "5216:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 764,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5235:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5227:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 762,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5227:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5227:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5216:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f546f6b656e",
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5239:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e27be9d800213fc5686a6b6c28e9a53f530b8c7990d2ee6214aad5635f8cf4a0",
                                "typeString": "literal_string \"Invalid toToken\""
                              },
                              "value": "Invalid toToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e27be9d800213fc5686a6b6c28e9a53f530b8c7990d2ee6214aad5635f8cf4a0",
                                "typeString": "literal_string \"Invalid toToken\""
                              }
                            ],
                            "id": 760,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5208:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5208:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 769,
                        "nodeType": "ExpressionStatement",
                        "src": "5208:49:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 771,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "5275:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5280:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5275:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5289:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5275:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642070617468",
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5292:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8",
                                "typeString": "literal_string \"Invalid path\""
                              },
                              "value": "Invalid path"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6eaf91a30795816d7b5ab342a2ebdd69fbc6fb670d48889a575f3f685dfb42c8",
                                "typeString": "literal_string \"Invalid path\""
                              }
                            ],
                            "id": 770,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5267:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5267:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 777,
                        "nodeType": "ExpressionStatement",
                        "src": "5267:40:7"
                      },
                      {
                        "expression": {
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 778,
                                "name": "swapPaths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "5317:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => bytes storage ref))"
                                }
                              },
                              "id": 781,
                              "indexExpression": {
                                "id": 779,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 741,
                                "src": "5327:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5317:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes_storage_$",
                                "typeString": "mapping(address => bytes storage ref)"
                              }
                            },
                            "id": 782,
                            "indexExpression": {
                              "id": 780,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 743,
                              "src": "5338:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5317:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 783,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "5349:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "src": "5317:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "5317:36:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 739,
                    "nodeType": "StructuredDocumentation",
                    "src": "4722:281:7",
                    "text": "@notice Update the encoded path for swaps between two tokens\n @dev Can only be called by the owner\n @param fromToken The address of the token to swap from\n @param toToken The address of the token to swap to\n @param path The encoded path for the swap"
                  },
                  "functionSelector": "483103a4",
                  "id": 787,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 748,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 747,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5125:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5125:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5125:9:7"
                    }
                  ],
                  "name": "setSwapPath",
                  "nameLocation": "5017:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "mutability": "mutable",
                        "name": "fromToken",
                        "nameLocation": "5046:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "5038:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5038:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "mutability": "mutable",
                        "name": "toToken",
                        "nameLocation": "5073:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "5065:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5065:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "5105:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "5090:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5090:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5028:87:7"
                  },
                  "returnParameters": {
                    "id": 749,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5135:0:7"
                  },
                  "scope": 2200,
                  "src": "5008:352:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 813,
                    "nodeType": "Block",
                    "src": "5723:108:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 797,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "5733:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 798,
                                "name": "swapPaths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "5740:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bytes_storage_$_$",
                                  "typeString": "mapping(address => mapping(address => bytes storage ref))"
                                }
                              },
                              "id": 800,
                              "indexExpression": {
                                "id": 799,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 790,
                                "src": "5750:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5740:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes_storage_$",
                                "typeString": "mapping(address => bytes storage ref)"
                              }
                            },
                            "id": 802,
                            "indexExpression": {
                              "id": 801,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "5761:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5740:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "src": "5733:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 804,
                        "nodeType": "ExpressionStatement",
                        "src": "5733:36:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 806,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "5787:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5792:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5787:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5801:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5787:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761702070617468206e6f7420736574",
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5804:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6253f4ba0d568efd42c0273683673f4d4f0ef13da45db861e7f104f66a592826",
                                "typeString": "literal_string \"Swap path not set\""
                              },
                              "value": "Swap path not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6253f4ba0d568efd42c0273683673f4d4f0ef13da45db861e7f104f66a592826",
                                "typeString": "literal_string \"Swap path not set\""
                              }
                            ],
                            "id": 805,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5779:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5779:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "5779:45:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 788,
                    "nodeType": "StructuredDocumentation",
                    "src": "5366:230:7",
                    "text": "@notice Retrieve the swap path for a given token pair\n @param fromToken The address of the token to swap from\n @param toToken The address of the token to swap to\n @return path The encoded path for the swap"
                  },
                  "id": 814,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getSwapPath",
                  "nameLocation": "5610:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 790,
                        "mutability": "mutable",
                        "name": "fromToken",
                        "nameLocation": "5640:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "5632:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 789,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5632:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "toToken",
                        "nameLocation": "5667:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "5659:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5659:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5622:58:7"
                  },
                  "returnParameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "mutability": "mutable",
                        "name": "path",
                        "nameLocation": "5717:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "5704:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 794,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5704:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5703:19:7"
                  },
                  "scope": 2200,
                  "src": "5601:230:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "6195:309:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 827,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "6213:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6234:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6226:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 828,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6226:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6226:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6213:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642066726f6d20746f6b656e",
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6238:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5943cf2511e940716ed0dbceef950362b7db6667849281502dd47062f9c1cfe1",
                                "typeString": "literal_string \"Invalid from token\""
                              },
                              "value": "Invalid from token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5943cf2511e940716ed0dbceef950362b7db6667849281502dd47062f9c1cfe1",
                                "typeString": "literal_string \"Invalid from token\""
                              }
                            ],
                            "id": 826,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6205:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6205:54:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "6205:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 837,
                                "name": "toToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 819,
                                "src": "6277:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6296:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6288:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 838,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6288:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6288:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6277:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f20746f6b656e",
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6300:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cbd65de704ddd45b0d0731f9692eac241dcf024182ee307b09e3b27c7a201b1",
                                "typeString": "literal_string \"Invalid to token\""
                              },
                              "value": "Invalid to token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cbd65de704ddd45b0d0731f9692eac241dcf024182ee307b09e3b27c7a201b1",
                                "typeString": "literal_string \"Invalid to token\""
                              }
                            ],
                            "id": 836,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6269:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6269:50:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 845,
                        "nodeType": "ExpressionStatement",
                        "src": "6269:50:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 847,
                                "name": "priceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 821,
                                "src": "6337:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6358:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6350:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 848,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6350:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6350:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6337:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642070726963652066656564",
                              "id": 853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6362:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
                                "typeString": "literal_string \"Invalid price feed\""
                              },
                              "value": "Invalid price feed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
                                "typeString": "literal_string \"Invalid price feed\""
                              }
                            ],
                            "id": 846,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6329:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6329:54:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "ExpressionStatement",
                        "src": "6329:54:7"
                      },
                      {
                        "expression": {
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 856,
                                "name": "priceFeeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "6393:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 859,
                              "indexExpression": {
                                "id": 857,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 817,
                                "src": "6404:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6393:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 860,
                            "indexExpression": {
                              "id": 858,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 819,
                              "src": "6415:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6393:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 861,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 821,
                            "src": "6426:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6393:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 863,
                        "nodeType": "ExpressionStatement",
                        "src": "6393:42:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 865,
                              "name": "fromToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "6467:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 819,
                              "src": "6478:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 867,
                              "name": "priceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "6487:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 864,
                            "name": "PriceFeedUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 496,
                            "src": "6450:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6450:47:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "EmitStatement",
                        "src": "6445:52:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 815,
                    "nodeType": "StructuredDocumentation",
                    "src": "5837:227:7",
                    "text": "@notice Set the price feed for a token pair\n @param fromToken The source token address\n @param toToken The destination token address\n @param priceFeed The Chainlink price feed address for the token pair"
                  },
                  "functionSelector": "67a1d5ab",
                  "id": 871,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 824,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 823,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6185:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6185:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6185:9:7"
                    }
                  ],
                  "name": "setPriceFeed",
                  "nameLocation": "6078:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "fromToken",
                        "nameLocation": "6108:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "6100:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6100:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "toToken",
                        "nameLocation": "6135:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "6127:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6127:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 821,
                        "mutability": "mutable",
                        "name": "priceFeed",
                        "nameLocation": "6160:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "6152:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6152:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6090:85:7"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6195:0:7"
                  },
                  "scope": 2200,
                  "src": "6069:435:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 926,
                    "nodeType": "Block",
                    "src": "6789:380:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 880,
                                "name": "priceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 874,
                                "src": "6807:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 883,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6828:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6820:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 881,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6820:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6820:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6807:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726963652066656564206e6f7420736574",
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6832:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c42bbf4bfef190c1b4784d897f05a0686a13f8e03ba97b834d560cc396bfb052",
                                "typeString": "literal_string \"Price feed not set\""
                              },
                              "value": "Price feed not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c42bbf4bfef190c1b4784d897f05a0686a13f8e03ba97b834d560cc396bfb052",
                                "typeString": "literal_string \"Price feed not set\""
                              }
                            ],
                            "id": 879,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6799:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6799:54:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "6799:54:7"
                      },
                      {
                        "assignments": [
                          891
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 891,
                            "mutability": "mutable",
                            "name": "oracle",
                            "nameLocation": "6886:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "6864:28:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2262",
                              "typeString": "contract AggregatorV3Interface"
                            },
                            "typeName": {
                              "id": 890,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 889,
                                "name": "AggregatorV3Interface",
                                "nameLocations": [
                                  "6864:21:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2262,
                                "src": "6864:21:7"
                              },
                              "referencedDeclaration": 2262,
                              "src": "6864:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2262",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 895,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 893,
                              "name": "priceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 874,
                              "src": "6917:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 892,
                            "name": "AggregatorV3Interface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2262,
                            "src": "6895:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2262_$",
                              "typeString": "type(contract AggregatorV3Interface)"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6895:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$2262",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6864:63:7"
                      },
                      {
                        "assignments": [
                          null,
                          897,
                          null,
                          899,
                          null
                        ],
                        "declarations": [
                          null,
                          {
                            "constant": false,
                            "id": 897,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "6948:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "6941:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 896,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6941:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          {
                            "constant": false,
                            "id": 899,
                            "mutability": "mutable",
                            "name": "updatedAt",
                            "nameLocation": "6965:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "6957:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 898,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6957:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 903,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 900,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "6980:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2262",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6987:15:7",
                            "memberName": "latestRoundData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2256,
                            "src": "6980:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                              "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6980:24:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                            "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6938:66:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 905,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "7023:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7031:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7023:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207072696365",
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7034:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                                "typeString": "literal_string \"Invalid price\""
                              },
                              "value": "Invalid price"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                                "typeString": "literal_string \"Invalid price\""
                              }
                            ],
                            "id": 904,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7015:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7015:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 910,
                        "nodeType": "ExpressionStatement",
                        "src": "7015:35:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 912,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7068:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7074:9:7",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7068:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 914,
                                  "name": "updatedAt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "7086:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7068:27:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "3234",
                                "id": 916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7099:8:7",
                                "subdenomination": "hours",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "24"
                              },
                              "src": "7068:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206665656420746f6f206f6c64",
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7109:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ceaa5e20e4b874d0fdbe62ac6b3f2d8a83111c25a10c489cacae4e13b877a699",
                                "typeString": "literal_string \"Price feed too old\""
                              },
                              "value": "Price feed too old"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ceaa5e20e4b874d0fdbe62ac6b3f2d8a83111c25a10c489cacae4e13b877a699",
                                "typeString": "literal_string \"Price feed too old\""
                              }
                            ],
                            "id": 911,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7060:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7060:70:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 920,
                        "nodeType": "ExpressionStatement",
                        "src": "7060:70:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 923,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "7156:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7148:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 921,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7148:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7148:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 878,
                        "id": 925,
                        "nodeType": "Return",
                        "src": "7141:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 872,
                    "nodeType": "StructuredDocumentation",
                    "src": "6510:181:7",
                    "text": "@notice Get the latest price from a Chainlink feed with validation\n @param priceFeed The address of the price feed\n @return price The normalized price (8 decimals)"
                  },
                  "id": 927,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getValidatedPrice",
                  "nameLocation": "6705:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "priceFeed",
                        "nameLocation": "6741:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 927,
                        "src": "6733:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6733:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6723:33:7"
                  },
                  "returnParameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 877,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 927,
                        "src": "6780:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 876,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6780:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6779:9:7"
                  },
                  "scope": 2200,
                  "src": "6696:473:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "7534:159:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 937,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 935,
                            "src": "7544:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 938,
                                "name": "priceFeeds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "7556:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 940,
                              "indexExpression": {
                                "id": 939,
                                "name": "fromToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 930,
                                "src": "7567:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7556:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 942,
                            "indexExpression": {
                              "id": 941,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 932,
                              "src": "7578:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7556:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7544:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 944,
                        "nodeType": "ExpressionStatement",
                        "src": "7544:42:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 946,
                                "name": "priceFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 935,
                                "src": "7604:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7625:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7617:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 947,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7617:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7617:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7604:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207072696365206665656420666f7220746f6b656e2070616972",
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7629:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_42aae79ddf261ea5937f09ecb7b314319c63aac6c64d658981fe07f7a36c3eeb",
                                "typeString": "literal_string \"No price feed for token pair\""
                              },
                              "value": "No price feed for token pair"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_42aae79ddf261ea5937f09ecb7b314319c63aac6c64d658981fe07f7a36c3eeb",
                                "typeString": "literal_string \"No price feed for token pair\""
                              }
                            ],
                            "id": 945,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7596:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7596:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 954,
                        "nodeType": "ExpressionStatement",
                        "src": "7596:64:7"
                      },
                      {
                        "expression": {
                          "id": 955,
                          "name": "priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "7677:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 936,
                        "id": 956,
                        "nodeType": "Return",
                        "src": "7670:16:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 928,
                    "nodeType": "StructuredDocumentation",
                    "src": "7175:231:7",
                    "text": "@notice Check if a price feed exists for a token pair\n @param fromToken The source token address\n @param toToken The destination token address\n @return priceFeed The price feed address, reverts if not found"
                  },
                  "id": 958,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPriceFeed",
                  "nameLocation": "7420:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 933,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "fromToken",
                        "nameLocation": "7451:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "7443:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7443:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "toToken",
                        "nameLocation": "7478:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "7470:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7470:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7433:58:7"
                  },
                  "returnParameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "priceFeed",
                        "nameLocation": "7523:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "7515:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7515:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7514:19:7"
                  },
                  "scope": 2200,
                  "src": "7411:282:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "8072:1584:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 968,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "8086:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 969,
                            "name": "rewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "8095:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8086:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 973,
                        "nodeType": "IfStatement",
                        "src": "8082:42:7",
                        "trueBody": {
                          "expression": {
                            "id": 971,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "8116:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 967,
                          "id": 972,
                          "nodeType": "Return",
                          "src": "8109:15:7"
                        }
                      },
                      {
                        "assignments": [
                          975
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 975,
                            "mutability": "mutable",
                            "name": "usdcUsdtFeed",
                            "nameLocation": "8214:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8206:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 974,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8206:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 980,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 977,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "8243:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 978,
                              "name": "rewardStable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "8249:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 976,
                            "name": "_getPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "8229:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view returns (address)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8229:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8206:56:7"
                      },
                      {
                        "assignments": [
                          982
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 982,
                            "mutability": "mutable",
                            "name": "usdcUsdtPrice",
                            "nameLocation": "8280:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8272:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 981,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8272:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 986,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 984,
                              "name": "usdcUsdtFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 975,
                              "src": "8315:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 983,
                            "name": "_getValidatedPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "8296:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8296:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8272:56:7"
                      },
                      {
                        "assignments": [
                          988
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 988,
                            "mutability": "mutable",
                            "name": "expectedAmount",
                            "nameLocation": "8346:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8338:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 987,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8338:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 989,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8338:22:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 990,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "8375:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 991,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "8384:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8375:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1013,
                        "nodeType": "IfStatement",
                        "src": "8371:353:7",
                        "trueBody": {
                          "id": 1012,
                          "nodeType": "Block",
                          "src": "8390:334:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 993,
                                  "name": "expectedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "8527:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 996,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 994,
                                          "name": "amountIn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 963,
                                          "src": "8545:8:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 995,
                                          "name": "usdcUsdtPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 982,
                                          "src": "8556:13:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8545:24:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 997,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8544:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "316538",
                                    "id": 998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8573:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000_by_1",
                                      "typeString": "int_const 100000000"
                                    },
                                    "value": "1e8"
                                  },
                                  "src": "8544:32:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8527:49:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1001,
                              "nodeType": "ExpressionStatement",
                              "src": "8527:49:7"
                            },
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1007,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1002,
                                        "name": "expectedAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 988,
                                        "src": "8614:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1005,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1003,
                                              "name": "SLIPPAGE_DENOMINATOR",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 423,
                                              "src": "8632:20:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "id": 1004,
                                              "name": "slippageTolerance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 426,
                                              "src": "8655:17:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8632:40:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1006,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8631:42:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8614:59:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1008,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8613:61:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1009,
                                  "name": "SLIPPAGE_DENOMINATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 423,
                                  "src": "8693:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8613:100:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 967,
                              "id": 1011,
                              "nodeType": "Return",
                              "src": "8590:123:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1015,
                            "mutability": "mutable",
                            "name": "tokenUsdcFeed",
                            "nameLocation": "8808:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8800:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1014,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8800:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1020,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1017,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "8838:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1018,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "8845:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1016,
                            "name": "_getPriceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 958,
                            "src": "8824:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view returns (address)"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8824:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8800:50:7"
                      },
                      {
                        "assignments": [
                          1022
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1022,
                            "mutability": "mutable",
                            "name": "tokenUsdcPrice",
                            "nameLocation": "8868:14:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8860:22:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1021,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8860:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1026,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1024,
                              "name": "tokenUsdcFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "8904:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1023,
                            "name": "_getValidatedPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "8885:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8885:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8860:58:7"
                      },
                      {
                        "assignments": [
                          1028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1028,
                            "mutability": "mutable",
                            "name": "tokenDecimals",
                            "nameLocation": "8965:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "8959:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1027,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "8959:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1034,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1030,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "8996:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1029,
                                "name": "IERC20Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 251,
                                "src": "8981:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
                                  "typeString": "type(contract IERC20Metadata)"
                                }
                              },
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8981:21:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9003:8:7",
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 250,
                            "src": "8981:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8981:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8959:54:7"
                      },
                      {
                        "assignments": [
                          1036
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1036,
                            "mutability": "mutable",
                            "name": "usdcAmount",
                            "nameLocation": "9222:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1071,
                            "src": "9214:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1035,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9214:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1051,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1037,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 963,
                                  "src": "9236:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1038,
                                  "name": "tokenUsdcPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1022,
                                  "src": "9247:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9236:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1040,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9235:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1041,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9278:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1046,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1044,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "38",
                                          "id": 1042,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9285:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_8_by_1",
                                            "typeString": "int_const 8"
                                          },
                                          "value": "8"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 1043,
                                          "name": "tokenDecimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1028,
                                          "src": "9289:13:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "9285:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 1045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9305:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "9285:21:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "id": 1047,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9284:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "9278:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1049,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9277:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9235:73:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9214:94:7"
                      },
                      {
                        "expression": {
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1052,
                            "name": "expectedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "9436:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1053,
                                    "name": "usdcAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1036,
                                    "src": "9454:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1054,
                                    "name": "usdcUsdtPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 982,
                                    "src": "9467:13:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9454:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1056,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9453:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "316538",
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9484:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "1e8"
                            },
                            "src": "9453:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9436:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "9436:51:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1061,
                                  "name": "expectedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "9554:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1064,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1062,
                                        "name": "SLIPPAGE_DENOMINATOR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 423,
                                        "src": "9572:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1063,
                                        "name": "slippageTolerance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 426,
                                        "src": "9595:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9572:40:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1065,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9571:42:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9554:59:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1067,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9553:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1068,
                            "name": "SLIPPAGE_DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "9629:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9553:96:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 967,
                        "id": 1070,
                        "nodeType": "Return",
                        "src": "9534:115:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 959,
                    "nodeType": "StructuredDocumentation",
                    "src": "7699:245:7",
                    "text": "@notice Calculate the minimum amount out with slippage tolerance using Chainlink oracle\n @param token The input token address\n @param amountIn The input amount\n @return The minimum amount out in USDT considering slippage"
                  },
                  "id": 1072,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_calculateAmountOutMinimum",
                  "nameLocation": "7958:26:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8002:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "7994:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7994:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 963,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "8025:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "8017:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 962,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8017:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7984:55:7"
                  },
                  "returnParameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "8063:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8063:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8062:9:7"
                  },
                  "scope": 2200,
                  "src": "7949:1707:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1182,
                    "nodeType": "Block",
                    "src": "9729:897:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1080,
                                "name": "approvedPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "9747:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1082,
                              "indexExpression": {
                                "id": 1081,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "9761:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9747:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c65",
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9768:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              },
                              "value": "Pool not approved for this module"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              }
                            ],
                            "id": 1079,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9739:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9739:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "9739:65:7"
                      },
                      {
                        "assignments": [
                          1088
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1088,
                            "mutability": "mutable",
                            "name": "safe",
                            "nameLocation": "9821:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "9815:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$2234",
                              "typeString": "contract ISafe"
                            },
                            "typeName": {
                              "id": 1087,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1086,
                                "name": "ISafe",
                                "nameLocations": [
                                  "9815:5:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2234,
                                "src": "9815:5:7"
                              },
                              "referencedDeclaration": 2234,
                              "src": "9815:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1096,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1092,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9842:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9846:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9842:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9834:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1090,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9834:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9834:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1089,
                            "name": "ISafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "9828:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISafe_$2234_$",
                              "typeString": "type(contract ISafe)"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9828:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9815:39:7"
                      },
                      {
                        "assignments": [
                          1098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1098,
                            "mutability": "mutable",
                            "name": "gaugeAddress",
                            "nameLocation": "9872:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "9864:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9864:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1104,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1100,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1074,
                                  "src": "9895:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1099,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "9887:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9887:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9901:5:7",
                            "memberName": "gauge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "9887:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9864:44:7"
                      },
                      {
                        "assignments": [
                          1107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1107,
                            "mutability": "mutable",
                            "name": "clGauge",
                            "nameLocation": "9927:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "9918:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLGauge_$2314",
                              "typeString": "contract ICLGauge"
                            },
                            "typeName": {
                              "id": 1106,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1105,
                                "name": "ICLGauge",
                                "nameLocations": [
                                  "9918:8:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2314,
                                "src": "9918:8:7"
                              },
                              "referencedDeclaration": 2314,
                              "src": "9918:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1111,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1109,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "9946:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1108,
                            "name": "ICLGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "9937:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                              "typeString": "type(contract ICLGauge)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9937:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLGauge_$2314",
                            "typeString": "contract ICLGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9918:41:7"
                      },
                      {
                        "assignments": [
                          1113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1113,
                            "mutability": "mutable",
                            "name": "isStaked",
                            "nameLocation": "9974:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "9969:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1112,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9969:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1122,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1118,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "10016:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10008:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1116,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10008:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10008:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1120,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "10023:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1114,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "9985:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9993:14:7",
                            "memberName": "stakedContains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "9985:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9985:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9969:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1124,
                              "name": "isStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1113,
                              "src": "10050:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f736974696f6e206e6f74207374616b6564",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10060:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c9b0d39762e7422f68960322195de36f3a0dd36dab391b624d3705293ee88a3",
                                "typeString": "literal_string \"Position not staked\""
                              },
                              "value": "Position not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4c9b0d39762e7422f68960322195de36f3a0dd36dab391b624d3705293ee88a3",
                                "typeString": "literal_string \"Position not staked\""
                              }
                            ],
                            "id": 1123,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10042:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10042:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "10042:40:7"
                      },
                      {
                        "assignments": [
                          1129
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1129,
                            "mutability": "mutable",
                            "name": "initialUsdtBalance",
                            "nameLocation": "10101:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "10093:26:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1128,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10093:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1136,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1133,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "10146:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10138:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1131,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10138:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10138:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1130,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "10122:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10122:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10093:59:7"
                      },
                      {
                        "assignments": [
                          1138
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1138,
                            "mutability": "mutable",
                            "name": "veloAmount",
                            "nameLocation": "10171:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "10163:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1137,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10163:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1147,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1143,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "10207:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10199:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1141,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10199:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10199:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1145,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "10214:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1139,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "10184:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10192:6:7",
                            "memberName": "earned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "10184:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10184:38:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10163:59:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1149,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "10258:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            {
                              "id": 1150,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "10264:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1151,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "10278:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1148,
                            "name": "_handleUnstakeAndCollect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1276,
                            "src": "10233:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ISafe,address,uint256)"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10233:53:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1153,
                        "nodeType": "ExpressionStatement",
                        "src": "10233:53:7"
                      },
                      {
                        "assignments": [
                          1155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1155,
                            "mutability": "mutable",
                            "name": "finalUsdtBalance",
                            "nameLocation": "10305:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "10297:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1154,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10297:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1162,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1159,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "10348:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10340:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1157,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10340:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10340:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1156,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "10324:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10324:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10297:57:7"
                      },
                      {
                        "assignments": [
                          1164
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1164,
                            "mutability": "mutable",
                            "name": "totalUsdtAmount",
                            "nameLocation": "10372:15:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "10364:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1163,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10364:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1168,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1165,
                            "name": "finalUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "10390:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1166,
                            "name": "initialUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1129,
                            "src": "10409:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10390:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10364:63:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1172,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1088,
                                  "src": "10482:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10474:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1170,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10474:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10474:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1174,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "10501:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1175,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "10519:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10540:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10555:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1178,
                              "name": "veloAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "10570:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1179,
                              "name": "totalUsdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1164,
                              "src": "10594:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1169,
                            "name": "EarningsCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "10443:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10443:176:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1181,
                        "nodeType": "EmitStatement",
                        "src": "10438:181:7"
                      }
                    ]
                  },
                  "functionSelector": "4bdc76cc",
                  "id": 1183,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unstakeAndCollect",
                  "nameLocation": "9671:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "9697:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "9689:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9689:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "9711:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "9703:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9703:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9688:31:7"
                  },
                  "returnParameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9729:0:7"
                  },
                  "scope": 2200,
                  "src": "9662:964:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1275,
                    "nodeType": "Block",
                    "src": "10816:831:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1195,
                                "name": "gauge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1189,
                                "src": "10834:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10851:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10843:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1196,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10843:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10843:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10834:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206761756765",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10855:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0f01a4186ff9a4f4fec3be353497709ea5e4152dad176712bbaa55bd57735b49",
                                "typeString": "literal_string \"Invalid gauge\""
                              },
                              "value": "Invalid gauge"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0f01a4186ff9a4f4fec3be353497709ea5e4152dad176712bbaa55bd57735b49",
                                "typeString": "literal_string \"Invalid gauge\""
                              }
                            ],
                            "id": 1194,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10826:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10826:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "10826:45:7"
                      },
                      {
                        "assignments": [
                          1206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1206,
                            "mutability": "mutable",
                            "name": "clGauge",
                            "nameLocation": "10891:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1275,
                            "src": "10882:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLGauge_$2314",
                              "typeString": "contract ICLGauge"
                            },
                            "typeName": {
                              "id": 1205,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1204,
                                "name": "ICLGauge",
                                "nameLocations": [
                                  "10882:8:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2314,
                                "src": "10882:8:7"
                              },
                              "referencedDeclaration": 2314,
                              "src": "10882:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1210,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1208,
                              "name": "gauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "10910:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1207,
                            "name": "ICLGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "10901:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                              "typeString": "type(contract ICLGauge)"
                            }
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10901:15:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLGauge_$2314",
                            "typeString": "contract ICLGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10882:34:7"
                      },
                      {
                        "assignments": [
                          1212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1212,
                            "mutability": "mutable",
                            "name": "isStaked",
                            "nameLocation": "10931:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1275,
                            "src": "10926:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10926:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1221,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1217,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "10973:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10965:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1215,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10965:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10965:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1219,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "10980:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1213,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "10942:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10950:14:7",
                            "memberName": "stakedContains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "10942:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10942:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10926:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1223,
                              "name": "isStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1212,
                              "src": "11007:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f736974696f6e206e6f74207374616b6564",
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11017:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c9b0d39762e7422f68960322195de36f3a0dd36dab391b624d3705293ee88a3",
                                "typeString": "literal_string \"Position not staked\""
                              },
                              "value": "Position not staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4c9b0d39762e7422f68960322195de36f3a0dd36dab391b624d3705293ee88a3",
                                "typeString": "literal_string \"Position not staked\""
                              }
                            ],
                            "id": 1222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10999:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10999:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1226,
                        "nodeType": "ExpressionStatement",
                        "src": "10999:40:7"
                      },
                      {
                        "assignments": [
                          1228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1228,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11058:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1275,
                            "src": "11050:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1227,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11050:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1237,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1233,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "11090:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11082:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1231,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11082:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11082:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1235,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "11097:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1229,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "11067:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11075:6:7",
                            "memberName": "earned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "11067:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11067:38:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11050:55:7"
                      },
                      {
                        "assignments": [
                          1239
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1239,
                            "mutability": "mutable",
                            "name": "withdrawData",
                            "nameLocation": "11129:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1275,
                            "src": "11116:25:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1238,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11116:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1247,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1242,
                                  "name": "ICLGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2314,
                                  "src": "11180:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                                    "typeString": "type(contract ICLGauge)"
                                  }
                                },
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "11189:8:7",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2307,
                                "src": "11180:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function ICLGauge.withdraw(uint256)"
                                }
                              },
                              "id": 1244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "11198:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "11180:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 1245,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "11220:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1240,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11144:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11148:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "11144:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11144:93:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11116:121:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1251,
                                  "name": "gauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "11317:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11340:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1253,
                                  "name": "withdrawData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1239,
                                  "src": "11359:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1254,
                                      "name": "Enum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 288,
                                      "src": "11389:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                        "typeString": "type(contract Enum)"
                                      }
                                    },
                                    "id": 1255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "11394:9:7",
                                    "memberName": "Operation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 287,
                                    "src": "11389:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                      "typeString": "type(enum Enum.Operation)"
                                    }
                                  },
                                  "id": 1256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "11404:4:7",
                                  "memberName": "Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 285,
                                  "src": "11389:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                ],
                                "expression": {
                                  "id": 1249,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "11269:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                },
                                "id": 1250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11274:25:7",
                                "memberName": "execTransactionFromModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2217,
                                "src": "11269:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11269:153:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4761756765207769746864726177206661696c6564",
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11436:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fd7b10fb058b5bd87878e8d1d780343cc7a12ed35e9f6b573cd3aa8386766298",
                                "typeString": "literal_string \"Gauge withdraw failed\""
                              },
                              "value": "Gauge withdraw failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fd7b10fb058b5bd87878e8d1d780343cc7a12ed35e9f6b573cd3aa8386766298",
                                "typeString": "literal_string \"Gauge withdraw failed\""
                              }
                            ],
                            "id": 1248,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11248:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11248:221:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1260,
                        "nodeType": "ExpressionStatement",
                        "src": "11248:221:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1261,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1228,
                            "src": "11484:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11493:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11484:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1274,
                        "nodeType": "IfStatement",
                        "src": "11480:161:7",
                        "trueBody": {
                          "id": 1273,
                          "nodeType": "Block",
                          "src": "11496:145:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1266,
                                        "name": "safe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1187,
                                        "src": "11549:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        }
                                      },
                                      {
                                        "id": 1267,
                                        "name": "rewardToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 414,
                                        "src": "11555:11:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1268,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1228,
                                        "src": "11568:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1265,
                                      "name": "_swapToStable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1501,
                                      "src": "11535:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                      }
                                    },
                                    "id": 1269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11535:40:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5377617020746f20737461626c65206661696c6564",
                                    "id": 1270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11593:23:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0d98be423c963bd7884f01df3e4d31a1ccc04ebc36a9d977dcd810fe278a6d27",
                                      "typeString": "literal_string \"Swap to stable failed\""
                                    },
                                    "value": "Swap to stable failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0d98be423c963bd7884f01df3e4d31a1ccc04ebc36a9d977dcd810fe278a6d27",
                                      "typeString": "literal_string \"Swap to stable failed\""
                                    }
                                  ],
                                  "id": 1264,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11510:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11510:120:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1272,
                              "nodeType": "ExpressionStatement",
                              "src": "11510:120:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1184,
                    "nodeType": "StructuredDocumentation",
                    "src": "10632:62:7",
                    "text": "@notice Handles unstaking from gauge if position is staked"
                  },
                  "id": 1276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_handleUnstakeAndCollect",
                  "nameLocation": "10708:24:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "10748:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "10742:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$2234",
                          "typeString": "contract ISafe"
                        },
                        "typeName": {
                          "id": 1186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1185,
                            "name": "ISafe",
                            "nameLocations": [
                              "10742:5:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2234,
                            "src": "10742:5:7"
                          },
                          "referencedDeclaration": 2234,
                          "src": "10742:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "gauge",
                        "nameLocation": "10770:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "10762:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10762:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "10793:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "10785:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10785:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10732:74:7"
                  },
                  "returnParameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10816:0:7"
                  },
                  "scope": 2200,
                  "src": "10699:948:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1320,
                    "nodeType": "Block",
                    "src": "11862:643:7",
                    "statements": [
                      {
                        "assignments": [
                          1290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1290,
                            "mutability": "mutable",
                            "name": "decreaseData",
                            "nameLocation": "11885:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1320,
                            "src": "11872:25:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1289,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11872:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1306,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1293,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2410,
                                  "src": "11936:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "11964:17:7",
                                "memberName": "decreaseLiquidity",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2392,
                                "src": "11936:45:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_payable$_t_struct$_DecreaseLiquidityParams_$2325_calldata_ptr_$returns$_t_uint256_$_t_uint256_$",
                                  "typeString": "function INonfungiblePositionManager.decreaseLiquidity(struct INonfungiblePositionManager.DecreaseLiquidityParams calldata) payable returns (uint256,uint256)"
                                }
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "11982:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "11936:54:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1298,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1284,
                                  "src": "12083:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1299,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1286,
                                  "src": "12119:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1300,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12158:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12189:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "expression": {
                                    "id": 1302,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12218:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1303,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12224:9:7",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12218:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1296,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2410,
                                  "src": "12004:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12032:23:7",
                                "memberName": "DecreaseLiquidityParams",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2325,
                                "src": "12004:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$2325_storage_ptr_$",
                                  "typeString": "type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
                                }
                              },
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "12074:7:7",
                                "12108:9:7",
                                "12146:10:7",
                                "12177:10:7",
                                "12208:8:7"
                              ],
                              "names": [
                                "tokenId",
                                "liquidity",
                                "amount0Min",
                                "amount1Min",
                                "deadline"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "12004:244:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2325_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2325_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams memory"
                              }
                            ],
                            "expression": {
                              "id": 1291,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11900:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11904:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "11900:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11900:358:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11872:386:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1310,
                                  "name": "nftManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1282,
                                  "src": "12337:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12365:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1312,
                                  "name": "decreaseData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "12384:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1313,
                                      "name": "Enum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 288,
                                      "src": "12414:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                        "typeString": "type(contract Enum)"
                                      }
                                    },
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12419:9:7",
                                    "memberName": "Operation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 287,
                                    "src": "12414:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                      "typeString": "type(enum Enum.Operation)"
                                    }
                                  },
                                  "id": 1315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "12429:4:7",
                                  "memberName": "Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 285,
                                  "src": "12414:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                ],
                                "expression": {
                                  "id": 1308,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "12289:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                },
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12294:25:7",
                                "memberName": "execTransactionFromModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2217,
                                "src": "12289:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                }
                              },
                              "id": 1316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12289:158:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4465637265617365206c6971756964697479206661696c6564",
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12461:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6d549651cc81ddcea56561a30cd8d75482708f8e38a74fa6341ed7b6de4f03bb",
                                "typeString": "literal_string \"Decrease liquidity failed\""
                              },
                              "value": "Decrease liquidity failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6d549651cc81ddcea56561a30cd8d75482708f8e38a74fa6341ed7b6de4f03bb",
                                "typeString": "literal_string \"Decrease liquidity failed\""
                              }
                            ],
                            "id": 1307,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12268:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12268:230:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1319,
                        "nodeType": "ExpressionStatement",
                        "src": "12268:230:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1277,
                    "nodeType": "StructuredDocumentation",
                    "src": "11653:61:7",
                    "text": "@notice Decreases liquidity and returns new token amounts"
                  },
                  "id": 1321,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_decreaseLiquidity",
                  "nameLocation": "11728:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1280,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "11762:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "11756:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$2234",
                          "typeString": "contract ISafe"
                        },
                        "typeName": {
                          "id": 1279,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1278,
                            "name": "ISafe",
                            "nameLocations": [
                              "11756:5:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2234,
                            "src": "11756:5:7"
                          },
                          "referencedDeclaration": 2234,
                          "src": "11756:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "nftManager",
                        "nameLocation": "11784:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "11776:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11776:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "11812:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "11804:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11804:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1286,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "11837:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "11829:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1285,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "11829:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11746:106:7"
                  },
                  "returnParameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11862:0:7"
                  },
                  "scope": 2200,
                  "src": "11719:786:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1396,
                    "nodeType": "Block",
                    "src": "12789:725:7",
                    "statements": [
                      {
                        "assignments": [
                          1337
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1337,
                            "mutability": "mutable",
                            "name": "collectData",
                            "nameLocation": "12812:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1396,
                            "src": "12799:24:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1336,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "12799:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1362,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1340,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2410,
                                  "src": "12862:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "12890:7:7",
                                "memberName": "collect",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2403,
                                "src": "12862:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_CollectParams_$2334_calldata_ptr_$returns$_t_uint256_$_t_uint256_$",
                                  "typeString": "function INonfungiblePositionManager.collect(struct INonfungiblePositionManager.CollectParams calldata) returns (uint256,uint256)"
                                }
                              },
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "12898:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "12862:44:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1345,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1329,
                                  "src": "12989:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1348,
                                      "name": "safe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1325,
                                      "src": "13033:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      }
                                    ],
                                    "id": 1347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13025:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1346,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13025:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13025:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1352,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13073:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint128_$",
                                          "typeString": "type(uint128)"
                                        },
                                        "typeName": {
                                          "id": 1351,
                                          "name": "uint128",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13073:7:7",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint128_$",
                                          "typeString": "type(uint128)"
                                        }
                                      ],
                                      "id": 1350,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "13068:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13068:13:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint128",
                                      "typeString": "type(uint128)"
                                    }
                                  },
                                  "id": 1354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "13082:3:7",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "13068:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1357,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13120:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint128_$",
                                          "typeString": "type(uint128)"
                                        },
                                        "typeName": {
                                          "id": 1356,
                                          "name": "uint128",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13120:7:7",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint128_$",
                                          "typeString": "type(uint128)"
                                        }
                                      ],
                                      "id": 1355,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "13115:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13115:13:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint128",
                                      "typeString": "type(uint128)"
                                    }
                                  },
                                  "id": 1359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "13129:3:7",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "13115:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "expression": {
                                  "id": 1343,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2410,
                                  "src": "12920:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12948:13:7",
                                "memberName": "CollectParams",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2334,
                                "src": "12920:41:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_CollectParams_$2334_storage_ptr_$",
                                  "typeString": "type(struct INonfungiblePositionManager.CollectParams storage pointer)"
                                }
                              },
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "12980:7:7",
                                "13014:9:7",
                                "13056:10:7",
                                "13103:10:7"
                              ],
                              "names": [
                                "tokenId",
                                "recipient",
                                "amount0Max",
                                "amount1Max"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "12920:227:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CollectParams_$2334_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_struct$_CollectParams_$2334_memory_ptr",
                                "typeString": "struct INonfungiblePositionManager.CollectParams memory"
                              }
                            ],
                            "expression": {
                              "id": 1338,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12826:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12830:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "12826:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12826:331:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12799:358:7"
                      },
                      {
                        "assignments": [
                          1364,
                          1366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1364,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "13174:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1396,
                            "src": "13169:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1363,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "13169:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1366,
                            "mutability": "mutable",
                            "name": "returnData",
                            "nameLocation": "13196:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1396,
                            "src": "13183:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1365,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13183:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1376,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1369,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1327,
                              "src": "13281:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13309:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1371,
                              "name": "collectData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1337,
                              "src": "13328:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1372,
                                  "name": "Enum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "13357:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                    "typeString": "type(contract Enum)"
                                  }
                                },
                                "id": 1373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13362:9:7",
                                "memberName": "Operation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 287,
                                "src": "13357:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                  "typeString": "type(enum Enum.Operation)"
                                }
                              },
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13372:4:7",
                              "memberName": "Call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 285,
                              "src": "13357:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$287",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$287",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "id": 1367,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "13210:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13228:35:7",
                            "memberName": "execTransactionFromModuleReturnData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2233,
                            "src": "13210:53:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool,bytes memory)"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13210:180:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13168:222:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1378,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "13408:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c656374206661696c6564",
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13417:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b12072dd527d2417da6522069697f8a6f3d489041ec6622c421caa2710d78316",
                                "typeString": "literal_string \"Collect failed\""
                              },
                              "value": "Collect failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b12072dd527d2417da6522069697f8a6f3d489041ec6622c421caa2710d78316",
                                "typeString": "literal_string \"Collect failed\""
                              }
                            ],
                            "id": 1377,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13400:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13400:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1381,
                        "nodeType": "ExpressionStatement",
                        "src": "13400:34:7"
                      },
                      {
                        "expression": {
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1382,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1332,
                                "src": "13445:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1383,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "13454:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1384,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "13444:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1387,
                                "name": "returnData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1366,
                                "src": "13476:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 1389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13489:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1388,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13489:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  {
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13498:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1390,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13498:7:7",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 1392,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "13488:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                  "typeString": "tuple(type(uint256),type(uint256))"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                                  "typeString": "tuple(type(uint256),type(uint256))"
                                }
                              ],
                              "expression": {
                                "id": 1385,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "13465:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13469:6:7",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "13465:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13465:42:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "13444:63:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1395,
                        "nodeType": "ExpressionStatement",
                        "src": "13444:63:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1322,
                    "nodeType": "StructuredDocumentation",
                    "src": "12511:48:7",
                    "text": "@notice Collects owed tokens from positions."
                  },
                  "id": 1397,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_collectOwed",
                  "nameLocation": "12645:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "12673:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "12667:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$2234",
                          "typeString": "contract ISafe"
                        },
                        "typeName": {
                          "id": 1324,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1323,
                            "name": "ISafe",
                            "nameLocations": [
                              "12667:5:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2234,
                            "src": "12667:5:7"
                          },
                          "referencedDeclaration": 2234,
                          "src": "12667:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "nftManager",
                        "nameLocation": "12695:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "12687:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12687:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "12723:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "12715:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12715:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12657:79:7"
                  },
                  "returnParameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "12763:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "12755:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12755:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "12780:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1397,
                        "src": "12772:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12772:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12754:34:7"
                  },
                  "scope": 2200,
                  "src": "12636:878:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1500,
                    "nodeType": "Block",
                    "src": "13701:1469:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1410,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1405,
                            "src": "13715:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13727:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13715:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1415,
                        "nodeType": "IfStatement",
                        "src": "13711:30:7",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 1413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13737:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 1409,
                          "id": 1414,
                          "nodeType": "Return",
                          "src": "13730:11:7"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1416,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1403,
                            "src": "13755:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1417,
                            "name": "rewardStable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "13764:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13755:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1421,
                        "nodeType": "IfStatement",
                        "src": "13751:38:7",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13785:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 1409,
                          "id": 1420,
                          "nodeType": "Return",
                          "src": "13778:11:7"
                        }
                      },
                      {
                        "assignments": [
                          1423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1423,
                            "mutability": "mutable",
                            "name": "path",
                            "nameLocation": "13813:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "13800:17:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1422,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13800:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1428,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1425,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1403,
                              "src": "13833:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1426,
                              "name": "rewardStable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "13840:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1424,
                            "name": "_getSwapPath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 814,
                            "src": "13820:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,address) view returns (bytes memory)"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13820:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13800:53:7"
                      },
                      {
                        "assignments": [
                          1430
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1430,
                            "mutability": "mutable",
                            "name": "approveData",
                            "nameLocation": "13937:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "13924:24:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1429,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "13924:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1439,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1433,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 225,
                                  "src": "13987:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "13994:7:7",
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 212,
                                "src": "13987:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function IERC20.approve(address,uint256) returns (bool)"
                                }
                              },
                              "id": 1435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14002:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "13987:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 1436,
                              "name": "swapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "14024:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1437,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "14048:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1431,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "13951:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13955:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "13951:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13951:115:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13924:142:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1443,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1403,
                                  "src": "14145:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14168:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1445,
                                  "name": "approveData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "14187:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1446,
                                      "name": "Enum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 288,
                                      "src": "14216:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                        "typeString": "type(contract Enum)"
                                      }
                                    },
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14221:9:7",
                                    "memberName": "Operation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 287,
                                    "src": "14216:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                      "typeString": "type(enum Enum.Operation)"
                                    }
                                  },
                                  "id": 1448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "14231:4:7",
                                  "memberName": "Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 285,
                                  "src": "14216:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                ],
                                "expression": {
                                  "id": 1441,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "14097:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                },
                                "id": 1442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14102:25:7",
                                "memberName": "execTransactionFromModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2217,
                                "src": "14097:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                }
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14097:152:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e20617070726f7665206661696c6564",
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14263:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23afe30167340253e228bf40ad743dc61781d3cc2866ab6db909602e2b2648c8",
                                "typeString": "literal_string \"Token approve failed\""
                              },
                              "value": "Token approve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23afe30167340253e228bf40ad743dc61781d3cc2866ab6db909602e2b2648c8",
                                "typeString": "literal_string \"Token approve failed\""
                              }
                            ],
                            "id": 1440,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14076:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14076:219:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1452,
                        "nodeType": "ExpressionStatement",
                        "src": "14076:219:7"
                      },
                      {
                        "assignments": [
                          1454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1454,
                            "mutability": "mutable",
                            "name": "amountOutMinimum",
                            "nameLocation": "14378:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "14370:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1453,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14370:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1459,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1456,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1403,
                              "src": "14424:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1457,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "14431:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1455,
                            "name": "_calculateAmountOutMinimum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "14397:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14397:43:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14370:70:7"
                      },
                      {
                        "assignments": [
                          1464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1464,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "14525:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "14489:42:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputParams_$346_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputParams"
                            },
                            "typeName": {
                              "id": 1463,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1462,
                                "name": "ISwapRouter.ExactInputParams",
                                "nameLocations": [
                                  "14489:11:7",
                                  "14501:16:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 346,
                                "src": "14489:28:7"
                              },
                              "referencedDeclaration": 346,
                              "src": "14489:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputParams_$346_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1479,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1467,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "14600:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1470,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "14641:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14633:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1468,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14633:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14633:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1472,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14674:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14680:9:7",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14674:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 1474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14692:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "14674:21:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1476,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "14744:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1477,
                              "name": "amountOutMinimum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "14788:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1465,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "14534:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$402_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 1466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14559:16:7",
                            "memberName": "ExactInputParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 346,
                            "src": "14534:41:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactInputParams_$346_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "14594:4:7",
                            "14622:9:7",
                            "14664:8:7",
                            "14734:8:7",
                            "14770:16:7"
                          ],
                          "names": [
                            "path",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "14534:285:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputParams_$346_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14489:330:7"
                      },
                      {
                        "assignments": [
                          1481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1481,
                            "mutability": "mutable",
                            "name": "swapData",
                            "nameLocation": "14871:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1500,
                            "src": "14858:21:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1480,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "14858:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1489,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1484,
                                  "name": "ISwapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 402,
                                  "src": "14918:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$402_$",
                                    "typeString": "type(contract ISwapRouter)"
                                  }
                                },
                                "id": 1485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "14930:10:7",
                                "memberName": "exactInput",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 355,
                                "src": "14918:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_payable$_t_struct$_ExactInputParams_$346_calldata_ptr_$returns$_t_uint256_$",
                                  "typeString": "function ISwapRouter.exactInput(struct ISwapRouter.ExactInputParams calldata) payable returns (uint256)"
                                }
                              },
                              "id": 1486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "14941:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "14918:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 1487,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "14963:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputParams_$346_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_struct$_ExactInputParams_$346_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams memory"
                              }
                            ],
                            "expression": {
                              "id": 1482,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "14882:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14886:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "14882:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14882:97:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14858:121:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1492,
                              "name": "swapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "15057:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15085:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 1494,
                              "name": "swapData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "15104:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 1495,
                                  "name": "Enum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "15130:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                    "typeString": "type(contract Enum)"
                                  }
                                },
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15135:9:7",
                                "memberName": "Operation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 287,
                                "src": "15130:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                  "typeString": "type(enum Enum.Operation)"
                                }
                              },
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "15145:4:7",
                              "memberName": "Call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 285,
                              "src": "15130:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Operation_$287",
                                "typeString": "enum Enum.Operation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_Operation_$287",
                                "typeString": "enum Enum.Operation"
                              }
                            ],
                            "expression": {
                              "id": 1490,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "15009:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15014:25:7",
                            "memberName": "execTransactionFromModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2217,
                            "src": "15009:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15009:154:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1409,
                        "id": 1499,
                        "nodeType": "Return",
                        "src": "14990:173:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1398,
                    "nodeType": "StructuredDocumentation",
                    "src": "13520:54:7",
                    "text": "@notice Swaps tokens to USDT using the stored path"
                  },
                  "id": 1501,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swapToStable",
                  "nameLocation": "13588:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "13617:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "13611:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$2234",
                          "typeString": "contract ISafe"
                        },
                        "typeName": {
                          "id": 1400,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1399,
                            "name": "ISafe",
                            "nameLocations": [
                              "13611:5:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2234,
                            "src": "13611:5:7"
                          },
                          "referencedDeclaration": 2234,
                          "src": "13611:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "13639:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "13631:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13631:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1405,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "13662:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "13654:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13654:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13601:75:7"
                  },
                  "returnParameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "13695:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13695:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13694:6:7"
                  },
                  "scope": 2200,
                  "src": "13579:1591:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1714,
                    "nodeType": "Block",
                    "src": "15313:2539:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1510,
                                "name": "approvedPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "15331:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1512,
                              "indexExpression": {
                                "id": 1511,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1504,
                                "src": "15345:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15331:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c65",
                              "id": 1513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15352:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              },
                              "value": "Pool not approved for this module"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              }
                            ],
                            "id": 1509,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15323:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15323:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "15323:65:7"
                      },
                      {
                        "assignments": [
                          1518
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1518,
                            "mutability": "mutable",
                            "name": "safe",
                            "nameLocation": "15405:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15399:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$2234",
                              "typeString": "contract ISafe"
                            },
                            "typeName": {
                              "id": 1517,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1516,
                                "name": "ISafe",
                                "nameLocations": [
                                  "15399:5:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2234,
                                "src": "15399:5:7"
                              },
                              "referencedDeclaration": 2234,
                              "src": "15399:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1526,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1522,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "15426:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15430:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "15426:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15418:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1520,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15418:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15418:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1519,
                            "name": "ISafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "15412:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISafe_$2234_$",
                              "typeString": "type(contract ISafe)"
                            }
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15412:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15399:39:7"
                      },
                      {
                        "assignments": [
                          1528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1528,
                            "mutability": "mutable",
                            "name": "nftManager",
                            "nameLocation": "15456:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15448:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15448:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1534,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1530,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1504,
                                  "src": "15477:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1529,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "15469:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 1531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15469:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 1532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15483:3:7",
                            "memberName": "nft",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2274,
                            "src": "15469:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15469:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15448:40:7"
                      },
                      {
                        "assignments": [
                          1537
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1537,
                            "mutability": "mutable",
                            "name": "nftPositionManager",
                            "nameLocation": "15526:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15498:46:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                              "typeString": "contract INonfungiblePositionManager"
                            },
                            "typeName": {
                              "id": 1536,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1535,
                                "name": "INonfungiblePositionManager",
                                "nameLocations": [
                                  "15498:27:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2410,
                                "src": "15498:27:7"
                              },
                              "referencedDeclaration": 2410,
                              "src": "15498:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1541,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1539,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "15592:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1538,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2410,
                            "src": "15547:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15547:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15498:118:7"
                      },
                      {
                        "assignments": [
                          null,
                          null,
                          1543,
                          1545,
                          null,
                          null,
                          null,
                          1547,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 1543,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "15717:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15709:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15709:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1545,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "15745:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15737:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1544,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15737:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 1547,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nameLocation": "15815:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15807:17:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 1546,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "15807:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 1552,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1550,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "15910:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1548,
                              "name": "nftPositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1537,
                              "src": "15881:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 1549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15900:9:7",
                            "memberName": "positions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2381,
                            "src": "15881:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (uint256) view external returns (uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15881:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15667:251:7"
                      },
                      {
                        "assignments": [
                          1554
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1554,
                            "mutability": "mutable",
                            "name": "initialUsdtBalance",
                            "nameLocation": "15937:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15929:26:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1553,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15929:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1561,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1558,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1518,
                                  "src": "15982:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15974:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1556,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15974:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15974:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1555,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "15958:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15958:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15929:59:7"
                      },
                      {
                        "assignments": [
                          1563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1563,
                            "mutability": "mutable",
                            "name": "veloAmount",
                            "nameLocation": "16006:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "15998:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1562,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15998:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1565,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16019:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15998:22:7"
                      },
                      {
                        "assignments": [
                          1567
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1567,
                            "mutability": "mutable",
                            "name": "gaugeAddress",
                            "nameLocation": "16039:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "16031:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1566,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16031:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1573,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1569,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1504,
                                  "src": "16062:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1568,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "16054:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16054:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 1571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16068:5:7",
                            "memberName": "gauge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "16054:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16054:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16031:44:7"
                      },
                      {
                        "assignments": [
                          1576
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1576,
                            "mutability": "mutable",
                            "name": "clGauge",
                            "nameLocation": "16094:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "16085:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLGauge_$2314",
                              "typeString": "contract ICLGauge"
                            },
                            "typeName": {
                              "id": 1575,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1574,
                                "name": "ICLGauge",
                                "nameLocations": [
                                  "16085:8:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2314,
                                "src": "16085:8:7"
                              },
                              "referencedDeclaration": 2314,
                              "src": "16085:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1580,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1578,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "16113:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1577,
                            "name": "ICLGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "16104:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                              "typeString": "type(contract ICLGauge)"
                            }
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16104:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLGauge_$2314",
                            "typeString": "contract ICLGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16085:41:7"
                      },
                      {
                        "assignments": [
                          1582
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1582,
                            "mutability": "mutable",
                            "name": "isStaked",
                            "nameLocation": "16141:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "16136:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1581,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "16136:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1591,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1587,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1518,
                                  "src": "16183:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16175:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1585,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16175:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16175:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1589,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "16190:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1583,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "16152:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16160:14:7",
                            "memberName": "stakedContains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "16152:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 1590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16152:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16136:62:7"
                      },
                      {
                        "condition": {
                          "id": 1592,
                          "name": "isStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "16251:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1611,
                        "nodeType": "IfStatement",
                        "src": "16247:157:7",
                        "trueBody": {
                          "id": 1610,
                          "nodeType": "Block",
                          "src": "16261:143:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1593,
                                  "name": "veloAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1563,
                                  "src": "16275:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1598,
                                          "name": "safe",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1518,
                                          "src": "16311:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISafe_$2234",
                                            "typeString": "contract ISafe"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ISafe_$2234",
                                            "typeString": "contract ISafe"
                                          }
                                        ],
                                        "id": 1597,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "16303:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1596,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "16303:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1599,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16303:13:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1600,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1506,
                                      "src": "16318:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1594,
                                      "name": "clGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1576,
                                      "src": "16288:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                        "typeString": "contract ICLGauge"
                                      }
                                    },
                                    "id": 1595,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16296:6:7",
                                    "memberName": "earned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2301,
                                    "src": "16288:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16288:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16275:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1603,
                              "nodeType": "ExpressionStatement",
                              "src": "16275:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1605,
                                    "name": "safe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1518,
                                    "src": "16365:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISafe_$2234",
                                      "typeString": "contract ISafe"
                                    }
                                  },
                                  {
                                    "id": 1606,
                                    "name": "gaugeAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1567,
                                    "src": "16371:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1607,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1506,
                                    "src": "16385:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISafe_$2234",
                                      "typeString": "contract ISafe"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1604,
                                  "name": "_handleUnstakeAndCollect",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1276,
                                  "src": "16340:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract ISafe,address,uint256)"
                                  }
                                },
                                "id": 1608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16340:53:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1609,
                              "nodeType": "ExpressionStatement",
                              "src": "16340:53:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1613,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "16422:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "16414:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16414:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1615,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16432:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16414:19:7"
                      },
                      {
                        "assignments": [
                          1617
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1617,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "16451:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "16443:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1616,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16443:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1619,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16461:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16443:19:7"
                      },
                      {
                        "condition": {
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "16477:9:7",
                          "subExpression": {
                            "id": 1620,
                            "name": "isStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1582,
                            "src": "16478:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1661,
                        "nodeType": "IfStatement",
                        "src": "16473:602:7",
                        "trueBody": {
                          "id": 1660,
                          "nodeType": "Block",
                          "src": "16488:587:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1622,
                                      "name": "amount0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1613,
                                      "src": "16584:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1623,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1617,
                                      "src": "16593:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1624,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "16583:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1626,
                                      "name": "safe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1518,
                                      "src": "16617:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      }
                                    },
                                    {
                                      "id": 1627,
                                      "name": "nftManager",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1528,
                                      "src": "16623:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1628,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1506,
                                      "src": "16635:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1625,
                                    "name": "_collectOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1397,
                                    "src": "16604:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (contract ISafe,address,uint256) returns (uint256,uint256)"
                                    }
                                  },
                                  "id": 1629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16604:39:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "16583:60:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1631,
                              "nodeType": "ExpressionStatement",
                              "src": "16583:60:7"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1632,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1613,
                                  "src": "16661:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16671:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16661:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1645,
                              "nodeType": "IfStatement",
                              "src": "16657:219:7",
                              "trueBody": {
                                "id": 1644,
                                "nodeType": "Block",
                                "src": "16674:202:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1637,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1518,
                                              "src": "16779:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            {
                                              "id": 1638,
                                              "name": "token0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1543,
                                              "src": "16785:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1639,
                                              "name": "amount0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1613,
                                              "src": "16793:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1636,
                                            "name": "_swapToStable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "16765:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 1640,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "16765:36:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "546f6b656e302073776170206661696c6564",
                                          "id": 1641,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16823:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                            "typeString": "literal_string \"Token0 swap failed\""
                                          },
                                          "value": "Token0 swap failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                            "typeString": "literal_string \"Token0 swap failed\""
                                          }
                                        ],
                                        "id": 1635,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "16736:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1642,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16736:125:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1643,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16736:125:7"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1646,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1617,
                                  "src": "16894:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16904:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "16894:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1659,
                              "nodeType": "IfStatement",
                              "src": "16890:175:7",
                              "trueBody": {
                                "id": 1658,
                                "nodeType": "Block",
                                "src": "16907:158:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1651,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1518,
                                              "src": "16968:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            {
                                              "id": 1652,
                                              "name": "token1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1545,
                                              "src": "16974:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1653,
                                              "name": "amount1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1617,
                                              "src": "16982:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1650,
                                            "name": "_swapToStable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "16954:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 1654,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "16954:36:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "546f6b656e312073776170206661696c6564",
                                          "id": 1655,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17012:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                            "typeString": "literal_string \"Token1 swap failed\""
                                          },
                                          "value": "Token1 swap failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                            "typeString": "literal_string \"Token1 swap failed\""
                                          }
                                        ],
                                        "id": 1649,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "16925:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1656,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16925:125:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1657,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16925:125:7"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1662,
                            "name": "liquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1547,
                            "src": "17126:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17138:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17126:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1673,
                        "nodeType": "IfStatement",
                        "src": "17122:100:7",
                        "trueBody": {
                          "id": 1672,
                          "nodeType": "Block",
                          "src": "17141:81:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1666,
                                    "name": "safe",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1518,
                                    "src": "17174:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISafe_$2234",
                                      "typeString": "contract ISafe"
                                    }
                                  },
                                  {
                                    "id": 1667,
                                    "name": "nftManager",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1528,
                                    "src": "17180:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1668,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1506,
                                    "src": "17192:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1669,
                                    "name": "liquidity",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1547,
                                    "src": "17201:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISafe_$2234",
                                      "typeString": "contract ISafe"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "id": 1665,
                                  "name": "_decreaseLiquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1321,
                                  "src": "17155:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$_t_uint128_$returns$__$",
                                    "typeString": "function (contract ISafe,address,uint256,uint128)"
                                  }
                                },
                                "id": 1670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17155:56:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1671,
                              "nodeType": "ExpressionStatement",
                              "src": "17155:56:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1675,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
                              "src": "17245:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            {
                              "id": 1676,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "17251:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1677,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "17263:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1674,
                            "name": "_collectOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "17232:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (contract ISafe,address,uint256) returns (uint256,uint256)"
                            }
                          },
                          "id": 1678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17232:39:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 1679,
                        "nodeType": "ExpressionStatement",
                        "src": "17232:39:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1681,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1518,
                              "src": "17320:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            {
                              "id": 1682,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "17326:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1683,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "17338:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1680,
                            "name": "_burnPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "17306:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ISafe,address,uint256)"
                            }
                          },
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17306:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1685,
                        "nodeType": "ExpressionStatement",
                        "src": "17306:40:7"
                      },
                      {
                        "assignments": [
                          1687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1687,
                            "mutability": "mutable",
                            "name": "finalUsdtBalance",
                            "nameLocation": "17365:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "17357:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17357:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1694,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1691,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1518,
                                  "src": "17408:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17400:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1689,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17400:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17400:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1688,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "17384:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17384:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17357:57:7"
                      },
                      {
                        "assignments": [
                          1696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1696,
                            "mutability": "mutable",
                            "name": "totalUsdtAmount",
                            "nameLocation": "17432:15:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1714,
                            "src": "17424:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1695,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17424:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1700,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1697,
                            "name": "finalUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1687,
                            "src": "17450:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1698,
                            "name": "initialUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "17469:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17450:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17424:63:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1704,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1518,
                                  "src": "17696:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17688:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1702,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17688:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17688:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1706,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "17715:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1707,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "17733:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1708,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "17754:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1709,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1617,
                              "src": "17775:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1710,
                              "name": "veloAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "17796:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1711,
                              "name": "totalUsdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1696,
                              "src": "17820:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1701,
                            "name": "EarningsCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "17657:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17657:188:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1713,
                        "nodeType": "EmitStatement",
                        "src": "17652:193:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1502,
                    "nodeType": "StructuredDocumentation",
                    "src": "15176:64:7",
                    "text": "@notice Main function to withdraw liquidity and collect fees"
                  },
                  "functionSelector": "ac6e07ee",
                  "id": 1715,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAndCollect",
                  "nameLocation": "15254:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "15281:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "15273:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15273:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "15295:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "15287:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15287:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15272:31:7"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15313:0:7"
                  },
                  "scope": 2200,
                  "src": "15245:2607:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1748,
                    "nodeType": "Block",
                    "src": "17969:371:7",
                    "statements": [
                      {
                        "assignments": [
                          1726
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1726,
                            "mutability": "mutable",
                            "name": "burnData",
                            "nameLocation": "17992:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1748,
                            "src": "17979:21:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1725,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17979:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1734,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 1729,
                                  "name": "INonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2410,
                                  "src": "18039:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                    "typeString": "type(contract INonfungiblePositionManager)"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "18067:4:7",
                                "memberName": "burn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2409,
                                "src": "18039:32:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_payable$_t_uint256_$returns$__$",
                                  "typeString": "function INonfungiblePositionManager.burn(uint256) payable"
                                }
                              },
                              "id": 1731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "18072:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "18039:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 1732,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "18094:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1727,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "18003:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18007:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "18003:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18003:108:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17979:132:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1738,
                                  "name": "nftManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1720,
                                  "src": "18190:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 1739,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18218:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 1740,
                                  "name": "burnData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1726,
                                  "src": "18237:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1741,
                                      "name": "Enum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 288,
                                      "src": "18263:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                        "typeString": "type(contract Enum)"
                                      }
                                    },
                                    "id": 1742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18268:9:7",
                                    "memberName": "Operation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 287,
                                    "src": "18263:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                      "typeString": "type(enum Enum.Operation)"
                                    }
                                  },
                                  "id": 1743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "18278:4:7",
                                  "memberName": "Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 285,
                                  "src": "18263:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                ],
                                "expression": {
                                  "id": 1736,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1718,
                                  "src": "18142:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                },
                                "id": 1737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18147:25:7",
                                "memberName": "execTransactionFromModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2217,
                                "src": "18142:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                }
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18142:154:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4275726e206661696c6564",
                              "id": 1745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18310:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_631bce6a3bcd28e9679e48ac217872ce5f9b492f607a1d08fbb2906971f38cc4",
                                "typeString": "literal_string \"Burn failed\""
                              },
                              "value": "Burn failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_631bce6a3bcd28e9679e48ac217872ce5f9b492f607a1d08fbb2906971f38cc4",
                                "typeString": "literal_string \"Burn failed\""
                              }
                            ],
                            "id": 1735,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18121:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18121:212:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "18121:212:7"
                      }
                    ]
                  },
                  "id": 1749,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burnPosition",
                  "nameLocation": "17867:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1718,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "17896:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "17890:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISafe_$2234",
                          "typeString": "contract ISafe"
                        },
                        "typeName": {
                          "id": 1717,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1716,
                            "name": "ISafe",
                            "nameLocations": [
                              "17890:5:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2234,
                            "src": "17890:5:7"
                          },
                          "referencedDeclaration": 2234,
                          "src": "17890:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "nftManager",
                        "nameLocation": "17918:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "17910:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17910:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "17946:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "17938:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17938:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17880:79:7"
                  },
                  "returnParameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17969:0:7"
                  },
                  "scope": 2200,
                  "src": "17858:482:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1961,
                    "nodeType": "Block",
                    "src": "18572:2635:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1758,
                                "name": "approvedPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "18590:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1760,
                              "indexExpression": {
                                "id": 1759,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "18604:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18590:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c65",
                              "id": 1761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18611:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              },
                              "value": "Pool not approved for this module"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              }
                            ],
                            "id": 1757,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18582:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18582:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1763,
                        "nodeType": "ExpressionStatement",
                        "src": "18582:65:7"
                      },
                      {
                        "assignments": [
                          1766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1766,
                            "mutability": "mutable",
                            "name": "safe",
                            "nameLocation": "18664:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "18658:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$2234",
                              "typeString": "contract ISafe"
                            },
                            "typeName": {
                              "id": 1765,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1764,
                                "name": "ISafe",
                                "nameLocations": [
                                  "18658:5:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2234,
                                "src": "18658:5:7"
                              },
                              "referencedDeclaration": 2234,
                              "src": "18658:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1774,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1770,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "18685:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18689:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "18685:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18677:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1768,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18677:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18677:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1767,
                            "name": "ISafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "18671:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISafe_$2234_$",
                              "typeString": "type(contract ISafe)"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18671:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18658:39:7"
                      },
                      {
                        "assignments": [
                          1776
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1776,
                            "mutability": "mutable",
                            "name": "nftManager",
                            "nameLocation": "18715:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "18707:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18707:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1782,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1778,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1752,
                                  "src": "18736:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1777,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "18728:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18728:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 1780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18742:3:7",
                            "memberName": "nft",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2274,
                            "src": "18728:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18728:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18707:40:7"
                      },
                      {
                        "assignments": [
                          1785
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1785,
                            "mutability": "mutable",
                            "name": "nftPositionManager",
                            "nameLocation": "18785:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "18757:46:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                              "typeString": "contract INonfungiblePositionManager"
                            },
                            "typeName": {
                              "id": 1784,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1783,
                                "name": "INonfungiblePositionManager",
                                "nameLocations": [
                                  "18757:27:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2410,
                                "src": "18757:27:7"
                              },
                              "referencedDeclaration": 2410,
                              "src": "18757:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1789,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1787,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "18851:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1786,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2410,
                            "src": "18806:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18806:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18757:118:7"
                      },
                      {
                        "assignments": [
                          null,
                          null,
                          1791,
                          1793,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 1791,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "18976:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "18968:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18968:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1793,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "19004:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "18996:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1792,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18996:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 1798,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1796,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1754,
                              "src": "19152:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1794,
                              "name": "nftPositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1785,
                              "src": "19123:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 1795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19142:9:7",
                            "memberName": "positions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2381,
                            "src": "19123:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (uint256) view external returns (uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19123:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18926:234:7"
                      },
                      {
                        "assignments": [
                          1800
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1800,
                            "mutability": "mutable",
                            "name": "gaugeAddress",
                            "nameLocation": "19179:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19171:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1799,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19171:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1806,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1802,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1752,
                                  "src": "19202:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1801,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "19194:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19194:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 1804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19208:5:7",
                            "memberName": "gauge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "19194:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19194:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19171:44:7"
                      },
                      {
                        "assignments": [
                          1809
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1809,
                            "mutability": "mutable",
                            "name": "clGauge",
                            "nameLocation": "19234:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19225:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLGauge_$2314",
                              "typeString": "contract ICLGauge"
                            },
                            "typeName": {
                              "id": 1808,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1807,
                                "name": "ICLGauge",
                                "nameLocations": [
                                  "19225:8:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2314,
                                "src": "19225:8:7"
                              },
                              "referencedDeclaration": 2314,
                              "src": "19225:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1813,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1811,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1800,
                              "src": "19253:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1810,
                            "name": "ICLGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "19244:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                              "typeString": "type(contract ICLGauge)"
                            }
                          },
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19244:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLGauge_$2314",
                            "typeString": "contract ICLGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19225:41:7"
                      },
                      {
                        "assignments": [
                          1815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1815,
                            "mutability": "mutable",
                            "name": "initialUsdtBalance",
                            "nameLocation": "19285:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19277:26:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1814,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19277:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1822,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1819,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "19330:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19322:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1817,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19322:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19322:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1816,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "19306:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19306:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19277:59:7"
                      },
                      {
                        "assignments": [
                          1824
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1824,
                            "mutability": "mutable",
                            "name": "veloAmount",
                            "nameLocation": "19354:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19346:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1823,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19346:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1825,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19346:18:7"
                      },
                      {
                        "assignments": [
                          1827
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1827,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "19382:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19374:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1826,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19374:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1828,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19374:15:7"
                      },
                      {
                        "assignments": [
                          1830
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1830,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "19407:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19399:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1829,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19399:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1831,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19399:15:7"
                      },
                      {
                        "assignments": [
                          1833
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1833,
                            "mutability": "mutable",
                            "name": "isStaked",
                            "nameLocation": "19430:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "19425:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1832,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19425:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1842,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1838,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "19472:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19464:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1836,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19464:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19464:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1840,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1754,
                              "src": "19479:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1834,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1809,
                              "src": "19441:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 1835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19449:14:7",
                            "memberName": "stakedContains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "19441:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19441:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19425:62:7"
                      },
                      {
                        "condition": {
                          "id": 1843,
                          "name": "isStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1833,
                          "src": "19543:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1931,
                          "nodeType": "Block",
                          "src": "20316:540:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1893,
                                      "name": "amount0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1827,
                                      "src": "20359:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1894,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1830,
                                      "src": "20368:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1895,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "20358:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1897,
                                      "name": "safe",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1766,
                                      "src": "20392:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      }
                                    },
                                    {
                                      "id": 1898,
                                      "name": "nftManager",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1776,
                                      "src": "20398:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1899,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1754,
                                      "src": "20410:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ISafe_$2234",
                                        "typeString": "contract ISafe"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1896,
                                    "name": "_collectOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1397,
                                    "src": "20379:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (contract ISafe,address,uint256) returns (uint256,uint256)"
                                    }
                                  },
                                  "id": 1900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20379:39:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256)"
                                  }
                                },
                                "src": "20358:60:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1902,
                              "nodeType": "ExpressionStatement",
                              "src": "20358:60:7"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1903,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1827,
                                  "src": "20487:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20497:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20487:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1916,
                              "nodeType": "IfStatement",
                              "src": "20483:175:7",
                              "trueBody": {
                                "id": 1915,
                                "nodeType": "Block",
                                "src": "20500:158:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1908,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1766,
                                              "src": "20561:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            {
                                              "id": 1909,
                                              "name": "token0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1791,
                                              "src": "20567:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1910,
                                              "name": "amount0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1827,
                                              "src": "20575:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1907,
                                            "name": "_swapToStable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "20547:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 1911,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20547:36:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "546f6b656e302073776170206661696c6564",
                                          "id": 1912,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20605:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                            "typeString": "literal_string \"Token0 swap failed\""
                                          },
                                          "value": "Token0 swap failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                            "typeString": "literal_string \"Token0 swap failed\""
                                          }
                                        ],
                                        "id": 1906,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "20518:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1913,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20518:125:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1914,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20518:125:7"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1917,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1830,
                                  "src": "20675:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20685:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20675:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1930,
                              "nodeType": "IfStatement",
                              "src": "20671:175:7",
                              "trueBody": {
                                "id": 1929,
                                "nodeType": "Block",
                                "src": "20688:158:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1922,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1766,
                                              "src": "20749:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            {
                                              "id": 1923,
                                              "name": "token1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1793,
                                              "src": "20755:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1924,
                                              "name": "amount1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1830,
                                              "src": "20763:7:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1921,
                                            "name": "_swapToStable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "20735:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 1925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20735:36:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "546f6b656e312073776170206661696c6564",
                                          "id": 1926,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20793:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                            "typeString": "literal_string \"Token1 swap failed\""
                                          },
                                          "value": "Token1 swap failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                            "typeString": "literal_string \"Token1 swap failed\""
                                          }
                                        ],
                                        "id": 1920,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "20706:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1927,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20706:125:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1928,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20706:125:7"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1932,
                        "nodeType": "IfStatement",
                        "src": "19539:1317:7",
                        "trueBody": {
                          "id": 1892,
                          "nodeType": "Block",
                          "src": "19553:757:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1844,
                                  "name": "veloAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "19567:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1849,
                                          "name": "safe",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1766,
                                          "src": "19603:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISafe_$2234",
                                            "typeString": "contract ISafe"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ISafe_$2234",
                                            "typeString": "contract ISafe"
                                          }
                                        ],
                                        "id": 1848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "19595:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1847,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "19595:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19595:13:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1851,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1754,
                                      "src": "19610:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1845,
                                      "name": "clGauge",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1809,
                                      "src": "19580:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                        "typeString": "contract ICLGauge"
                                      }
                                    },
                                    "id": 1846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "19588:6:7",
                                    "memberName": "earned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2301,
                                    "src": "19580:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19580:38:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19567:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1854,
                              "nodeType": "ExpressionStatement",
                              "src": "19567:51:7"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1855,
                                  "name": "veloAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1824,
                                  "src": "19636:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19649:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "19636:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1891,
                              "nodeType": "IfStatement",
                              "src": "19632:668:7",
                              "trueBody": {
                                "id": 1890,
                                "nodeType": "Block",
                                "src": "19652:648:7",
                                "statements": [
                                  {
                                    "assignments": [
                                      1859
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1859,
                                        "mutability": "mutable",
                                        "name": "getRewardData",
                                        "nameLocation": "19683:13:7",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1890,
                                        "src": "19670:26:7",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes"
                                        },
                                        "typeName": {
                                          "id": 1858,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "19670:5:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1867,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "expression": {
                                              "id": 1862,
                                              "name": "ICLGauge",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2314,
                                              "src": "19743:8:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                                                "typeString": "type(contract ICLGauge)"
                                              }
                                            },
                                            "id": 1863,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "19752:9:7",
                                            "memberName": "getReward",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2313,
                                            "src": "19743:18:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                              "typeString": "function ICLGauge.getReward(uint256)"
                                            }
                                          },
                                          "id": 1864,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "19762:8:7",
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "19743:27:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        {
                                          "id": 1865,
                                          "name": "tokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1754,
                                          "src": "19792:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1860,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19699:3:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1861,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "19703:18:7",
                                        "memberName": "encodeWithSelector",
                                        "nodeType": "MemberAccess",
                                        "src": "19699:22:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function (bytes4) pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19699:118:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "19670:147:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1871,
                                              "name": "gaugeAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1800,
                                              "src": "19920:12:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "hexValue": "30",
                                              "id": 1872,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "19958:1:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            {
                                              "id": 1873,
                                              "name": "getRewardData",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1859,
                                              "src": "19985:13:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "expression": {
                                                  "id": 1874,
                                                  "name": "Enum",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 288,
                                                  "src": "20024:4:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                                    "typeString": "type(contract Enum)"
                                                  }
                                                },
                                                "id": 1875,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "20029:9:7",
                                                "memberName": "Operation",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 287,
                                                "src": "20024:14:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                                  "typeString": "type(enum Enum.Operation)"
                                                }
                                              },
                                              "id": 1876,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "20039:4:7",
                                              "memberName": "Call",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 285,
                                              "src": "20024:19:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_Operation_$287",
                                                "typeString": "enum Enum.Operation"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              },
                                              {
                                                "typeIdentifier": "t_enum$_Operation_$287",
                                                "typeString": "enum Enum.Operation"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1869,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1766,
                                              "src": "19864:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            "id": 1870,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "19869:25:7",
                                            "memberName": "execTransactionFromModule",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2217,
                                            "src": "19864:30:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                            }
                                          },
                                          "id": 1877,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "19864:201:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "47617567652067657420726577617264206661696c6564",
                                          "id": 1878,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20087:25:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c81dcec879da167b26cd342adb93fe6e65548387f44af9ecee48f6721759c349",
                                            "typeString": "literal_string \"Gauge get reward failed\""
                                          },
                                          "value": "Gauge get reward failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c81dcec879da167b26cd342adb93fe6e65548387f44af9ecee48f6721759c349",
                                            "typeString": "literal_string \"Gauge get reward failed\""
                                          }
                                        ],
                                        "id": 1868,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "19835:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1879,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19835:295:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1880,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19835:295:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1883,
                                              "name": "safe",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1766,
                                              "src": "20192:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              }
                                            },
                                            {
                                              "id": 1884,
                                              "name": "rewardToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 414,
                                              "src": "20198:11:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 1885,
                                              "name": "veloAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1824,
                                              "src": "20211:10:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                                "typeString": "contract ISafe"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 1882,
                                            "name": "_swapToStable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "20178:13:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                            }
                                          },
                                          "id": 1886,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20178:44:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "5377617020746f20737461626c65206661696c6564",
                                          "id": 1887,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20244:23:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_0d98be423c963bd7884f01df3e4d31a1ccc04ebc36a9d977dcd810fe278a6d27",
                                            "typeString": "literal_string \"Swap to stable failed\""
                                          },
                                          "value": "Swap to stable failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_0d98be423c963bd7884f01df3e4d31a1ccc04ebc36a9d977dcd810fe278a6d27",
                                            "typeString": "literal_string \"Swap to stable failed\""
                                          }
                                        ],
                                        "id": 1881,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "20149:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20149:136:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1889,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20149:136:7"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1934,
                            "mutability": "mutable",
                            "name": "finalUsdtBalance",
                            "nameLocation": "20874:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "20866:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1933,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20866:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1941,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1938,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "20917:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20909:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1936,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20909:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20909:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1935,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "20893:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20893:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20866:57:7"
                      },
                      {
                        "assignments": [
                          1943
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1943,
                            "mutability": "mutable",
                            "name": "totalUsdtAmount",
                            "nameLocation": "20941:15:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1961,
                            "src": "20933:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1942,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20933:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1947,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1944,
                            "name": "finalUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "20959:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1945,
                            "name": "initialUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1815,
                            "src": "20978:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20959:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20933:63:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1951,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "21051:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 1950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21043:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1949,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21043:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21043:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1953,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "21070:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1954,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1754,
                              "src": "21088:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1955,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1827,
                              "src": "21109:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1956,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1830,
                              "src": "21130:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1957,
                              "name": "veloAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1824,
                              "src": "21151:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1958,
                              "name": "totalUsdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "21175:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1948,
                            "name": "EarningsCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "21012:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21012:188:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1960,
                        "nodeType": "EmitStatement",
                        "src": "21007:193:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1750,
                    "nodeType": "StructuredDocumentation",
                    "src": "18346:150:7",
                    "text": "@notice Collects fees from a position and converts them to USDT\n @param pool The pool address\n @param tokenId The ID of the position"
                  },
                  "functionSelector": "e6370309",
                  "id": 1962,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collectAndConvertFees",
                  "nameLocation": "18510:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1752,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "18540:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "18532:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1751,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18532:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1754,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "18554:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1962,
                        "src": "18546:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1753,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18546:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18531:31:7"
                  },
                  "returnParameters": {
                    "id": 1756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18572:0:7"
                  },
                  "scope": 2200,
                  "src": "18501:2706:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1976,
                    "nodeType": "Block",
                    "src": "21327:60:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1973,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1964,
                              "src": "21375:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1970,
                                  "name": "rewardStable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "21351:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1969,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 225,
                                "src": "21344:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21344:20:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21365:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 182,
                            "src": "21344:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21344:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1968,
                        "id": 1975,
                        "nodeType": "Return",
                        "src": "21337:43:7"
                      }
                    ]
                  },
                  "id": 1977,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getUsdtBalance",
                  "nameLocation": "21265:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1964,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "21289:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "21281:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21281:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21280:14:7"
                  },
                  "returnParameters": {
                    "id": 1968,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1967,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "21318:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21318:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21317:9:7"
                  },
                  "scope": 2200,
                  "src": "21256:131:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2198,
                    "nodeType": "Block",
                    "src": "21632:2845:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1986,
                                "name": "approvedPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 430,
                                "src": "21650:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1988,
                              "indexExpression": {
                                "id": 1987,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1980,
                                "src": "21664:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21650:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c65",
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21671:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              },
                              "value": "Pool not approved for this module"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1425be60227c7611411fecee0344e3c83a404a19cc2c72cf4ce939868d4f32ae",
                                "typeString": "literal_string \"Pool not approved for this module\""
                              }
                            ],
                            "id": 1985,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21642:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21642:65:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1991,
                        "nodeType": "ExpressionStatement",
                        "src": "21642:65:7"
                      },
                      {
                        "assignments": [
                          1994
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1994,
                            "mutability": "mutable",
                            "name": "safe",
                            "nameLocation": "21724:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "21718:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafe_$2234",
                              "typeString": "contract ISafe"
                            },
                            "typeName": {
                              "id": 1993,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1992,
                                "name": "ISafe",
                                "nameLocations": [
                                  "21718:5:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2234,
                                "src": "21718:5:7"
                              },
                              "referencedDeclaration": 2234,
                              "src": "21718:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2002,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1998,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "21745:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "21749:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "21745:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21737:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1996,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21737:8:7",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21737:19:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1995,
                            "name": "ISafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2234,
                            "src": "21731:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISafe_$2234_$",
                              "typeString": "type(contract ISafe)"
                            }
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21731:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISafe_$2234",
                            "typeString": "contract ISafe"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21718:39:7"
                      },
                      {
                        "assignments": [
                          2004
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2004,
                            "mutability": "mutable",
                            "name": "nftManager",
                            "nameLocation": "21775:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "21767:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21767:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2010,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2006,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "21796:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2005,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "21788:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 2007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21788:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21802:3:7",
                            "memberName": "nft",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2274,
                            "src": "21788:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21788:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21767:40:7"
                      },
                      {
                        "assignments": [
                          2012
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2012,
                            "mutability": "mutable",
                            "name": "gaugeAddress",
                            "nameLocation": "21825:12:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "21817:20:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2011,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "21817:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2018,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2014,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "21848:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2013,
                                "name": "ICLPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "21840:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICLPool_$2275_$",
                                  "typeString": "type(contract ICLPool)"
                                }
                              },
                              "id": 2015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21840:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLPool_$2275",
                                "typeString": "contract ICLPool"
                              }
                            },
                            "id": 2016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "21854:5:7",
                            "memberName": "gauge",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "21840:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21840:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21817:44:7"
                      },
                      {
                        "assignments": [
                          2021
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2021,
                            "mutability": "mutable",
                            "name": "nftPositionManager",
                            "nameLocation": "21900:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "21872:46:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                              "typeString": "contract INonfungiblePositionManager"
                            },
                            "typeName": {
                              "id": 2020,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2019,
                                "name": "INonfungiblePositionManager",
                                "nameLocations": [
                                  "21872:27:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2410,
                                "src": "21872:27:7"
                              },
                              "referencedDeclaration": 2410,
                              "src": "21872:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2025,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2023,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "21966:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2022,
                            "name": "INonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2410,
                            "src": "21921:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                              "typeString": "type(contract INonfungiblePositionManager)"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21921:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21872:118:7"
                      },
                      {
                        "assignments": [
                          2028
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2028,
                            "mutability": "mutable",
                            "name": "clGauge",
                            "nameLocation": "22009:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22000:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICLGauge_$2314",
                              "typeString": "contract ICLGauge"
                            },
                            "typeName": {
                              "id": 2027,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2026,
                                "name": "ICLGauge",
                                "nameLocations": [
                                  "22000:8:7"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2314,
                                "src": "22000:8:7"
                              },
                              "referencedDeclaration": 2314,
                              "src": "22000:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2032,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2030,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "22028:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2029,
                            "name": "ICLGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "22019:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                              "typeString": "type(contract ICLGauge)"
                            }
                          },
                          "id": 2031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22019:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICLGauge_$2314",
                            "typeString": "contract ICLGauge"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22000:41:7"
                      },
                      {
                        "assignments": [
                          2034
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2034,
                            "mutability": "mutable",
                            "name": "isStaked",
                            "nameLocation": "22092:8:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22087:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2033,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "22087:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2043,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2039,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "22134:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 2038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22126:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2037,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22126:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22126:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2041,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "22141:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2035,
                              "name": "clGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2028,
                              "src": "22103:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICLGauge_$2314",
                                "typeString": "contract ICLGauge"
                              }
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22111:14:7",
                            "memberName": "stakedContains",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2285,
                            "src": "22103:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) view external returns (bool)"
                            }
                          },
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22103:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22087:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "22167:9:7",
                              "subExpression": {
                                "id": 2045,
                                "name": "isStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2034,
                                "src": "22168:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506f736974696f6e20616c7265616479207374616b6564",
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22178:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_33342b35526ac7b24c06e87bcac1aeef13d28577904fd9a39178577dab83cd98",
                                "typeString": "literal_string \"Position already staked\""
                              },
                              "value": "Position already staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_33342b35526ac7b24c06e87bcac1aeef13d28577904fd9a39178577dab83cd98",
                                "typeString": "literal_string \"Position already staked\""
                              }
                            ],
                            "id": 2044,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22159:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22159:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2049,
                        "nodeType": "ExpressionStatement",
                        "src": "22159:45:7"
                      },
                      {
                        "assignments": [
                          2051
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2051,
                            "mutability": "mutable",
                            "name": "initialUsdtBalance",
                            "nameLocation": "22223:18:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22215:26:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2050,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22215:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2058,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2055,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "22268:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22260:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2053,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22260:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22260:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2052,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "22244:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22244:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22215:59:7"
                      },
                      {
                        "assignments": [
                          null,
                          null,
                          2060,
                          2062,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 2060,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "22375:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22367:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2059,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22367:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2062,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "22403:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22395:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2061,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "22395:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 2067,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2065,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "22551:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2063,
                              "name": "nftPositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2021,
                              "src": "22522:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 2064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "22541:9:7",
                            "memberName": "positions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2381,
                            "src": "22522:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (uint256) view external returns (uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22522:37:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint96,address,address,address,int24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22325:234:7"
                      },
                      {
                        "assignments": [
                          2069,
                          2071
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2069,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "22630:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22622:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2068,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22622:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2071,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "22647:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "22639:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2070,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22639:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2077,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2073,
                              "name": "safe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1994,
                              "src": "22684:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              }
                            },
                            {
                              "id": 2074,
                              "name": "nftManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "22702:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2075,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "22726:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISafe_$2234",
                                "typeString": "contract ISafe"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2072,
                            "name": "_collectOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "22658:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (contract ISafe,address,uint256) returns (uint256,uint256)"
                            }
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22658:85:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22621:122:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2078,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2069,
                            "src": "22804:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22814:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22804:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2091,
                        "nodeType": "IfStatement",
                        "src": "22800:109:7",
                        "trueBody": {
                          "id": 2090,
                          "nodeType": "Block",
                          "src": "22817:92:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2083,
                                        "name": "safe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1994,
                                        "src": "22853:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        }
                                      },
                                      {
                                        "id": 2084,
                                        "name": "token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2060,
                                        "src": "22859:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2085,
                                        "name": "amount0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2069,
                                        "src": "22867:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2082,
                                      "name": "_swapToStable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1501,
                                      "src": "22839:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                      }
                                    },
                                    "id": 2086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22839:36:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "546f6b656e302073776170206661696c6564",
                                    "id": 2087,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22877:20:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                      "typeString": "literal_string \"Token0 swap failed\""
                                    },
                                    "value": "Token0 swap failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f24f711e93602710f94de9a10b010c561c3bd4e98d5d6ff309c6c969a19b81ee",
                                      "typeString": "literal_string \"Token0 swap failed\""
                                    }
                                  ],
                                  "id": 2081,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22831:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22831:67:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2089,
                              "nodeType": "ExpressionStatement",
                              "src": "22831:67:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2092,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2071,
                            "src": "22922:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22932:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "22922:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2105,
                        "nodeType": "IfStatement",
                        "src": "22918:109:7",
                        "trueBody": {
                          "id": 2104,
                          "nodeType": "Block",
                          "src": "22935:92:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2097,
                                        "name": "safe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1994,
                                        "src": "22971:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        }
                                      },
                                      {
                                        "id": 2098,
                                        "name": "token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2062,
                                        "src": "22977:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2099,
                                        "name": "amount1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2071,
                                        "src": "22985:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2096,
                                      "name": "_swapToStable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1501,
                                      "src": "22957:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISafe_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (contract ISafe,address,uint256) returns (bool)"
                                      }
                                    },
                                    "id": 2100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22957:36:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "546f6b656e312073776170206661696c6564",
                                    "id": 2101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22995:20:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                      "typeString": "literal_string \"Token1 swap failed\""
                                    },
                                    "value": "Token1 swap failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_28d10c999bcfd1146e3dd3232d1b631fc892695160c99cd86f4328ad6a2a7b11",
                                      "typeString": "literal_string \"Token1 swap failed\""
                                    }
                                  ],
                                  "id": 2095,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22949:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22949:67:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2103,
                              "nodeType": "ExpressionStatement",
                              "src": "22949:67:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2107,
                            "mutability": "mutable",
                            "name": "isApproved",
                            "nameLocation": "23085:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "23080:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2106,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23080:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2118,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2114,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "23176:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 2113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23168:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2112,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23168:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23168:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2116,
                              "name": "gaugeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "23183:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2109,
                                  "name": "nftManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2004,
                                  "src": "23126:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2108,
                                "name": "INonfungiblePositionManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2410,
                                "src": "23098:27:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                  "typeString": "type(contract INonfungiblePositionManager)"
                                }
                              },
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23098:39:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INonfungiblePositionManager_$2410",
                                "typeString": "contract INonfungiblePositionManager"
                              }
                            },
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "23151:16:7",
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2344,
                            "src": "23098:69:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23098:98:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23080:116:7"
                      },
                      {
                        "condition": {
                          "id": 2120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "23211:11:7",
                          "subExpression": {
                            "id": 2119,
                            "name": "isApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2107,
                            "src": "23212:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2146,
                        "nodeType": "IfStatement",
                        "src": "23207:500:7",
                        "trueBody": {
                          "id": 2145,
                          "nodeType": "Block",
                          "src": "23224:483:7",
                          "statements": [
                            {
                              "assignments": [
                                2122
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2122,
                                  "mutability": "mutable",
                                  "name": "approvalData",
                                  "nameLocation": "23251:12:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2145,
                                  "src": "23238:25:7",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2121,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23238:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2131,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 2125,
                                        "name": "INonfungiblePositionManager",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2410,
                                        "src": "23306:27:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$2410_$",
                                          "typeString": "type(contract INonfungiblePositionManager)"
                                        }
                                      },
                                      "id": 2126,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "23334:17:7",
                                      "memberName": "setApprovalForAll",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2352,
                                      "src": "23306:45:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                        "typeString": "function INonfungiblePositionManager.setApprovalForAll(address,bool)"
                                      }
                                    },
                                    "id": 2127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "23352:8:7",
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "23306:54:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 2128,
                                    "name": "gaugeAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2012,
                                    "src": "23378:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 2129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23408:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2123,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "23266:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "23270:18:7",
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "23266:22:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 2130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23266:160:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23238:188:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2135,
                                        "name": "nftManager",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2004,
                                        "src": "23517:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "hexValue": "30",
                                        "id": 2136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "23549:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      {
                                        "id": 2137,
                                        "name": "approvalData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2122,
                                        "src": "23572:12:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 2138,
                                            "name": "Enum",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 288,
                                            "src": "23606:4:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                              "typeString": "type(contract Enum)"
                                            }
                                          },
                                          "id": 2139,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "23611:9:7",
                                          "memberName": "Operation",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 287,
                                          "src": "23606:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                            "typeString": "type(enum Enum.Operation)"
                                          }
                                        },
                                        "id": 2140,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "23621:4:7",
                                        "memberName": "Call",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 285,
                                        "src": "23606:19:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Operation_$287",
                                          "typeString": "enum Enum.Operation"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_Operation_$287",
                                          "typeString": "enum Enum.Operation"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2133,
                                        "name": "safe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1994,
                                        "src": "23465:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISafe_$2234",
                                          "typeString": "contract ISafe"
                                        }
                                      },
                                      "id": 2134,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "23470:25:7",
                                      "memberName": "execTransactionFromModule",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2217,
                                      "src": "23465:30:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                      }
                                    },
                                    "id": 2141,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "23465:178:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e465420617070726f76616c206661696c6564",
                                    "id": 2142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23661:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4c8548e4cfe79c5cb4f03a000674e596e23d2516462f0439c0513a8df26454a9",
                                      "typeString": "literal_string \"NFT approval failed\""
                                    },
                                    "value": "NFT approval failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4c8548e4cfe79c5cb4f03a000674e596e23d2516462f0439c0513a8df26454a9",
                                      "typeString": "literal_string \"NFT approval failed\""
                                    }
                                  ],
                                  "id": 2132,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "23440:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23440:256:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2144,
                              "nodeType": "ExpressionStatement",
                              "src": "23440:256:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2148
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2148,
                            "mutability": "mutable",
                            "name": "stakeData",
                            "nameLocation": "23760:9:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "23747:22:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2147,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "23747:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2156,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 2151,
                                  "name": "ICLGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2314,
                                  "src": "23808:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICLGauge_$2314_$",
                                    "typeString": "type(contract ICLGauge)"
                                  }
                                },
                                "id": 2152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "23817:7:7",
                                "memberName": "deposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2291,
                                "src": "23808:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function ICLGauge.deposit(uint256)"
                                }
                              },
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "23825:8:7",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "23808:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 2154,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "23847:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2149,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "23772:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "23776:18:7",
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "23772:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23772:92:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23747:117:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2160,
                                  "name": "gaugeAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2012,
                                  "src": "23943:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 2161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23973:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "id": 2162,
                                  "name": "stakeData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "23992:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 2163,
                                      "name": "Enum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 288,
                                      "src": "24019:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Enum_$288_$",
                                        "typeString": "type(contract Enum)"
                                      }
                                    },
                                    "id": 2164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "24024:9:7",
                                    "memberName": "Operation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 287,
                                    "src": "24019:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Operation_$287_$",
                                      "typeString": "type(enum Enum.Operation)"
                                    }
                                  },
                                  "id": 2165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "24034:4:7",
                                  "memberName": "Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 285,
                                  "src": "24019:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_Operation_$287",
                                    "typeString": "enum Enum.Operation"
                                  }
                                ],
                                "expression": {
                                  "id": 2158,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "23895:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                },
                                "id": 2159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23900:25:7",
                                "memberName": "execTransactionFromModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2217,
                                "src": "23895:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$287_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,bytes memory,enum Enum.Operation) external returns (bool)"
                                }
                              },
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23895:157:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b65206661696c6564",
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24066:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0da46a6b1264c62b2840a7d8a0098341fd6ee5723f013baa9f5b8d0726d09fd6",
                                "typeString": "literal_string \"Stake failed\""
                              },
                              "value": "Stake failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0da46a6b1264c62b2840a7d8a0098341fd6ee5723f013baa9f5b8d0726d09fd6",
                                "typeString": "literal_string \"Stake failed\""
                              }
                            ],
                            "id": 2157,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23874:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23874:216:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2169,
                        "nodeType": "ExpressionStatement",
                        "src": "23874:216:7"
                      },
                      {
                        "assignments": [
                          2171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2171,
                            "mutability": "mutable",
                            "name": "finalUsdtBalance",
                            "nameLocation": "24109:16:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "24101:24:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2170,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24101:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2178,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2175,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "24152:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 2174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "24144:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "24144:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24144:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2172,
                            "name": "_getUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1977,
                            "src": "24128:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24128:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24101:57:7"
                      },
                      {
                        "assignments": [
                          2180
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2180,
                            "mutability": "mutable",
                            "name": "totalUsdtAmount",
                            "nameLocation": "24176:15:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2198,
                            "src": "24168:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2179,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "24168:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2184,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2181,
                            "name": "finalUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2171,
                            "src": "24194:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2182,
                            "name": "initialUsdtBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2051,
                            "src": "24213:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24194:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24168:63:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2188,
                                  "name": "safe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1994,
                                  "src": "24286:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISafe_$2234",
                                    "typeString": "contract ISafe"
                                  }
                                ],
                                "id": 2187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "24278:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2186,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "24278:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24278:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2190,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1980,
                              "src": "24305:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2191,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1982,
                              "src": "24323:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2192,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "24344:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2193,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "24365:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24386:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 2195,
                              "name": "totalUsdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2180,
                              "src": "24445:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2185,
                            "name": "EarningsCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "24247:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24247:223:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2197,
                        "nodeType": "EmitStatement",
                        "src": "24242:228:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1978,
                    "nodeType": "StructuredDocumentation",
                    "src": "21393:169:7",
                    "text": "@notice Stakes a position in the gauge and collects any earned fees before staking\n @param pool The pool address\n @param tokenId The ID of the position"
                  },
                  "functionSelector": "31a8f1c9",
                  "id": 2199,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeAndCollect",
                  "nameLocation": "21576:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1980,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "21600:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "21592:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21592:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "21614:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "21606:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1981,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21606:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21591:31:7"
                  },
                  "returnParameters": {
                    "id": 1984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21632:0:7"
                  },
                  "scope": 2200,
                  "src": "21567:2910:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2201,
              "src": "408:24071:7",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                448,
                454,
                470,
                476,
                482,
                488,
                496
              ]
            }
          ],
          "src": "37:24443:7"
        },
        "id": 7
      },
      "contracts/ISafe.sol": {
        "ast": {
          "absolutePath": "contracts/ISafe.sol",
          "exportedSymbols": {
            "Enum": [
              288
            ],
            "ISafe": [
              2234
            ]
          },
          "id": 2235,
          "license": "LGPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2202,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:8"
            },
            {
              "absolutePath": "@safe-global/safe-contracts/contracts/common/Enum.sol",
              "file": "@safe-global/safe-contracts/contracts/common/Enum.sol",
              "id": 2203,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2235,
              "sourceUnit": 289,
              "src": "62:63:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISafe",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2234,
              "linearizedBaseContracts": [
                2234
              ],
              "name": "ISafe",
              "nameLocation": "137:5:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "468721a7",
                  "id": 2217,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execTransactionFromModule",
                  "nameLocation": "158:25:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2205,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "201:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "193:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "193:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "221:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "213:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "213:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2209,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "249:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "236:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2208,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "236:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2212,
                        "mutability": "mutable",
                        "name": "operation",
                        "nameLocation": "278:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "263:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$287",
                          "typeString": "enum Enum.Operation"
                        },
                        "typeName": {
                          "id": 2211,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2210,
                            "name": "Enum.Operation",
                            "nameLocations": [
                              "263:4:8",
                              "268:9:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 287,
                            "src": "263:14:8"
                          },
                          "referencedDeclaration": 287,
                          "src": "263:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Operation_$287",
                            "typeString": "enum Enum.Operation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "183:110:8"
                  },
                  "returnParameters": {
                    "id": 2216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2215,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "312:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2214,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:6:8"
                  },
                  "scope": 2234,
                  "src": "149:169:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5229073f",
                  "id": 2233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execTransactionFromModuleReturnData",
                  "nameLocation": "333:35:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2219,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "386:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "378:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "378:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2221,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "406:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "398:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "398:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2223,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "434:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "421:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "421:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2226,
                        "mutability": "mutable",
                        "name": "operation",
                        "nameLocation": "463:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "448:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$287",
                          "typeString": "enum Enum.Operation"
                        },
                        "typeName": {
                          "id": 2225,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2224,
                            "name": "Enum.Operation",
                            "nameLocations": [
                              "448:4:8",
                              "453:9:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 287,
                            "src": "448:14:8"
                          },
                          "referencedDeclaration": 287,
                          "src": "448:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Operation_$287",
                            "typeString": "enum Enum.Operation"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "368:110:8"
                  },
                  "returnParameters": {
                    "id": 2232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "502:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "497:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "497:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2231,
                        "mutability": "mutable",
                        "name": "returnData",
                        "nameLocation": "524:10:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2233,
                        "src": "511:23:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2230,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "496:39:8"
                  },
                  "scope": 2234,
                  "src": "324:212:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2235,
              "src": "127:411:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "37:502:8"
        },
        "id": 8
      },
      "contracts/choloInterfaces.sol": {
        "ast": {
          "absolutePath": "contracts/choloInterfaces.sol",
          "exportedSymbols": {
            "AggregatorV3Interface": [
              2262
            ],
            "ICLGauge": [
              2314
            ],
            "ICLPool": [
              2275
            ],
            "INonfungiblePositionManager": [
              2410
            ],
            "Route": [
              2243
            ]
          },
          "id": 2411,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2236,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:9"
            },
            {
              "canonicalName": "Route",
              "id": 2243,
              "members": [
                {
                  "constant": false,
                  "id": 2238,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "97:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "89:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "89:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "115:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "107:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "107:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2242,
                  "mutability": "mutable",
                  "name": "stable",
                  "nameLocation": "128:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "123:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "123:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Route",
              "nameLocation": "77:5:9",
              "nodeType": "StructDefinition",
              "scope": 2411,
              "src": "70:67:9",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AggregatorV3Interface",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2262,
              "linearizedBaseContracts": [
                2262
              ],
              "name": "AggregatorV3Interface",
              "nameLocation": "149:21:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "feaf968c",
                  "id": 2256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "latestRoundData",
                  "nameLocation": "186:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "201:2:9"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2246,
                        "mutability": "mutable",
                        "name": "roundId",
                        "nameLocation": "271:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "264:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2245,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "264:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2248,
                        "mutability": "mutable",
                        "name": "answer",
                        "nameLocation": "299:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "292:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2247,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "292:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2250,
                        "mutability": "mutable",
                        "name": "startedAt",
                        "nameLocation": "327:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "319:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "319:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2252,
                        "mutability": "mutable",
                        "name": "updatedAt",
                        "nameLocation": "358:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "350:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "350:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "answeredInRound",
                        "nameLocation": "388:15:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "381:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        },
                        "typeName": {
                          "id": 2253,
                          "name": "uint80",
                          "nodeType": "ElementaryTypeName",
                          "src": "381:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "250:163:9"
                  },
                  "scope": 2262,
                  "src": "177:237:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 2261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "429:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "437:2:9"
                  },
                  "returnParameters": {
                    "id": 2260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2259,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2261,
                        "src": "463:5:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2258,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:7:9"
                  },
                  "scope": 2262,
                  "src": "420:50:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2411,
              "src": "139:333:9",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICLPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2275,
              "linearizedBaseContracts": [
                2275
              ],
              "name": "ICLPool",
              "nameLocation": "484:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2263,
                    "nodeType": "StructuredDocumentation",
                    "src": "498:91:9",
                    "text": "@notice The gauge corresponding to this pool\n @return The gauge contract address"
                  },
                  "functionSelector": "a6f19c84",
                  "id": 2268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "gauge",
                  "nameLocation": "603:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "608:2:9"
                  },
                  "returnParameters": {
                    "id": 2267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2268,
                        "src": "634:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:9:9"
                  },
                  "scope": 2275,
                  "src": "594:49:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2269,
                    "nodeType": "StructuredDocumentation",
                    "src": "649:76:9",
                    "text": "@notice The nft manager\n @return The nft manager contract address"
                  },
                  "functionSelector": "47ccca02",
                  "id": 2274,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nft",
                  "nameLocation": "739:3:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "742:2:9"
                  },
                  "returnParameters": {
                    "id": 2273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2272,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2274,
                        "src": "768:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:9:9"
                  },
                  "scope": 2275,
                  "src": "730:47:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2411,
              "src": "474:305:9",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICLGauge",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2314,
              "linearizedBaseContracts": [
                2314
              ],
              "name": "ICLGauge",
              "nameLocation": "791:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2276,
                    "nodeType": "StructuredDocumentation",
                    "src": "806:237:9",
                    "text": "@notice Check whether a position is staked in the gauge by a certain user\n @param depositor The address of the user\n @param tokenId The tokenId of the position\n @return Whether the position is staked in the gauge"
                  },
                  "functionSelector": "c69deec5",
                  "id": 2285,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakedContains",
                  "nameLocation": "1057:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2278,
                        "mutability": "mutable",
                        "name": "depositor",
                        "nameLocation": "1089:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "1081:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1081:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1116:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "1108:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1108:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1071:58:9"
                  },
                  "returnParameters": {
                    "id": 2284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2283,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "1153:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2282,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1153:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1152:6:9"
                  },
                  "scope": 2314,
                  "src": "1048:111:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2286,
                    "nodeType": "StructuredDocumentation",
                    "src": "1165:176:9",
                    "text": "@notice Used to deposit a CL position into the gauge\n @notice Allows the user to receive emissions instead of fees\n @param tokenId The tokenId of the position"
                  },
                  "functionSelector": "b6b55f25",
                  "id": 2291,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "1355:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2288,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1371:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2291,
                        "src": "1363:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1363:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1362:17:9"
                  },
                  "returnParameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1388:0:9"
                  },
                  "scope": 2314,
                  "src": "1346:43:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2292,
                    "nodeType": "StructuredDocumentation",
                    "src": "1395:387:9",
                    "text": "@notice Returns the claimable rewards for a given account and tokenId\n @dev Throws if account is not the position owner\n @dev pool.updateRewardsGrowthGlobal() needs to be called first, to return the correct claimable rewards\n @param account The address of the user\n @param tokenId The tokenId of the position\n @return The amount of claimable reward"
                  },
                  "functionSelector": "3e491d47",
                  "id": 2301,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "earned",
                  "nameLocation": "1796:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2294,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1820:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "1812:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2296,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1845:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "1837:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2295,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1802:56:9"
                  },
                  "returnParameters": {
                    "id": 2300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2299,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2301,
                        "src": "1882:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1882:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1881:9:9"
                  },
                  "scope": 2314,
                  "src": "1787:104:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2302,
                    "nodeType": "StructuredDocumentation",
                    "src": "1897:247:9",
                    "text": "@notice Used to withdraw a CL position from the gauge\n @notice Allows the user to receive fees instead of emissions\n @notice Outstanding emissions will be collected on withdrawal\n @param tokenId The tokenId of the position"
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 2307,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "2158:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2304,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2175:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2307,
                        "src": "2167:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2167:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2166:17:9"
                  },
                  "returnParameters": {
                    "id": 2306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2192:0:9"
                  },
                  "scope": 2314,
                  "src": "2149:44:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2308,
                    "nodeType": "StructuredDocumentation",
                    "src": "2199:149:9",
                    "text": "@notice Retrieve rewards for a tokenId\n @dev Throws if not called by the position owner\n @param tokenId The tokenId of the position"
                  },
                  "functionSelector": "1c4b774b",
                  "id": 2313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReward",
                  "nameLocation": "2362:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2310,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2380:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "2372:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2372:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2371:17:9"
                  },
                  "returnParameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2397:0:9"
                  },
                  "scope": 2314,
                  "src": "2353:45:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2411,
              "src": "781:1619:9",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "INonfungiblePositionManager",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2410,
              "linearizedBaseContracts": [
                2410
              ],
              "name": "INonfungiblePositionManager",
              "nameLocation": "2412:27:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
                  "id": 2325,
                  "members": [
                    {
                      "constant": false,
                      "id": 2316,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2495:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "2487:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2487:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2318,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nameLocation": "2520:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "2512:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2317,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2512:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2320,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nameLocation": "2547:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "2539:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2539:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2322,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nameLocation": "2575:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "2567:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2567:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2324,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "2603:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "2595:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2595:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DecreaseLiquidityParams",
                  "nameLocation": "2453:23:9",
                  "nodeType": "StructDefinition",
                  "scope": 2410,
                  "src": "2446:172:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.CollectParams",
                  "id": 2334,
                  "members": [
                    {
                      "constant": false,
                      "id": 2327,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2663:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "2655:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2655:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2329,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2688:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "2680:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2328,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2680:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2331,
                      "mutability": "mutable",
                      "name": "amount0Max",
                      "nameLocation": "2715:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "2707:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2330,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2707:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2333,
                      "mutability": "mutable",
                      "name": "amount1Max",
                      "nameLocation": "2743:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "2735:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2332,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2735:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "CollectParams",
                  "nameLocation": "2631:13:9",
                  "nodeType": "StructDefinition",
                  "scope": 2410,
                  "src": "2624:136:9",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2335,
                    "nodeType": "StructuredDocumentation",
                    "src": "2766:282:9",
                    "text": "@notice Returns true if operator is approved to transfer all of owner's tokens\n @param owner The address that owns the NFTs\n @param operator The address that acts on behalf of the owner\n @return True if operator is approved to transfer all of owner's tokens"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 2344,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "3062:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2337,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3096:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2344,
                        "src": "3088:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3088:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2339,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3119:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2344,
                        "src": "3111:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3111:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3078:55:9"
                  },
                  "returnParameters": {
                    "id": 2343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2344,
                        "src": "3157:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2341,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3157:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3156:6:9"
                  },
                  "scope": 2410,
                  "src": "3053:110:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2345,
                    "nodeType": "StructuredDocumentation",
                    "src": "3169:220:9",
                    "text": "@notice Approve or remove operator as an operator for the caller\n @param operator The address to approve/remove as an operator\n @param approved True if the operator is approved, false to revoke approval"
                  },
                  "functionSelector": "a22cb465",
                  "id": 2352,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "3403:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2347,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3429:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2352,
                        "src": "3421:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3421:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2349,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "3444:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2352,
                        "src": "3439:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2348,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3439:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3420:33:9"
                  },
                  "returnParameters": {
                    "id": 2351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3462:0:9"
                  },
                  "scope": 2410,
                  "src": "3394:69:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "99fbab88",
                  "id": 2381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nameLocation": "3478:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2354,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3505:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3497:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3497:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3487:31:9"
                  },
                  "returnParameters": {
                    "id": 2380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2357,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "3586:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3579:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 2356,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "3579:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2359,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3613:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3605:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3605:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2361,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "3643:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3635:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3635:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2363,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "3671:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3663:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3663:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2365,
                        "mutability": "mutable",
                        "name": "tickSpacing",
                        "nameLocation": "3697:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3691:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2364,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3691:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2367,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nameLocation": "3728:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3722:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2366,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3722:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2369,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nameLocation": "3757:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3751:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2368,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3751:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2371,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "3788:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3780:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2370,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3780:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2373,
                        "mutability": "mutable",
                        "name": "feeGrowthInside0LastX128",
                        "nameLocation": "3819:24:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3811:32:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3811:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2375,
                        "mutability": "mutable",
                        "name": "feeGrowthInside1LastX128",
                        "nameLocation": "3865:24:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3857:32:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3857:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2377,
                        "mutability": "mutable",
                        "name": "tokensOwed0",
                        "nameLocation": "3911:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3903:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2376,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3903:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2379,
                        "mutability": "mutable",
                        "name": "tokensOwed1",
                        "nameLocation": "3944:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "3936:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2378,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3565:400:9"
                  },
                  "scope": 2410,
                  "src": "3469:497:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2382,
                    "nodeType": "StructuredDocumentation",
                    "src": "3972:994:9",
                    "text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed\n @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\n @dev for tokens that have very high decimals.\n @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\n @dev This is equivalent to 1e20 value with 18 decimals."
                  },
                  "functionSelector": "0c49ccbe",
                  "id": 2392,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseLiquidity",
                  "nameLocation": "4980:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2385,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "5040:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2392,
                        "src": "5007:39:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2325_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                        },
                        "typeName": {
                          "id": 2384,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2383,
                            "name": "DecreaseLiquidityParams",
                            "nameLocations": [
                              "5007:23:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2325,
                            "src": "5007:23:9"
                          },
                          "referencedDeclaration": 2325,
                          "src": "5007:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$2325_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4997:55:9"
                  },
                  "returnParameters": {
                    "id": 2391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2388,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "5087:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2392,
                        "src": "5079:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5079:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2390,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "5104:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2392,
                        "src": "5096:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5096:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5078:34:9"
                  },
                  "scope": 2410,
                  "src": "4971:142:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2393,
                    "nodeType": "StructuredDocumentation",
                    "src": "5119:565:9",
                    "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @notice Used to update staked positions before deposit and withdraw\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "fc6f7865",
                  "id": 2403,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nameLocation": "5698:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2396,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "5738:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2403,
                        "src": "5715:29:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$2334_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams"
                        },
                        "typeName": {
                          "id": 2395,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2394,
                            "name": "CollectParams",
                            "nameLocations": [
                              "5715:13:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2334,
                            "src": "5715:13:9"
                          },
                          "referencedDeclaration": 2334,
                          "src": "5715:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectParams_$2334_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.CollectParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5705:45:9"
                  },
                  "returnParameters": {
                    "id": 2402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2399,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "5777:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2403,
                        "src": "5769:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5769:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2401,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "5794:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2403,
                        "src": "5786:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5786:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5768:34:9"
                  },
                  "scope": 2410,
                  "src": "5689:114:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2404,
                    "nodeType": "StructuredDocumentation",
                    "src": "5809:213:9",
                    "text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
                  },
                  "functionSelector": "42966c68",
                  "id": 2409,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "6036:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2406,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "6049:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2409,
                        "src": "6041:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2405,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6041:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6040:17:9"
                  },
                  "returnParameters": {
                    "id": 2408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6074:0:9"
                  },
                  "scope": 2410,
                  "src": "6027:48:9",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2411,
              "src": "2402:3675:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "45:6033:9"
        },
        "id": 9
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@safe-global/safe-contracts/contracts/common/Enum.sol": {
        "Enum": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Enum - Collection of enums used in Safe contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@safe-global/safe-contracts/contracts/common/Enum.sol\":\"Enum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@safe-global/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]}},\"version\":1}"
        }
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "IUniswapV3SwapCallback": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int256",
                  "name": "amount0Delta",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1Delta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "uniswapV3SwapCallback",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"
        }
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "ISwapRouter": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "path",
                      "type": "bytes"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountIn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOutMinimum",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactInputParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactInput",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenIn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountIn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOutMinimum",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint160",
                      "name": "sqrtPriceLimitX96",
                      "type": "uint160"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactInputSingleParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactInputSingle",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "path",
                      "type": "bytes"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountInMaximum",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactOutputParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactOutput",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenIn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountInMaximum",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint160",
                      "name": "sqrtPriceLimitX96",
                      "type": "uint160"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactOutputSingleParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactOutputSingle",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int256",
                  "name": "amount0Delta",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1Delta",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "uniswapV3SwapCallback",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
              "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
              "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
              "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
              "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"
        }
      },
      "contracts/CholoDromeModule.sol": {
        "CholoDromeModule": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_rewardStable",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_swapRouter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_usdc",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "safe",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "veloAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalUsdtAmount",
                  "type": "uint256"
                }
              ],
              "name": "EarningsCollected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "safe",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "PoolApproved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "safe",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "PoolRemoved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "fromToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "toToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                }
              ],
              "name": "PriceFeedUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldStable",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newStable",
                  "type": "address"
                }
              ],
              "name": "RewardStableUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newToken",
                  "type": "address"
                }
              ],
              "name": "RewardTokenUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldTolerance",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newTolerance",
                  "type": "uint256"
                }
              ],
              "name": "SlippageToleranceUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "USDC",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "approvePool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "approvedPools",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "collectAndConvertFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "priceFeeds",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "removePool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardStable",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "fromToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "toToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                }
              ],
              "name": "setPriceFeed",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newRewardStable",
                  "type": "address"
                }
              ],
              "name": "setRewardStable",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newRewardToken",
                  "type": "address"
                }
              ],
              "name": "setRewardToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_slippageTolerance",
                  "type": "uint256"
                }
              ],
              "name": "setSlippageTolerance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "fromToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "toToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                }
              ],
              "name": "setSwapPath",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "slippageTolerance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "stakeAndCollect",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "swapPaths",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapRouter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "unstakeAndCollect",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "withdrawAndCollect",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 646,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0346200026b57601f62002d9b38819003918201601f191683019291906001600160401b0384118385101762000270578160a092849260409687528339810103126200026b57620000518162000286565b6200005f6020830162000286565b6200006c84840162000286565b92620000896080620000816060840162000286565b920162000286565b936001600160a01b039384169283156200025357600080546001600160a01b0319808216871783559587939290918416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36032600455169081156200020f578416918215620001cb57841693841562000187578516156200014357826001541617600155816002541617600255600354161760035560805251612aff90816200029c8239608051818181610e4b01526123a10152f35b855162461bcd60e51b815260206004820152601460248201527f496e76616c6964205553444320616464726573730000000000000000000000006044820152606490fd5b865162461bcd60e51b815260206004820152601360248201527f496e76616c6964207377617020726f75746572000000000000000000000000006044820152606490fd5b865162461bcd60e51b815260206004820152601560248201527f496e76616c69642072657761726420737461626c6500000000000000000000006044820152606490fd5b865162461bcd60e51b815260206004820152601460248201527f496e76616c69642072657761726420746f6b656e0000000000000000000000006044820152606490fd5b8651631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200026b5756fe6080604052600436101561001257600080fd5b60003560e01c8063117da1ee14611a6557806331a8f1c9146115895780633b7d094614611518578063424c265b146114a4578063483103a4146112605780634a6a749c146111f75780634bdc76cc1461102a57806367a1d5ab14610ed3578063715018a614610e7a57806389a3027114610e355780638aee812714610d895780638da5cb5b14610d60578063ac6e07ee14610804578063c13d2f7514610757578063c31c9c071461072e578063d03153aa14610710578063e63703091461027d578063f0bbcec41461023e578063f2bf87e314610215578063f2fde38b1461018c578063f7c618c1146101635763f90c69061461010e57600080fd5b3461015e57604036600319011261015e576020610129611afc565b610131611b12565b60018060a01b03809216600052600783528160406000209116600052825260406000205416604051908152f35b600080fd5b3461015e57600036600319011261015e576001546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e576101a5611afc565b6101ad611caa565b6001600160a01b039081169081156101fc57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461015e57600036600319011261015e576002546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e576001600160a01b0361025f611afc565b166000526005602052602060ff604060002054166040519015158152f35b3461015e57604036600319011261015e576001600160a01b0361029e611afc565b168060005260056020526102b960ff60406000205416611d11565b6040516323e6650160e11b8152602081600481855afa908115610564576000916106d6575b5060405163133f757160e31b815260248035600483015290916101809182908490816001600160a01b0385165afa92831561056457600092600094610696575b50506040516329bc672160e21b815290602082600481885afa9182156105645760009261065a575b5061035033612a3b565b60405163c69deec560e01b8152336004820152602480359082015260009591948693909284929091906020816044816001600160a01b038b165afa90811561056457600091610620575b50156105a4575050604051633e491d4760e01b8152336004820152602480359082015294915060209050846044816001600160a01b0387165afa93841561056457600094610570575b50839284610449575b50600080516020612aaa8339815191529350610414610444915b61040f33612a3b565b611dca565b6040519384933397602435869192608093969594919660a084019784526020840152604083015260608201520152565b0390a3005b602061048f9160405190631c4b774b60e01b8383015260243560248301526024825261047482611b7e565b60405163468721a760e01b8152938492839260048401611ded565b03816000335af19081156105645760009161052a575b50156104e557610414610444916104de6104d9600080516020612aaa8339815191529760018060a01b0360015416336120ad565b611e1e565b91506103ec565b60405162461bcd60e51b815260206004820152601760248201527f47617567652067657420726577617264206661696c65640000000000000000006044820152606490fd5b90506020813d60201161055c575b8161054560209383611b9a565b8101031261015e5761055690611d7b565b876104a5565b3d9150610538565b6040513d6000823e3d90fd5b9093506020813d60201161059c575b8161058c60209383611b9a565b8101031261015e575192866103e3565b3d915061057f565b610444939750610414929550600080516020612aaa833981519152969194506105d1906024359033612861565b90948195809981610606575b5050816105ec575b5050610406565b6105ff916105fa91336120ad565b612820565b88806105e5565b6106199161061491336120ad565b6127df565b8a806105dd565b90506020813d602011610652575b8161063b60209383611b9a565b8101031261015e5761064c90611d7b565b8a61039a565b3d915061062e565b9091506020813d60201161068e575b8161067660209383611b9a565b8101031261015e5761068790611d67565b9085610346565b3d9150610669565b80919294506106ba9350903d106106cf575b6106b28183611b9a565b810190612739565b5050505050505050925090509091848061031e565b503d6106a8565b90506020813d602011610708575b816106f160209383611b9a565b8101031261015e5761070290611d67565b826102de565b3d91506106e4565b3461015e57600036600319011261015e576020600454604051908152f35b3461015e57600036600319011261015e576003546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e57610770611afc565b610778611caa565b6001600160a01b039081169081156107c757600254826001600160601b0360a01b821617600255167f9d4858dccb76debed7845fd87ec5c769962d072d518c9e34182581abb3e8247c600080a3005b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642072657761726420737461626c6560581b6044820152606490fd5b3461015e57604036600319011261015e5761081d611afc565b60243560018060a01b0391828116600052600560205261084460ff60406000205416611d11565b6040516323e6650160e11b8152926020846004818585165afa93841561056457600094610d24575b506040519163133f757160e31b83528360048401526101809485846024818685165afa93841561056457600090600097600096610cf1575b50506108af33612a3b565b91600095604051926329bc672160e21b84526020846004818a8a165afa93841561056457600094610cb5575b5060405163c69deec560e01b8152336004820152602481018a90528785169490602081604481895afa958615610564578b91600097610c77575b5086610bf2575b50505060009960009415610ba5575b50506001600160801b0380911680610a4f575b5050602081610951896109769433612861565b5050604051630852cd8d60e31b8382015260248082018b905281529061047482611b7e565b03816000335af190811561056457600091610a15575b50156109e257600080516020612aaa833981519152946109b26104449361040f33612a3b565b9160405195869516983398869192608093969594919660a084019784526020840152604083015260608201520152565b60405162461bcd60e51b815260206004820152600b60248201526a109d5c9b8819985a5b195960aa1b6044820152606490fd5b90506020813d602011610a47575b81610a3060209383611b9a565b8101031261015e57610a4190611d7b565b8861098c565b3d9150610a23565b60405191610a5c83611b62565b898352602083019182526040830160008152606084019160008352608085019342855260405195630624e65f60e11b6020880152516024870152511660448501525160648401525160848301525160a482015260a4815260e0810181811067ffffffffffffffff821117610b8f57604081905263468721a760e01b815260208160df1984610aee818860e48201611ded565b0301816000335af191821561056457600092610b58575b505015610b1357888061093e565b60405162461bcd60e51b815260206004820152601960248201527f4465637265617365206c6971756964697479206661696c6564000000000000006044820152606490fd5b6020809293503d8311610b88575b610b708185611b9a565b8101031261015e57610b8190611d7b565b8980610b05565b503d610b66565b634e487b7160e01b600052604160045260246000fd5b93509850610bb4888333612861565b90938194809b81610bdd575b5050811561092b57610bd6916105fa91336120ad565b898061092b565b610beb9161061491336120ad565b8b80610bc0565b604051633e491d4760e01b8152336004820152602481019290925291995090602090829060449082905afa8015610564578a90600090610c41575b610c3992509933611e62565b8a898161091c565b50506020813d602011610c6f575b81610c5c60209383611b9a565b8101031261015e5789610c399151610c2d565b3d9150610c4f565b915095506020813d602011610cad575b81610c9460209383611b9a565b8101031261015e57610ca68b91611d7b565b958d610915565b3d9150610c87565b9093506020813d602011610ce9575b81610cd160209383611b9a565b8101031261015e57610ce290611d67565b928a6108db565b3d9150610cc4565b9150919450610d0d929650803d106106cf576106b28183611b9a565b505050509a965050505094915093959387806108a4565b9093506020813d602011610d58575b81610d4060209383611b9a565b8101031261015e57610d5190611d67565b928461086c565b3d9150610d33565b3461015e57600036600319011261015e576000546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e57610da2611afc565b610daa611caa565b6001600160a01b03908116908115610df957600154826001600160601b0360a01b821617600155167f906ff2422a6ffa134f2d7ccaffd446bc0c583a5cb6615749b4b2836942a5fea8600080a3005b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103932bbb0b932103a37b5b2b760611b6044820152606490fd5b3461015e57600036600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e57600036600319011261015e57610e93611caa565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015e57606036600319011261015e57610eec611afc565b610ef4611b12565b6001600160a01b03604435818116939084900361015e578190610f15611caa565b16918215610ff05716908115610fb8578215610f7e578060005260076020526040600020826000526020526040600020836001600160601b0360a01b8254161790557f749f8bd52d751fb993fa16283117f0242f19e5471f5cb26f1185d1028cd803e5600080a4005b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a37903a37b5b2b760811b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527124b73b30b634b210333937b6903a37b5b2b760711b6044820152606490fd5b3461015e57604036600319011261015e57611043611afc565b60243560018060a01b0380921691826000526020906005825261106d60ff60406000205416611d11565b6040516329bc672160e21b8152908282600481885afa918215610564576000926111c0575b5060405163c69deec560e01b815233600482015260248101859052908216908381604481855afa80156105645760009061118a575b6110d19150611d88565b6110da33612a3b565b604051633e491d4760e01b81523360048201526024810186905290918490829060449082905afa928315610564578591600094611155575b50916104066111249260009433611e62565b926040519485528401526000604084015260608301526080820152600080516020612aaa83398151915260a03392a3005b85809295508193503d8311611183575b61116f8183611b9a565b8101031261015e5751918490610406611112565b503d611165565b508381813d83116111b9575b6111a08183611b9a565b8101031261015e576111b46110d191611d7b565b6110c7565b503d611196565b9091508281813d83116111f0575b6111d88183611b9a565b8101031261015e576111e990611d67565b9085611092565b503d6111ce565b3461015e57604036600319011261015e57611210611afc565b611218611b12565b9060018060a01b0380911660005260066020526040600020911660005260205261125c6112486040600020611bbc565b604051918291602083526020830190611c85565b0390f35b3461015e57606036600319011261015e57611279611afc565b611281611b12565b906044359067ffffffffffffffff9081831161015e573660238401121561015e57826004013591821161015e576024903682848601011161015e576112c4611caa565b6001600160a01b0390811694851561146c5716938415611436578215611403576000526020936006855260406000209060005284526040600020926113098454611b28565b601f81116113bd575b50600094601f8411600114611354575093829394600093611347575b505050600019600383901b1c191660019190911b179055005b010135905083808061132e565b91601f198416958560005283600020936000905b8882106113a3575050846001969710611387575b50505050811b019055005b60001960f88660031b161c19920101351690558380808061137c565b806001849786839596890101358155019601920190611368565b8460005285600020601f850160051c8101918786106113f9575b601f0160051c01905b8181106113ed5750611312565b600081556001016113e0565b90915081906113d7565b60405162461bcd60e51b815260206004820152600c818401526b092dcecc2d8d2c840e0c2e8d60a31b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f818401526e24b73b30b634b2103a37aa37b5b2b760891b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011818501527024b73b30b634b210333937b6aa37b5b2b760791b6044820152606490fd5b3461015e57602036600319011261015e576114bd611afc565b6114c5611caa565b6001600160a01b03166114d9811515611cd6565b6000818152600560205260408120805460ff191660011790557ffc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e88180a3005b3461015e57602036600319011261015e57611531611afc565b611539611caa565b6001600160a01b031661154d811515611cd6565b6000818152600560205260408120805460ff191690557f987eb3c2f78454541205f72f34839b434c306c9eaf4922efd7c0c3060fdb2e4c8180a3005b3461015e57604036600319011261015e576115a2611afc565b602480359060018060a01b038093169283600052602091600583526115ce60ff60406000205416611d11565b6040516323e6650160e11b8152908382600481895afa91821561056457600092611a2e575b506040516329bc672160e21b81529084826004818a5afa918215610564576000926119f7575b5060405163c69deec560e01b81523360048201526024810187905284841694831692908681604481875afa908115610564576000916119c2575b5061197e5761166133612a3b565b926040519463133f757160e31b865288600487015261018095868186818b5afa97881561056457899160009860009a611947575b50509082916116a88c6044969533612861565b9a81809b8d93611932575b50508161191d575b50506040519485809263e985e9c560e01b8252336004830152868a8301525afa80156105645789936000916118e7575b50156117db575b505060405163b6b55f2560e01b828201528381018990528381526117199261047482611b7e565b03816000335af1908115610564576000916117a6575b501561177457506117439061040f33612a3b565b926040519485528401526040830152600060608301526080820152600080516020612aaa83398151915260a03392a3005b84600c6064926040519262461bcd60e51b845260048401528201526b14dd185ad94819985a5b195960a21b6044820152fd5b90508581813d83116117d4575b6117bd8183611b9a565b8101031261015e576117ce90611d7b565b8861172f565b503d6117b3565b9091506040519163a22cb46560e01b89840152848301526001604483015260448252608082019082821067ffffffffffffffff8311176118d2578189918160405263468721a760e01b82528461183881607f199360848201611ded565b0301816000335af191821561056457889060009361189b575b50505015611861578589806116f2565b60405162461bcd60e51b8152600481018790526013818401527213919508185c1c1c9bdd985b0819985a5b1959606a1b6044820152606490fd5b90809293503d83116118cb575b6118b28185611b9a565b8101031261015e576118c390611d7b565b898781611851565b503d6118a8565b84634e487b7160e01b60005260416004526000fd5b84819592503d8311611916575b6118fe8183611b9a565b8101031261015e576119108993611d7b565b8c6116eb565b503d6118f4565b61192b916105fa91336120ad565b898e6116bb565b6119409161061491336120ad565b8a386116b3565b611965929a5060449594939950803d106106cf576106b28183611b9a565b505050505050505099925090509798909192938d611695565b60405162461bcd60e51b8152600481018790526017818401527f506f736974696f6e20616c7265616479207374616b65640000000000000000006044820152606490fd5b90508681813d83116119f0575b6119d98183611b9a565b8101031261015e576119ea90611d7b565b89611653565b503d6119cf565b9091508481813d8311611a27575b611a0f8183611b9a565b8101031261015e57611a2090611d67565b9087611619565b503d611a05565b9091508381813d8311611a5e575b611a468183611b9a565b8101031261015e57611a5790611d67565b90866115f3565b503d611a3c565b3461015e57602036600319011261015e57600435611a81611caa565b6103e88111611ac35760407fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a4530657591600454908060045582519182526020820152a1005b60405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606490fd5b600435906001600160a01b038216820361015e57565b602435906001600160a01b038216820361015e57565b90600182811c92168015611b58575b6020831014611b4257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b37565b60a0810190811067ffffffffffffffff821117610b8f57604052565b6060810190811067ffffffffffffffff821117610b8f57604052565b90601f8019910116810190811067ffffffffffffffff821117610b8f57604052565b9060405191826000825492611bd084611b28565b908184526001948581169081600014611c3f5750600114611bfc575b5050611bfa92500383611b9a565b565b9093915060005260209081600020936000915b818310611c27575050611bfa93508201013880611bec565b85548884018501529485019487945091830191611c0f565b915050611bfa94506020925060ff191682840152151560051b8201013880611bec565b60005b838110611c755750506000910152565b8181015183820152602001611c65565b90602091611c9e81518092818552858086019101611c62565b601f01601f1916010190565b6000546001600160a01b03163303611cbe57565b60405163118cdaa760e01b8152336004820152602490fd5b15611cdd57565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a59081c1bdbdb60a21b6044820152606490fd5b15611d1857565b60405162461bcd60e51b815260206004820152602160248201527f506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c6044820152606560f81b6064820152608490fd5b51906001600160a01b038216820361015e57565b5190811515820361015e57565b15611d8f57565b60405162461bcd60e51b8152602060048201526013602482015272141bdcda5d1a5bdb881b9bdd081cdd185ad959606a1b6044820152606490fd5b91908203918211611dd757565b634e487b7160e01b600052601160045260246000fd5b9291611e1960609160009360018060a01b03168652836020870152608060408701526080860190611c85565b930152565b15611e2557565b60405162461bcd60e51b815260206004820152601560248201527414ddd85c081d1bc81cdd18589b194819985a5b1959605a1b6044820152606490fd5b916001600160a01b0391808316918215612078576040805163c69deec560e01b81528587166001600160a01b038116600483015260248201849052602094929392909185816044818a5afa801561206d57600090612037575b611ec59150611d88565b8351633e491d4760e01b81526001600160a01b038316600482015260248101849052958590879060449082905afa95861561202c57600096611ffd575b50918491611f4893855192632e1a7d4d60e01b85850152602484015260248352611f2b83611b7e565b6000865180968195829463468721a760e01b845260048401611ded565b03925af1908115611ff257600091611fba575b5015611f7f57505080611f6d57505050565b611bfa926104d99260015416906120ad565b60649250519062461bcd60e51b82526004820152601560248201527411d85d59d9481dda5d1a191c985dc819985a5b1959605a1b6044820152fd5b908382813d8311611feb575b611fd08183611b9a565b81010312611fe85750611fe290611d7b565b38611f5b565b80fd5b503d611fc6565b82513d6000823e3d90fd5b90958582813d8311612025575b6120148183611b9a565b81010312611fe85750519484611f02565b503d61200a565b84513d6000823e3d90fd5b8682813d8311612066575b61204c8183611b9a565b81010312611fe85750612061611ec591611d7b565b611ebb565b503d612042565b85513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420676175676560981b6044820152606490fd5b91908115612364576002546001600160a01b0390811693828216929091908386146123595760009384526020926006845260409687862090865284526120f4878620611bbc565b80511561232157600354885163095ea7b360e01b878201529085166001600160a01b031660248201526044808201899052815296601f1992859061213960648b611b9a565b1693895187818061215963468721a760e01b9d8e83528660048401611ded565b03818c8a5af19081156123175789916122de575b50156122a3578161217d9161237f565b61012c42019182421161228f57918695949291889794928c51936121a085611b62565b8452888401928784528d850190815260608501918252608085019283528d5198899563c04b8d5960e01b8c8801528b6024880152516044870160a0905260e487016121ea91611c85565b94511660648601525160848501525160a48401525160c48301520390810184526122149084611b9a565b60035416958588518098819582948352600483019161223292611ded565b03925af19384156122845750819361224b575b50505090565b9091809350813d831161227d575b6122638183611b9a565b81010312611fe8575061227590611d7b565b388080612245565b503d612259565b51913d9150823e3d90fd5b634e487b7160e01b89526011600452602489fd5b895162461bcd60e51b8152600481018890526014602482015273151bdad95b88185c1c1c9bdd994819985a5b195960621b6044820152606490fd5b90508781813d8311612310575b6122f58183611b9a565b8101031261230c5761230690611d7b565b3861216d565b8880fd5b503d6122eb565b8b513d8b823e3d90fd5b875162461bcd60e51b815260048101869052601160248201527014ddd85c081c185d1a081b9bdd081cd95d607a1b6044820152606490fd5b505050505050600190565b505050600190565b81810292918115918404141715611dd757565b6002546001600160a01b03918083169183169082821461252f576123cc6123c77f000000000000000000000000000000000000000000000000000000000000000093846126a1565b61254d565b9382168314612502576123c7602095926123e5926126a1565b906040519485809463313ce56760e01b825260049788915afa928315610564576000936124be575b5060ff9161241a9161236c565b911660080160ff81116124a95760ff60051991160160ff81116124a95760ff16604d81116124a957600a0a908115612494579161245d916305f5e100930461236c565b04908054916127109283039183831161247f57509061247b9161236c565b0490565b601190634e487b7160e01b6000525260246000fd5b601284634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b6020939193813d82116124fa575b816124d960209383611b9a565b810103126124f657519060ff82168203611fe857509160ff61240d565b5080fd5b3d91506124cc565b505050612514906305f5e1009261236c565b0460045490612710918203828111611dd75761247b9161236c565b5050505090565b519069ffffffffffffffffffff8216820361015e57565b6001600160a01b031680156126675760a060049160405192838092633fabe5a360e21b82525afa8015610564576000918291612613575b5060008213156125de5761259c620151809142611dca565b116125a45790565b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819995959081d1bdbc81bdb1960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b6044820152606490fd5b91905060a0823d821161265f575b8161262e60a09383611b9a565b81010312611fe8575061264081612536565b506020810151612657608060608401519301612536565b509038612584565b3d9150612621565b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819995959081b9bdd081cd95d60721b6044820152606490fd5b9060018060a01b03809216600052600760205281604060002091166000526020526040600020541680156126d25790565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207072696365206665656420666f7220746f6b656e2070616972000000006044820152606490fd5b51908160020b820361015e57565b51906001600160801b038216820361015e57565b91908261018091031261015e5781516001600160601b038116810361015e579161276560208201611d67565b9161277260408301611d67565b9161277f60608201611d67565b9161278c60808301612717565b9161279960a08201612717565b916127a660c08301612717565b916127b360e08201612725565b9161010082015191610120810151916127dc6101606127d56101408501612725565b9301612725565b90565b156127e657565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b8c081cddd85c0819985a5b195960721b6044820152606490fd5b1561282757565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b8c481cddd85c0819985a5b195960721b6044820152606490fd5b604080519390926001600160a01b0392909167ffffffffffffffff918416906080870183811188821017610b8f5786528652602093848701828152868801916001600160801b0392839182825260608b01938385528a519b8c8b63fc6f786560e01b9101525160248d0152511660448b015251166064890152511660848701526084865260c086019286841083851117610b8f57838092818852635229073f60e01b82526000958680948b61291d8160bf199360c48201611ded565b0301925af1958615612a315783928497612985575b50505015612951578284805181010312611fe857508201519101519091565b50606491519062461bcd60e51b82526004820152600e60248201526d10dbdb1b1958dd0819985a5b195960921b6044820152fd5b91965091503d8084883e6129998188611b9a565b820195858360c08901980312612a15576129b290611d7b565b9160e081015190828211612a2d57018660df82011215612a155760c0810151918211612a19578551966129ee601f8401601f1916870189611b9a565b82885260e08383010111612a155790612a0d9160e08689019101611c62565b388080612932565b8380fd5b634e487b7160e01b84526041600452602484fd5b8480fd5b85513d85823e3d90fd5b6002546040516370a0823160e01b81526001600160a01b0392831660048201529160209183916024918391165afa90811561056457600091612a7b575090565b906020823d8211612aa1575b81612a9460209383611b9a565b81010312611fe857505190565b3d9150612a8756fec457dabb1cd0422f2d4ee0e35bed2d324c897ff52ca6d0033a86d6a43ce80502a2646970667358221220a1b3005df6eca71d1ea72d915b72967804d812705dd5f6488ea27498f5cfdee364736f6c63430008140033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH3 0x26B JUMPI PUSH1 0x1F PUSH3 0x2D9B CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH3 0x270 JUMPI DUP2 PUSH1 0xA0 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x26B JUMPI PUSH3 0x51 DUP2 PUSH3 0x286 JUMP JUMPDEST PUSH3 0x5F PUSH1 0x20 DUP4 ADD PUSH3 0x286 JUMP JUMPDEST PUSH3 0x6C DUP5 DUP5 ADD PUSH3 0x286 JUMP JUMPDEST SWAP3 PUSH3 0x89 PUSH1 0x80 PUSH3 0x81 PUSH1 0x60 DUP5 ADD PUSH3 0x286 JUMP JUMPDEST SWAP3 ADD PUSH3 0x286 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP4 ISZERO PUSH3 0x253 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND DUP8 OR DUP4 SSTORE SWAP6 DUP8 SWAP4 SWAP3 SWAP1 SWAP2 DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x32 PUSH1 0x4 SSTORE AND SWAP1 DUP2 ISZERO PUSH3 0x20F JUMPI DUP5 AND SWAP2 DUP3 ISZERO PUSH3 0x1CB JUMPI DUP5 AND SWAP4 DUP5 ISZERO PUSH3 0x187 JUMPI DUP6 AND ISZERO PUSH3 0x143 JUMPI DUP3 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP2 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MSTORE MLOAD PUSH2 0x2AFF SWAP1 DUP2 PUSH3 0x29C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xE4B ADD MSTORE PUSH2 0x23A1 ADD MSTORE RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420555344432061646472657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207377617020726F7574657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657761726420737461626C650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x26B JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x117DA1EE EQ PUSH2 0x1A65 JUMPI DUP1 PUSH4 0x31A8F1C9 EQ PUSH2 0x1589 JUMPI DUP1 PUSH4 0x3B7D0946 EQ PUSH2 0x1518 JUMPI DUP1 PUSH4 0x424C265B EQ PUSH2 0x14A4 JUMPI DUP1 PUSH4 0x483103A4 EQ PUSH2 0x1260 JUMPI DUP1 PUSH4 0x4A6A749C EQ PUSH2 0x11F7 JUMPI DUP1 PUSH4 0x4BDC76CC EQ PUSH2 0x102A JUMPI DUP1 PUSH4 0x67A1D5AB EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE7A JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0xD89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD60 JUMPI DUP1 PUSH4 0xAC6E07EE EQ PUSH2 0x804 JUMPI DUP1 PUSH4 0xC13D2F75 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xD03153AA EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0xE6370309 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF0BBCEC4 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF2BF87E3 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x163 JUMPI PUSH4 0xF90C6906 EQ PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x20 PUSH2 0x129 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x131 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1A5 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x25F PUSH2 0x1AFC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29E PUSH2 0x1AFC JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x2B9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6D6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH2 0x180 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x696 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x65A JUMPI JUMPDEST POP PUSH2 0x350 CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 SWAP6 SWAP2 SWAP5 DUP7 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x620 JUMPI JUMPDEST POP ISZERO PUSH2 0x5A4 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP5 SWAP2 POP PUSH1 0x20 SWAP1 POP DUP5 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x570 JUMPI JUMPDEST POP DUP4 SWAP3 DUP5 PUSH2 0x449 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH2 0x414 PUSH2 0x444 SWAP2 JUMPDEST PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 PUSH1 0x24 CALLDATALOAD DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x20 PUSH2 0x48F SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1C4B774B PUSH1 0xE0 SHL DUP4 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x24 DUP3 MSTORE PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x52A JUMPI JUMPDEST POP ISZERO PUSH2 0x4E5 JUMPI PUSH2 0x414 PUSH2 0x444 SWAP2 PUSH2 0x4DE PUSH2 0x4D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617567652067657420726577617264206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x55C JUMPI JUMPDEST DUP2 PUSH2 0x545 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x556 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP8 PUSH2 0x4A5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x59C JUMPI JUMPDEST DUP2 PUSH2 0x58C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI MLOAD SWAP3 DUP7 PUSH2 0x3E3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x57F JUMP JUMPDEST PUSH2 0x444 SWAP4 SWAP8 POP PUSH2 0x414 SWAP3 SWAP6 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP2 SWAP5 POP PUSH2 0x5D1 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP1 SWAP5 DUP2 SWAP6 DUP1 SWAP10 DUP2 PUSH2 0x606 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x5EC JUMPI JUMPDEST POP POP PUSH2 0x406 JUMP JUMPDEST PUSH2 0x5FF SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2820 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x619 SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x27DF JUMP JUMPDEST DUP11 DUP1 PUSH2 0x5DD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x652 JUMPI JUMPDEST DUP2 PUSH2 0x63B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x64C SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP11 PUSH2 0x39A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x62E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x68E JUMPI JUMPDEST DUP2 PUSH2 0x676 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x687 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x346 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x669 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP PUSH2 0x6BA SWAP4 POP SWAP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI JUMPDEST PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2739 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 DUP5 DUP1 PUSH2 0x31E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x708 JUMPI JUMPDEST DUP2 PUSH2 0x6F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x702 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST DUP3 PUSH2 0x2DE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6E4 JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x770 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x778 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x2 SSTORE AND PUSH32 0x9D4858DCCB76DEBED7845FD87EC5C769962D072D518C9E34182581ABB3E8247C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642072657761726420737461626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x81D PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x844 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP6 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xD24 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP4 MSTORE DUP4 PUSH1 0x4 DUP5 ADD MSTORE PUSH2 0x180 SWAP5 DUP6 DUP5 PUSH1 0x24 DUP2 DUP7 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP8 PUSH1 0x0 SWAP7 PUSH2 0xCF1 JUMPI JUMPDEST POP POP PUSH2 0x8AF CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP11 DUP11 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xCB5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE DUP8 DUP6 AND SWAP5 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x564 JUMPI DUP12 SWAP2 PUSH1 0x0 SWAP8 PUSH2 0xC77 JUMPI JUMPDEST POP DUP7 PUSH2 0xBF2 JUMPI JUMPDEST POP POP POP PUSH1 0x0 SWAP10 PUSH1 0x0 SWAP5 ISZERO PUSH2 0xBA5 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 SWAP2 AND DUP1 PUSH2 0xA4F JUMPI JUMPDEST POP POP PUSH1 0x20 DUP2 PUSH2 0x951 DUP10 PUSH2 0x976 SWAP5 CALLER PUSH2 0x2861 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA15 JUMPI JUMPDEST POP ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH2 0x9B2 PUSH2 0x444 SWAP4 PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 AND SWAP9 CALLER SWAP9 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109D5C9B8819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA47 JUMPI JUMPDEST DUP2 PUSH2 0xA30 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xA41 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP9 PUSH2 0x98C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA5C DUP4 PUSH2 0x1B62 JUMP JUMPDEST DUP10 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 TIMESTAMP DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH4 0x624E65F PUSH1 0xE1 SHL PUSH1 0x20 DUP9 ADD MSTORE MLOAD PUSH1 0x24 DUP8 ADD MSTORE MLOAD AND PUSH1 0x44 DUP6 ADD MSTORE MLOAD PUSH1 0x64 DUP5 ADD MSTORE MLOAD PUSH1 0x84 DUP4 ADD MSTORE MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0xDF NOT DUP5 PUSH2 0xAEE DUP2 DUP9 PUSH1 0xE4 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD DUP2 PUSH1 0x0 CALLER GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB58 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xB13 JUMPI DUP9 DUP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465637265617365206C6971756964697479206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0xB88 JUMPI JUMPDEST PUSH2 0xB70 DUP2 DUP6 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xB81 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 DUP1 PUSH2 0xB05 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB66 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 POP SWAP9 POP PUSH2 0xBB4 DUP9 DUP4 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP1 SWAP4 DUP2 SWAP5 DUP1 SWAP12 DUP2 PUSH2 0xBDD JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0x92B JUMPI PUSH2 0xBD6 SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP10 DUP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0xBEB SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP12 DUP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP10 POP SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI DUP11 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC41 JUMPI JUMPDEST PUSH2 0xC39 SWAP3 POP SWAP10 CALLER PUSH2 0x1E62 JUMP JUMPDEST DUP11 DUP10 DUP2 PUSH2 0x91C JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC6F JUMPI JUMPDEST DUP2 PUSH2 0xC5C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI DUP10 PUSH2 0xC39 SWAP2 MLOAD PUSH2 0xC2D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCAD JUMPI JUMPDEST DUP2 PUSH2 0xC94 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xCA6 DUP12 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST SWAP6 DUP14 PUSH2 0x915 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC87 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 PUSH2 0xCD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xCE2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x8DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC4 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP5 POP PUSH2 0xD0D SWAP3 SWAP7 POP DUP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP POP SWAP11 SWAP7 POP POP POP POP SWAP5 SWAP2 POP SWAP4 SWAP6 SWAP4 DUP8 DUP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD58 JUMPI JUMPDEST DUP2 PUSH2 0xD40 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xD51 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 DUP5 PUSH2 0x86C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD33 JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xDA2 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xDAA PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x906FF2422A6FFA134F2D7CCAFFD446BC0C583A5CB6615749B4B2836942A5FEA8 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103932BBB0B932103A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xE93 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xEEC PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xEF4 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x15E JUMPI DUP2 SWAP1 PUSH2 0xF15 PUSH2 0x1CAA JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0xFF0 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xFB8 JUMPI DUP3 ISZERO PUSH2 0xF7E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x749F8BD52D751FB993FA16283117F0242F19E5471F5CB26F1185D1028CD803E5 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103A37903A37B5B2B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B210333937B6903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1043 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH2 0x106D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP3 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x11C0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND SWAP1 DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x118A JUMPI JUMPDEST PUSH2 0x10D1 SWAP2 POP PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x10DA CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0x1155 JUMPI JUMPDEST POP SWAP2 PUSH2 0x406 PUSH2 0x1124 SWAP3 PUSH1 0x0 SWAP5 CALLER PUSH2 0x1E62 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST DUP6 DUP1 SWAP3 SWAP6 POP DUP2 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x1183 JUMPI JUMPDEST PUSH2 0x116F DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI MLOAD SWAP2 DUP5 SWAP1 PUSH2 0x406 PUSH2 0x1112 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1165 JUMP JUMPDEST POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11B9 JUMPI JUMPDEST PUSH2 0x11A0 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x11B4 PUSH2 0x10D1 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1196 JUMP JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11D8 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x11E9 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x1092 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11CE JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1210 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1218 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x125C PUSH2 0x1248 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1279 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1281 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH2 0x15E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x15E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x15E JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE DUP3 DUP5 DUP7 ADD ADD GT PUSH2 0x15E JUMPI PUSH2 0x12C4 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP6 ISZERO PUSH2 0x146C JUMPI AND SWAP4 DUP5 ISZERO PUSH2 0x1436 JUMPI DUP3 ISZERO PUSH2 0x1403 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0x1309 DUP5 SLOAD PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x13BD JUMPI JUMPDEST POP PUSH1 0x0 SWAP5 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1354 JUMPI POP SWAP4 DUP3 SWAP4 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x1347 JUMPI JUMPDEST POP POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 SSTORE STOP JUMPDEST ADD ADD CALLDATALOAD SWAP1 POP DUP4 DUP1 DUP1 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH1 0x1F NOT DUP5 AND SWAP6 DUP6 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x13A3 JUMPI POP POP DUP5 PUSH1 0x1 SWAP7 SWAP8 LT PUSH2 0x1387 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP7 PUSH1 0x3 SHL AND SHR NOT SWAP3 ADD ADD CALLDATALOAD AND SWAP1 SSTORE DUP4 DUP1 DUP1 DUP1 PUSH2 0x137C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP8 DUP7 DUP4 SWAP6 SWAP7 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0x1368 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP7 LT PUSH2 0x13F9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13ED JUMPI POP PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC DUP2 DUP5 ADD MSTORE PUSH12 0x92DCECC2D8D2C840E0C2E8D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF DUP2 DUP5 ADD MSTORE PUSH15 0x24B73B30B634B2103A37AA37B5B2B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 DUP2 DUP6 ADD MSTORE PUSH17 0x24B73B30B634B210333937B6AA37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x14BD PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x14C5 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14D9 DUP2 ISZERO ISZERO PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0xFC1F1E73948CBC47C5B7F90E5601B7DACCD9AD7173218486CCC74BDD051D05E8 DUP2 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1531 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154D DUP2 ISZERO ISZERO PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x987EB3C2F78454541205F72F34839B434C306C9EAF4922EFD7C0C3060FDB2E4C DUP2 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x15A2 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH2 0x15CE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP4 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1A2E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP5 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x19F7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE DUP5 DUP5 AND SWAP5 DUP4 AND SWAP3 SWAP1 DUP7 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x19C2 JUMPI JUMPDEST POP PUSH2 0x197E JUMPI PUSH2 0x1661 CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP7 MSTORE DUP9 PUSH1 0x4 DUP8 ADD MSTORE PUSH2 0x180 SWAP6 DUP7 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x564 JUMPI DUP10 SWAP2 PUSH1 0x0 SWAP9 PUSH1 0x0 SWAP11 PUSH2 0x1947 JUMPI JUMPDEST POP POP SWAP1 DUP3 SWAP2 PUSH2 0x16A8 DUP13 PUSH1 0x44 SWAP7 SWAP6 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP11 DUP2 DUP1 SWAP12 DUP14 SWAP4 PUSH2 0x1932 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x191D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP11 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI DUP10 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x18E7 JUMPI JUMPDEST POP ISZERO PUSH2 0x17DB JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP3 DUP3 ADD MSTORE DUP4 DUP2 ADD DUP10 SWAP1 MSTORE DUP4 DUP2 MSTORE PUSH2 0x1719 SWAP3 PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17A6 JUMPI JUMPDEST POP ISZERO PUSH2 0x1774 JUMPI POP PUSH2 0x1743 SWAP1 PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST DUP5 PUSH1 0xC PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH12 0x14DD185AD94819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17D4 JUMPI JUMPDEST PUSH2 0x17BD DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x17CE SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP9 PUSH2 0x172F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17B3 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP10 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x18D2 JUMPI DUP2 DUP10 SWAP2 DUP2 PUSH1 0x40 MSTORE PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP3 MSTORE DUP5 PUSH2 0x1838 DUP2 PUSH1 0x7F NOT SWAP4 PUSH1 0x84 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD DUP2 PUSH1 0x0 CALLER GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI DUP9 SWAP1 PUSH1 0x0 SWAP4 PUSH2 0x189B JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x1861 JUMPI DUP6 DUP10 DUP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP5 ADD MSTORE PUSH19 0x13919508185C1C1C9BDD985B0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x18CB JUMPI JUMPDEST PUSH2 0x18B2 DUP2 DUP6 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x18C3 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 DUP8 DUP2 PUSH2 0x1851 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18A8 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1916 JUMPI JUMPDEST PUSH2 0x18FE DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1910 DUP10 SWAP4 PUSH2 0x1D7B JUMP JUMPDEST DUP13 PUSH2 0x16EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x192B SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP10 DUP15 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1940 SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP11 CODESIZE PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x1965 SWAP3 SWAP11 POP PUSH1 0x44 SWAP6 SWAP5 SWAP4 SWAP10 POP DUP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP10 SWAP3 POP SWAP1 POP SWAP8 SWAP9 SWAP1 SWAP2 SWAP3 SWAP4 DUP14 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP5 ADD MSTORE PUSH32 0x506F736974696F6E20616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F0 JUMPI JUMPDEST PUSH2 0x19D9 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x19EA SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 PUSH2 0x1653 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x19CF JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1A27 JUMPI JUMPDEST PUSH2 0x1A0F DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1A20 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP8 PUSH2 0x1619 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A05 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1A5E JUMPI JUMPDEST PUSH2 0x1A46 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1A57 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP7 PUSH2 0x15F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3C JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A81 PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x1AC3 JUMPI PUSH1 0x40 PUSH32 0xDDD31550B26E9EF8ADE466958BE83FF8A014D9B4F36D546B61A6847A45306575 SWAP2 PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xA6D8D2E0E0C2CECA40E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B58 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B42 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1BD0 DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1C3F JUMPI POP PUSH1 0x1 EQ PUSH2 0x1BFC JUMPI JUMPDEST POP POP PUSH2 0x1BFA SWAP3 POP SUB DUP4 PUSH2 0x1B9A JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C27 JUMPI POP POP PUSH2 0x1BFA SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1BEC JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BFA SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C75 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C9E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1CBE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CDD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A59081C1BDBDB PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F7420617070726F76656420666F722074686973206D6F64756C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1D8F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDCDA5D1A5BDB881B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1DD7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x1E19 PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE DUP4 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E25 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DDD85C081D1BC81CDD18589B194819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x2078 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 DUP2 PUSH1 0x44 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x1EC5 SWAP2 POP PUSH2 0x1D88 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP6 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x202C JUMPI PUSH1 0x0 SWAP7 PUSH2 0x1FFD JUMPI JUMPDEST POP SWAP2 DUP5 SWAP2 PUSH2 0x1F48 SWAP4 DUP6 MLOAD SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP6 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 DUP4 MSTORE PUSH2 0x1F2B DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1FBA JUMPI JUMPDEST POP ISZERO PUSH2 0x1F7F JUMPI POP POP DUP1 PUSH2 0x1F6D JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1BFA SWAP3 PUSH2 0x4D9 SWAP3 PUSH1 0x1 SLOAD AND SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x64 SWAP3 POP MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11D85D59D9481DDA5D1A191C985DC819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FEB JUMPI JUMPDEST PUSH2 0x1FD0 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x1FE2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE PUSH2 0x1F5B JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1FC6 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 DUP6 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2025 JUMPI JUMPDEST PUSH2 0x2014 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP MLOAD SWAP5 DUP5 PUSH2 0x1F02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x200A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2066 JUMPI JUMPDEST PUSH2 0x204C DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2061 PUSH2 0x1EC5 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2042 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206761756765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x2364 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 DUP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 DUP7 EQ PUSH2 0x2359 JUMPI PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP7 DUP8 DUP7 KECCAK256 SWAP1 DUP7 MSTORE DUP5 MSTORE PUSH2 0x20F4 DUP8 DUP7 KECCAK256 PUSH2 0x1BBC JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2321 JUMPI PUSH1 0x3 SLOAD DUP9 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP8 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 MSTORE SWAP7 PUSH1 0x1F NOT SWAP3 DUP6 SWAP1 PUSH2 0x2139 PUSH1 0x64 DUP12 PUSH2 0x1B9A JUMP JUMPDEST AND SWAP4 DUP10 MLOAD DUP8 DUP2 DUP1 PUSH2 0x2159 PUSH4 0x468721A7 PUSH1 0xE0 SHL SWAP14 DUP15 DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB DUP2 DUP13 DUP11 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2317 JUMPI DUP10 SWAP2 PUSH2 0x22DE JUMPI JUMPDEST POP ISZERO PUSH2 0x22A3 JUMPI DUP2 PUSH2 0x217D SWAP2 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x12C TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x228F JUMPI SWAP2 DUP7 SWAP6 SWAP5 SWAP3 SWAP2 DUP9 SWAP8 SWAP5 SWAP3 DUP13 MLOAD SWAP4 PUSH2 0x21A0 DUP6 PUSH2 0x1B62 JUMP JUMPDEST DUP5 MSTORE DUP9 DUP5 ADD SWAP3 DUP8 DUP5 MSTORE DUP14 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE DUP14 MLOAD SWAP9 DUP10 SWAP6 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP13 DUP9 ADD MSTORE DUP12 PUSH1 0x24 DUP9 ADD MSTORE MLOAD PUSH1 0x44 DUP8 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xE4 DUP8 ADD PUSH2 0x21EA SWAP2 PUSH2 0x1C85 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x64 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP1 DUP2 ADD DUP5 MSTORE PUSH2 0x2214 SWAP1 DUP5 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP6 DUP6 DUP9 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 DUP4 MSTORE PUSH1 0x4 DUP4 ADD SWAP2 PUSH2 0x2232 SWAP3 PUSH2 0x1DED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x2284 JUMPI POP DUP2 SWAP4 PUSH2 0x224B JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x227D JUMPI JUMPDEST PUSH2 0x2263 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2275 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2245 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2259 JUMP JUMPDEST MLOAD SWAP2 RETURNDATASIZE SWAP2 POP DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185C1C1C9BDD994819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2310 JUMPI JUMPDEST PUSH2 0x22F5 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x230C JUMPI PUSH2 0x2306 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE PUSH2 0x216D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x22EB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DDD85C081C185D1A081B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1DD7 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP4 AND SWAP1 DUP3 DUP3 EQ PUSH2 0x252F JUMPI PUSH2 0x23CC PUSH2 0x23C7 PUSH32 0x0 SWAP4 DUP5 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x254D JUMP JUMPDEST SWAP4 DUP3 AND DUP4 EQ PUSH2 0x2502 JUMPI PUSH2 0x23C7 PUSH1 0x20 SWAP6 SWAP3 PUSH2 0x23E5 SWAP3 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 SWAP8 DUP9 SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x24BE JUMPI JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x241A SWAP2 PUSH2 0x236C JUMP JUMPDEST SWAP2 AND PUSH1 0x8 ADD PUSH1 0xFF DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xFF PUSH1 0x5 NOT SWAP2 AND ADD PUSH1 0xFF DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xA EXP SWAP1 DUP2 ISZERO PUSH2 0x2494 JUMPI SWAP2 PUSH2 0x245D SWAP2 PUSH4 0x5F5E100 SWAP4 DIV PUSH2 0x236C JUMP JUMPDEST DIV SWAP1 DUP1 SLOAD SWAP2 PUSH2 0x2710 SWAP3 DUP4 SUB SWAP2 DUP4 DUP4 GT PUSH2 0x247F JUMPI POP SWAP1 PUSH2 0x247B SWAP2 PUSH2 0x236C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x12 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP2 SWAP4 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x24FA JUMPI JUMPDEST DUP2 PUSH2 0x24D9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24F6 JUMPI MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1FE8 JUMPI POP SWAP2 PUSH1 0xFF PUSH2 0x240D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x24CC JUMP JUMPDEST POP POP POP PUSH2 0x2514 SWAP1 PUSH4 0x5F5E100 SWAP3 PUSH2 0x236C JUMP JUMPDEST DIV PUSH1 0x4 SLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 SUB DUP3 DUP2 GT PUSH2 0x1DD7 JUMPI PUSH2 0x247B SWAP2 PUSH2 0x236C JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2667 JUMPI PUSH1 0xA0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2613 JUMPI JUMPDEST POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x25DE JUMPI PUSH2 0x259C PUSH3 0x15180 SWAP2 TIMESTAMP PUSH2 0x1DCA JUMP JUMPDEST GT PUSH2 0x25A4 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819995959081D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x265F JUMPI JUMPDEST DUP2 PUSH2 0x262E PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2640 DUP2 PUSH2 0x2536 JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x2657 PUSH1 0x80 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD PUSH2 0x2536 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x2584 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819995959081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x26D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696365206665656420666F7220746F6B656E207061697200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x15E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x15E JUMPI SWAP2 PUSH2 0x2765 PUSH1 0x20 DUP3 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x2772 PUSH1 0x40 DUP4 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x277F PUSH1 0x60 DUP3 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x278C PUSH1 0x80 DUP4 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x2799 PUSH1 0xA0 DUP3 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x27A6 PUSH1 0xC0 DUP4 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x27B3 PUSH1 0xE0 DUP3 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 PUSH2 0x120 DUP2 ADD MLOAD SWAP2 PUSH2 0x27DC PUSH2 0x160 PUSH2 0x27D5 PUSH2 0x140 DUP6 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP4 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x27E6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B8C081CDDD85C0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2827 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B8C481CDDD85C0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP5 AND SWAP1 PUSH1 0x80 DUP8 ADD DUP4 DUP2 GT DUP9 DUP3 LT OR PUSH2 0xB8F JUMPI DUP7 MSTORE DUP7 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP8 ADD DUP3 DUP2 MSTORE DUP7 DUP9 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x60 DUP12 ADD SWAP4 DUP4 DUP6 MSTORE DUP11 MLOAD SWAP12 DUP13 DUP12 PUSH4 0xFC6F7865 PUSH1 0xE0 SHL SWAP2 ADD MSTORE MLOAD PUSH1 0x24 DUP14 ADD MSTORE MLOAD AND PUSH1 0x44 DUP12 ADD MSTORE MLOAD AND PUSH1 0x64 DUP10 ADD MSTORE MLOAD AND PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x84 DUP7 MSTORE PUSH1 0xC0 DUP7 ADD SWAP3 DUP7 DUP5 LT DUP4 DUP6 GT OR PUSH2 0xB8F JUMPI DUP4 DUP1 SWAP3 DUP2 DUP9 MSTORE PUSH4 0x5229073F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 DUP1 SWAP5 DUP12 PUSH2 0x291D DUP2 PUSH1 0xBF NOT SWAP4 PUSH1 0xC4 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x2A31 JUMPI DUP4 SWAP3 DUP5 SWAP8 PUSH2 0x2985 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x2951 JUMPI DUP3 DUP5 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP1 SWAP2 JUMP JUMPDEST POP PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x10DBDB1B1958DD0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP7 POP SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP9 RETURNDATACOPY PUSH2 0x2999 DUP2 DUP9 PUSH2 0x1B9A JUMP JUMPDEST DUP3 ADD SWAP6 DUP6 DUP4 PUSH1 0xC0 DUP10 ADD SWAP9 SUB SLT PUSH2 0x2A15 JUMPI PUSH2 0x29B2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 DUP3 DUP3 GT PUSH2 0x2A2D JUMPI ADD DUP7 PUSH1 0xDF DUP3 ADD SLT ISZERO PUSH2 0x2A15 JUMPI PUSH1 0xC0 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x2A19 JUMPI DUP6 MLOAD SWAP7 PUSH2 0x29EE PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP10 PUSH2 0x1B9A JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0xE0 DUP4 DUP4 ADD ADD GT PUSH2 0x2A15 JUMPI SWAP1 PUSH2 0x2A0D SWAP2 PUSH1 0xE0 DUP7 DUP10 ADD SWAP2 ADD PUSH2 0x1C62 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2932 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2AA1 JUMPI JUMPDEST DUP2 PUSH2 0x2A94 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A87 JUMP INVALID 0xC4 JUMPI 0xDA 0xBB SHR 0xD0 TIMESTAMP 0x2F 0x2D 0x4E 0xE0 0xE3 JUMPDEST 0xED 0x2D ORIGIN 0x4C DUP10 PUSH32 0xF52CA6D0033A86D6A43CE80502A2646970667358221220A1B3005DF6ECA71D1E 0xA7 0x2D SWAP2 JUMPDEST PUSH19 0x967804D812705DD5F6488EA27498F5CFDEE364 PUSH20 0x6F6C634300081400330000000000000000000000 ",
              "sourceMap": "408:24071:7:-:0;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;408:24071:7;;;;1273:26:0;;1269:95;;-1:-1:-1;408:24071:7;;-1:-1:-1;;;;;;408:24071:7;;;;;;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;762:2:7;;408:24071;;2206:26;;;408:24071;;;;2275:27;;;408:24071;;;;2346:25;;;408:24071;;;;2413:19;408:24071;;;;;;;;;;2503:28;408:24071;;;2503:28;408:24071;2541:24;408:24071;;;2541:24;408:24071;;2575:12;408:24071;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;762:2;408:24071;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;762:2;408:24071;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;762:2;408:24071;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;762:2;408:24071;;;;;;;;;;;;;;;;1269:95:0;408:24071:7;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;408:24071:7;;;1322:31:0;408:24071:7;-1:-1:-1;408:24071:7;;;;;;-1:-1:-1;408:24071:7;;;;;-1:-1:-1;408:24071:7;;;;-1:-1:-1;;;;;408:24071:7;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 6930,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_23229": {
                  "entryPoint": 6908,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 7527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 7547,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_int24_fromMemory": {
                  "entryPoint": 10007,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_uint128_fromMemory": {
                  "entryPoint": 10021,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_uint80_fromMemory": {
                  "entryPoint": 9526,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_uint96t_addresst_addresst_addresst_int24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory": {
                  "entryPoint": 10041,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 12
                },
                "abi_encode_address_rational_by_bytes_enum_Operation": {
                  "entryPoint": 7661,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 7301,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 9068,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 7626,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_bytes": {
                  "entryPoint": 7100,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 7266,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 6952,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 7066,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_23245": {
                  "entryPoint": 7010,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_30301": {
                  "entryPoint": 7038,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_calculateAmountOutMinimum": {
                  "entryPoint": 9087,
                  "id": 1072,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 7338,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_collectOwed": {
                  "entryPoint": 10337,
                  "id": 1397,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "fun_getPriceFeed": {
                  "entryPoint": 9889,
                  "id": 958,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_getUsdtBalance": {
                  "entryPoint": 10811,
                  "id": 1977,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_getValidatedPrice": {
                  "entryPoint": 9549,
                  "id": 927,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_handleUnstakeAndCollect": {
                  "entryPoint": 7778,
                  "id": 1276,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_swapToStable": {
                  "entryPoint": 8365,
                  "id": 1501,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 7441,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_0d98": {
                  "entryPoint": 7710,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_28d1": {
                  "entryPoint": 10272,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_4c9b": {
                  "entryPoint": 7560,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f24f": {
                  "entryPoint": 10207,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f360": {
                  "entryPoint": 7382,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "420": [
                  {
                    "length": 32,
                    "start": 3659
                  },
                  {
                    "length": 32,
                    "start": 9121
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c8063117da1ee14611a6557806331a8f1c9146115895780633b7d094614611518578063424c265b146114a4578063483103a4146112605780634a6a749c146111f75780634bdc76cc1461102a57806367a1d5ab14610ed3578063715018a614610e7a57806389a3027114610e355780638aee812714610d895780638da5cb5b14610d60578063ac6e07ee14610804578063c13d2f7514610757578063c31c9c071461072e578063d03153aa14610710578063e63703091461027d578063f0bbcec41461023e578063f2bf87e314610215578063f2fde38b1461018c578063f7c618c1146101635763f90c69061461010e57600080fd5b3461015e57604036600319011261015e576020610129611afc565b610131611b12565b60018060a01b03809216600052600783528160406000209116600052825260406000205416604051908152f35b600080fd5b3461015e57600036600319011261015e576001546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e576101a5611afc565b6101ad611caa565b6001600160a01b039081169081156101fc57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461015e57600036600319011261015e576002546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e576001600160a01b0361025f611afc565b166000526005602052602060ff604060002054166040519015158152f35b3461015e57604036600319011261015e576001600160a01b0361029e611afc565b168060005260056020526102b960ff60406000205416611d11565b6040516323e6650160e11b8152602081600481855afa908115610564576000916106d6575b5060405163133f757160e31b815260248035600483015290916101809182908490816001600160a01b0385165afa92831561056457600092600094610696575b50506040516329bc672160e21b815290602082600481885afa9182156105645760009261065a575b5061035033612a3b565b60405163c69deec560e01b8152336004820152602480359082015260009591948693909284929091906020816044816001600160a01b038b165afa90811561056457600091610620575b50156105a4575050604051633e491d4760e01b8152336004820152602480359082015294915060209050846044816001600160a01b0387165afa93841561056457600094610570575b50839284610449575b50600080516020612aaa8339815191529350610414610444915b61040f33612a3b565b611dca565b6040519384933397602435869192608093969594919660a084019784526020840152604083015260608201520152565b0390a3005b602061048f9160405190631c4b774b60e01b8383015260243560248301526024825261047482611b7e565b60405163468721a760e01b8152938492839260048401611ded565b03816000335af19081156105645760009161052a575b50156104e557610414610444916104de6104d9600080516020612aaa8339815191529760018060a01b0360015416336120ad565b611e1e565b91506103ec565b60405162461bcd60e51b815260206004820152601760248201527f47617567652067657420726577617264206661696c65640000000000000000006044820152606490fd5b90506020813d60201161055c575b8161054560209383611b9a565b8101031261015e5761055690611d7b565b876104a5565b3d9150610538565b6040513d6000823e3d90fd5b9093506020813d60201161059c575b8161058c60209383611b9a565b8101031261015e575192866103e3565b3d915061057f565b610444939750610414929550600080516020612aaa833981519152969194506105d1906024359033612861565b90948195809981610606575b5050816105ec575b5050610406565b6105ff916105fa91336120ad565b612820565b88806105e5565b6106199161061491336120ad565b6127df565b8a806105dd565b90506020813d602011610652575b8161063b60209383611b9a565b8101031261015e5761064c90611d7b565b8a61039a565b3d915061062e565b9091506020813d60201161068e575b8161067660209383611b9a565b8101031261015e5761068790611d67565b9085610346565b3d9150610669565b80919294506106ba9350903d106106cf575b6106b28183611b9a565b810190612739565b5050505050505050925090509091848061031e565b503d6106a8565b90506020813d602011610708575b816106f160209383611b9a565b8101031261015e5761070290611d67565b826102de565b3d91506106e4565b3461015e57600036600319011261015e576020600454604051908152f35b3461015e57600036600319011261015e576003546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e57610770611afc565b610778611caa565b6001600160a01b039081169081156107c757600254826001600160601b0360a01b821617600255167f9d4858dccb76debed7845fd87ec5c769962d072d518c9e34182581abb3e8247c600080a3005b60405162461bcd60e51b8152602060048201526015602482015274496e76616c69642072657761726420737461626c6560581b6044820152606490fd5b3461015e57604036600319011261015e5761081d611afc565b60243560018060a01b0391828116600052600560205261084460ff60406000205416611d11565b6040516323e6650160e11b8152926020846004818585165afa93841561056457600094610d24575b506040519163133f757160e31b83528360048401526101809485846024818685165afa93841561056457600090600097600096610cf1575b50506108af33612a3b565b91600095604051926329bc672160e21b84526020846004818a8a165afa93841561056457600094610cb5575b5060405163c69deec560e01b8152336004820152602481018a90528785169490602081604481895afa958615610564578b91600097610c77575b5086610bf2575b50505060009960009415610ba5575b50506001600160801b0380911680610a4f575b5050602081610951896109769433612861565b5050604051630852cd8d60e31b8382015260248082018b905281529061047482611b7e565b03816000335af190811561056457600091610a15575b50156109e257600080516020612aaa833981519152946109b26104449361040f33612a3b565b9160405195869516983398869192608093969594919660a084019784526020840152604083015260608201520152565b60405162461bcd60e51b815260206004820152600b60248201526a109d5c9b8819985a5b195960aa1b6044820152606490fd5b90506020813d602011610a47575b81610a3060209383611b9a565b8101031261015e57610a4190611d7b565b8861098c565b3d9150610a23565b60405191610a5c83611b62565b898352602083019182526040830160008152606084019160008352608085019342855260405195630624e65f60e11b6020880152516024870152511660448501525160648401525160848301525160a482015260a4815260e0810181811067ffffffffffffffff821117610b8f57604081905263468721a760e01b815260208160df1984610aee818860e48201611ded565b0301816000335af191821561056457600092610b58575b505015610b1357888061093e565b60405162461bcd60e51b815260206004820152601960248201527f4465637265617365206c6971756964697479206661696c6564000000000000006044820152606490fd5b6020809293503d8311610b88575b610b708185611b9a565b8101031261015e57610b8190611d7b565b8980610b05565b503d610b66565b634e487b7160e01b600052604160045260246000fd5b93509850610bb4888333612861565b90938194809b81610bdd575b5050811561092b57610bd6916105fa91336120ad565b898061092b565b610beb9161061491336120ad565b8b80610bc0565b604051633e491d4760e01b8152336004820152602481019290925291995090602090829060449082905afa8015610564578a90600090610c41575b610c3992509933611e62565b8a898161091c565b50506020813d602011610c6f575b81610c5c60209383611b9a565b8101031261015e5789610c399151610c2d565b3d9150610c4f565b915095506020813d602011610cad575b81610c9460209383611b9a565b8101031261015e57610ca68b91611d7b565b958d610915565b3d9150610c87565b9093506020813d602011610ce9575b81610cd160209383611b9a565b8101031261015e57610ce290611d67565b928a6108db565b3d9150610cc4565b9150919450610d0d929650803d106106cf576106b28183611b9a565b505050509a965050505094915093959387806108a4565b9093506020813d602011610d58575b81610d4060209383611b9a565b8101031261015e57610d5190611d67565b928461086c565b3d9150610d33565b3461015e57600036600319011261015e576000546040516001600160a01b039091168152602090f35b3461015e57602036600319011261015e57610da2611afc565b610daa611caa565b6001600160a01b03908116908115610df957600154826001600160601b0360a01b821617600155167f906ff2422a6ffa134f2d7ccaffd446bc0c583a5cb6615749b4b2836942a5fea8600080a3005b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103932bbb0b932103a37b5b2b760611b6044820152606490fd5b3461015e57600036600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e57600036600319011261015e57610e93611caa565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015e57606036600319011261015e57610eec611afc565b610ef4611b12565b6001600160a01b03604435818116939084900361015e578190610f15611caa565b16918215610ff05716908115610fb8578215610f7e578060005260076020526040600020826000526020526040600020836001600160601b0360a01b8254161790557f749f8bd52d751fb993fa16283117f0242f19e5471f5cb26f1185d1028cd803e5600080a4005b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103a37903a37b5b2b760811b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527124b73b30b634b210333937b6903a37b5b2b760711b6044820152606490fd5b3461015e57604036600319011261015e57611043611afc565b60243560018060a01b0380921691826000526020906005825261106d60ff60406000205416611d11565b6040516329bc672160e21b8152908282600481885afa918215610564576000926111c0575b5060405163c69deec560e01b815233600482015260248101859052908216908381604481855afa80156105645760009061118a575b6110d19150611d88565b6110da33612a3b565b604051633e491d4760e01b81523360048201526024810186905290918490829060449082905afa928315610564578591600094611155575b50916104066111249260009433611e62565b926040519485528401526000604084015260608301526080820152600080516020612aaa83398151915260a03392a3005b85809295508193503d8311611183575b61116f8183611b9a565b8101031261015e5751918490610406611112565b503d611165565b508381813d83116111b9575b6111a08183611b9a565b8101031261015e576111b46110d191611d7b565b6110c7565b503d611196565b9091508281813d83116111f0575b6111d88183611b9a565b8101031261015e576111e990611d67565b9085611092565b503d6111ce565b3461015e57604036600319011261015e57611210611afc565b611218611b12565b9060018060a01b0380911660005260066020526040600020911660005260205261125c6112486040600020611bbc565b604051918291602083526020830190611c85565b0390f35b3461015e57606036600319011261015e57611279611afc565b611281611b12565b906044359067ffffffffffffffff9081831161015e573660238401121561015e57826004013591821161015e576024903682848601011161015e576112c4611caa565b6001600160a01b0390811694851561146c5716938415611436578215611403576000526020936006855260406000209060005284526040600020926113098454611b28565b601f81116113bd575b50600094601f8411600114611354575093829394600093611347575b505050600019600383901b1c191660019190911b179055005b010135905083808061132e565b91601f198416958560005283600020936000905b8882106113a3575050846001969710611387575b50505050811b019055005b60001960f88660031b161c19920101351690558380808061137c565b806001849786839596890101358155019601920190611368565b8460005285600020601f850160051c8101918786106113f9575b601f0160051c01905b8181106113ed5750611312565b600081556001016113e0565b90915081906113d7565b60405162461bcd60e51b815260206004820152600c818401526b092dcecc2d8d2c840e0c2e8d60a31b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f818401526e24b73b30b634b2103a37aa37b5b2b760891b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011818501527024b73b30b634b210333937b6aa37b5b2b760791b6044820152606490fd5b3461015e57602036600319011261015e576114bd611afc565b6114c5611caa565b6001600160a01b03166114d9811515611cd6565b6000818152600560205260408120805460ff191660011790557ffc1f1e73948cbc47c5b7f90e5601b7daccd9ad7173218486ccc74bdd051d05e88180a3005b3461015e57602036600319011261015e57611531611afc565b611539611caa565b6001600160a01b031661154d811515611cd6565b6000818152600560205260408120805460ff191690557f987eb3c2f78454541205f72f34839b434c306c9eaf4922efd7c0c3060fdb2e4c8180a3005b3461015e57604036600319011261015e576115a2611afc565b602480359060018060a01b038093169283600052602091600583526115ce60ff60406000205416611d11565b6040516323e6650160e11b8152908382600481895afa91821561056457600092611a2e575b506040516329bc672160e21b81529084826004818a5afa918215610564576000926119f7575b5060405163c69deec560e01b81523360048201526024810187905284841694831692908681604481875afa908115610564576000916119c2575b5061197e5761166133612a3b565b926040519463133f757160e31b865288600487015261018095868186818b5afa97881561056457899160009860009a611947575b50509082916116a88c6044969533612861565b9a81809b8d93611932575b50508161191d575b50506040519485809263e985e9c560e01b8252336004830152868a8301525afa80156105645789936000916118e7575b50156117db575b505060405163b6b55f2560e01b828201528381018990528381526117199261047482611b7e565b03816000335af1908115610564576000916117a6575b501561177457506117439061040f33612a3b565b926040519485528401526040830152600060608301526080820152600080516020612aaa83398151915260a03392a3005b84600c6064926040519262461bcd60e51b845260048401528201526b14dd185ad94819985a5b195960a21b6044820152fd5b90508581813d83116117d4575b6117bd8183611b9a565b8101031261015e576117ce90611d7b565b8861172f565b503d6117b3565b9091506040519163a22cb46560e01b89840152848301526001604483015260448252608082019082821067ffffffffffffffff8311176118d2578189918160405263468721a760e01b82528461183881607f199360848201611ded565b0301816000335af191821561056457889060009361189b575b50505015611861578589806116f2565b60405162461bcd60e51b8152600481018790526013818401527213919508185c1c1c9bdd985b0819985a5b1959606a1b6044820152606490fd5b90809293503d83116118cb575b6118b28185611b9a565b8101031261015e576118c390611d7b565b898781611851565b503d6118a8565b84634e487b7160e01b60005260416004526000fd5b84819592503d8311611916575b6118fe8183611b9a565b8101031261015e576119108993611d7b565b8c6116eb565b503d6118f4565b61192b916105fa91336120ad565b898e6116bb565b6119409161061491336120ad565b8a386116b3565b611965929a5060449594939950803d106106cf576106b28183611b9a565b505050505050505099925090509798909192938d611695565b60405162461bcd60e51b8152600481018790526017818401527f506f736974696f6e20616c7265616479207374616b65640000000000000000006044820152606490fd5b90508681813d83116119f0575b6119d98183611b9a565b8101031261015e576119ea90611d7b565b89611653565b503d6119cf565b9091508481813d8311611a27575b611a0f8183611b9a565b8101031261015e57611a2090611d67565b9087611619565b503d611a05565b9091508381813d8311611a5e575b611a468183611b9a565b8101031261015e57611a5790611d67565b90866115f3565b503d611a3c565b3461015e57602036600319011261015e57600435611a81611caa565b6103e88111611ac35760407fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a4530657591600454908060045582519182526020820152a1005b60405162461bcd60e51b81526020600482015260116024820152700a6d8d2e0e0c2ceca40e8dede40d0d2ced607b1b6044820152606490fd5b600435906001600160a01b038216820361015e57565b602435906001600160a01b038216820361015e57565b90600182811c92168015611b58575b6020831014611b4257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b37565b60a0810190811067ffffffffffffffff821117610b8f57604052565b6060810190811067ffffffffffffffff821117610b8f57604052565b90601f8019910116810190811067ffffffffffffffff821117610b8f57604052565b9060405191826000825492611bd084611b28565b908184526001948581169081600014611c3f5750600114611bfc575b5050611bfa92500383611b9a565b565b9093915060005260209081600020936000915b818310611c27575050611bfa93508201013880611bec565b85548884018501529485019487945091830191611c0f565b915050611bfa94506020925060ff191682840152151560051b8201013880611bec565b60005b838110611c755750506000910152565b8181015183820152602001611c65565b90602091611c9e81518092818552858086019101611c62565b601f01601f1916010190565b6000546001600160a01b03163303611cbe57565b60405163118cdaa760e01b8152336004820152602490fd5b15611cdd57565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a59081c1bdbdb60a21b6044820152606490fd5b15611d1857565b60405162461bcd60e51b815260206004820152602160248201527f506f6f6c206e6f7420617070726f76656420666f722074686973206d6f64756c6044820152606560f81b6064820152608490fd5b51906001600160a01b038216820361015e57565b5190811515820361015e57565b15611d8f57565b60405162461bcd60e51b8152602060048201526013602482015272141bdcda5d1a5bdb881b9bdd081cdd185ad959606a1b6044820152606490fd5b91908203918211611dd757565b634e487b7160e01b600052601160045260246000fd5b9291611e1960609160009360018060a01b03168652836020870152608060408701526080860190611c85565b930152565b15611e2557565b60405162461bcd60e51b815260206004820152601560248201527414ddd85c081d1bc81cdd18589b194819985a5b1959605a1b6044820152606490fd5b916001600160a01b0391808316918215612078576040805163c69deec560e01b81528587166001600160a01b038116600483015260248201849052602094929392909185816044818a5afa801561206d57600090612037575b611ec59150611d88565b8351633e491d4760e01b81526001600160a01b038316600482015260248101849052958590879060449082905afa95861561202c57600096611ffd575b50918491611f4893855192632e1a7d4d60e01b85850152602484015260248352611f2b83611b7e565b6000865180968195829463468721a760e01b845260048401611ded565b03925af1908115611ff257600091611fba575b5015611f7f57505080611f6d57505050565b611bfa926104d99260015416906120ad565b60649250519062461bcd60e51b82526004820152601560248201527411d85d59d9481dda5d1a191c985dc819985a5b1959605a1b6044820152fd5b908382813d8311611feb575b611fd08183611b9a565b81010312611fe85750611fe290611d7b565b38611f5b565b80fd5b503d611fc6565b82513d6000823e3d90fd5b90958582813d8311612025575b6120148183611b9a565b81010312611fe85750519484611f02565b503d61200a565b84513d6000823e3d90fd5b8682813d8311612066575b61204c8183611b9a565b81010312611fe85750612061611ec591611d7b565b611ebb565b503d612042565b85513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420676175676560981b6044820152606490fd5b91908115612364576002546001600160a01b0390811693828216929091908386146123595760009384526020926006845260409687862090865284526120f4878620611bbc565b80511561232157600354885163095ea7b360e01b878201529085166001600160a01b031660248201526044808201899052815296601f1992859061213960648b611b9a565b1693895187818061215963468721a760e01b9d8e83528660048401611ded565b03818c8a5af19081156123175789916122de575b50156122a3578161217d9161237f565b61012c42019182421161228f57918695949291889794928c51936121a085611b62565b8452888401928784528d850190815260608501918252608085019283528d5198899563c04b8d5960e01b8c8801528b6024880152516044870160a0905260e487016121ea91611c85565b94511660648601525160848501525160a48401525160c48301520390810184526122149084611b9a565b60035416958588518098819582948352600483019161223292611ded565b03925af19384156122845750819361224b575b50505090565b9091809350813d831161227d575b6122638183611b9a565b81010312611fe8575061227590611d7b565b388080612245565b503d612259565b51913d9150823e3d90fd5b634e487b7160e01b89526011600452602489fd5b895162461bcd60e51b8152600481018890526014602482015273151bdad95b88185c1c1c9bdd994819985a5b195960621b6044820152606490fd5b90508781813d8311612310575b6122f58183611b9a565b8101031261230c5761230690611d7b565b3861216d565b8880fd5b503d6122eb565b8b513d8b823e3d90fd5b875162461bcd60e51b815260048101869052601160248201527014ddd85c081c185d1a081b9bdd081cd95d607a1b6044820152606490fd5b505050505050600190565b505050600190565b81810292918115918404141715611dd757565b6002546001600160a01b03918083169183169082821461252f576123cc6123c77f000000000000000000000000000000000000000000000000000000000000000093846126a1565b61254d565b9382168314612502576123c7602095926123e5926126a1565b906040519485809463313ce56760e01b825260049788915afa928315610564576000936124be575b5060ff9161241a9161236c565b911660080160ff81116124a95760ff60051991160160ff81116124a95760ff16604d81116124a957600a0a908115612494579161245d916305f5e100930461236c565b04908054916127109283039183831161247f57509061247b9161236c565b0490565b601190634e487b7160e01b6000525260246000fd5b601284634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b6020939193813d82116124fa575b816124d960209383611b9a565b810103126124f657519060ff82168203611fe857509160ff61240d565b5080fd5b3d91506124cc565b505050612514906305f5e1009261236c565b0460045490612710918203828111611dd75761247b9161236c565b5050505090565b519069ffffffffffffffffffff8216820361015e57565b6001600160a01b031680156126675760a060049160405192838092633fabe5a360e21b82525afa8015610564576000918291612613575b5060008213156125de5761259c620151809142611dca565b116125a45790565b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819995959081d1bdbc81bdb1960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b6044820152606490fd5b91905060a0823d821161265f575b8161262e60a09383611b9a565b81010312611fe8575061264081612536565b506020810151612657608060608401519301612536565b509038612584565b3d9150612621565b60405162461bcd60e51b8152602060048201526012602482015271141c9a58d94819995959081b9bdd081cd95d60721b6044820152606490fd5b9060018060a01b03809216600052600760205281604060002091166000526020526040600020541680156126d25790565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f207072696365206665656420666f7220746f6b656e2070616972000000006044820152606490fd5b51908160020b820361015e57565b51906001600160801b038216820361015e57565b91908261018091031261015e5781516001600160601b038116810361015e579161276560208201611d67565b9161277260408301611d67565b9161277f60608201611d67565b9161278c60808301612717565b9161279960a08201612717565b916127a660c08301612717565b916127b360e08201612725565b9161010082015191610120810151916127dc6101606127d56101408501612725565b9301612725565b90565b156127e657565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b8c081cddd85c0819985a5b195960721b6044820152606490fd5b1561282757565b60405162461bcd60e51b8152602060048201526012602482015271151bdad95b8c481cddd85c0819985a5b195960721b6044820152606490fd5b604080519390926001600160a01b0392909167ffffffffffffffff918416906080870183811188821017610b8f5786528652602093848701828152868801916001600160801b0392839182825260608b01938385528a519b8c8b63fc6f786560e01b9101525160248d0152511660448b015251166064890152511660848701526084865260c086019286841083851117610b8f57838092818852635229073f60e01b82526000958680948b61291d8160bf199360c48201611ded565b0301925af1958615612a315783928497612985575b50505015612951578284805181010312611fe857508201519101519091565b50606491519062461bcd60e51b82526004820152600e60248201526d10dbdb1b1958dd0819985a5b195960921b6044820152fd5b91965091503d8084883e6129998188611b9a565b820195858360c08901980312612a15576129b290611d7b565b9160e081015190828211612a2d57018660df82011215612a155760c0810151918211612a19578551966129ee601f8401601f1916870189611b9a565b82885260e08383010111612a155790612a0d9160e08689019101611c62565b388080612932565b8380fd5b634e487b7160e01b84526041600452602484fd5b8480fd5b85513d85823e3d90fd5b6002546040516370a0823160e01b81526001600160a01b0392831660048201529160209183916024918391165afa90811561056457600091612a7b575090565b906020823d8211612aa1575b81612a9460209383611b9a565b81010312611fe857505190565b3d9150612a8756fec457dabb1cd0422f2d4ee0e35bed2d324c897ff52ca6d0033a86d6a43ce80502a2646970667358221220a1b3005df6eca71d1ea72d915b72967804d812705dd5f6488ea27498f5cfdee364736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x117DA1EE EQ PUSH2 0x1A65 JUMPI DUP1 PUSH4 0x31A8F1C9 EQ PUSH2 0x1589 JUMPI DUP1 PUSH4 0x3B7D0946 EQ PUSH2 0x1518 JUMPI DUP1 PUSH4 0x424C265B EQ PUSH2 0x14A4 JUMPI DUP1 PUSH4 0x483103A4 EQ PUSH2 0x1260 JUMPI DUP1 PUSH4 0x4A6A749C EQ PUSH2 0x11F7 JUMPI DUP1 PUSH4 0x4BDC76CC EQ PUSH2 0x102A JUMPI DUP1 PUSH4 0x67A1D5AB EQ PUSH2 0xED3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE7A JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0xD89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD60 JUMPI DUP1 PUSH4 0xAC6E07EE EQ PUSH2 0x804 JUMPI DUP1 PUSH4 0xC13D2F75 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x72E JUMPI DUP1 PUSH4 0xD03153AA EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0xE6370309 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF0BBCEC4 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xF2BF87E3 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x163 JUMPI PUSH4 0xF90C6906 EQ PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x20 PUSH2 0x129 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x131 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1A5 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x25F PUSH2 0x1AFC JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29E PUSH2 0x1AFC JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x2B9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6D6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 PUSH2 0x180 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x696 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x65A JUMPI JUMPDEST POP PUSH2 0x350 CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x0 SWAP6 SWAP2 SWAP5 DUP7 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x620 JUMPI JUMPDEST POP ISZERO PUSH2 0x5A4 JUMPI POP POP PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP5 SWAP2 POP PUSH1 0x20 SWAP1 POP DUP5 PUSH1 0x44 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x570 JUMPI JUMPDEST POP DUP4 SWAP3 DUP5 PUSH2 0x449 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP PUSH2 0x414 PUSH2 0x444 SWAP2 JUMPDEST PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x1DCA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 CALLER SWAP8 PUSH1 0x24 CALLDATALOAD DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x20 PUSH2 0x48F SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1C4B774B PUSH1 0xE0 SHL DUP4 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x24 DUP3 MSTORE PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x52A JUMPI JUMPDEST POP ISZERO PUSH2 0x4E5 JUMPI PUSH2 0x414 PUSH2 0x444 SWAP2 PUSH2 0x4DE PUSH2 0x4D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST SWAP2 POP PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47617567652067657420726577617264206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x55C JUMPI JUMPDEST DUP2 PUSH2 0x545 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x556 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP8 PUSH2 0x4A5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x59C JUMPI JUMPDEST DUP2 PUSH2 0x58C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI MLOAD SWAP3 DUP7 PUSH2 0x3E3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x57F JUMP JUMPDEST PUSH2 0x444 SWAP4 SWAP8 POP PUSH2 0x414 SWAP3 SWAP6 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP2 SWAP5 POP PUSH2 0x5D1 SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP1 SWAP5 DUP2 SWAP6 DUP1 SWAP10 DUP2 PUSH2 0x606 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x5EC JUMPI JUMPDEST POP POP PUSH2 0x406 JUMP JUMPDEST PUSH2 0x5FF SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2820 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x619 SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x27DF JUMP JUMPDEST DUP11 DUP1 PUSH2 0x5DD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x652 JUMPI JUMPDEST DUP2 PUSH2 0x63B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x64C SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP11 PUSH2 0x39A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x62E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x68E JUMPI JUMPDEST DUP2 PUSH2 0x676 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x687 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x346 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x669 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP PUSH2 0x6BA SWAP4 POP SWAP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI JUMPDEST PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2739 JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP3 POP SWAP1 POP SWAP1 SWAP2 DUP5 DUP1 PUSH2 0x31E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x708 JUMPI JUMPDEST DUP2 PUSH2 0x6F1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x702 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST DUP3 PUSH2 0x2DE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6E4 JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x770 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x778 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x2 SSTORE AND PUSH32 0x9D4858DCCB76DEBED7845FD87EC5C769962D072D518C9E34182581ABB3E8247C PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642072657761726420737461626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x81D PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x844 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP6 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xD24 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP4 MSTORE DUP4 PUSH1 0x4 DUP5 ADD MSTORE PUSH2 0x180 SWAP5 DUP6 DUP5 PUSH1 0x24 DUP2 DUP7 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP8 PUSH1 0x0 SWAP7 PUSH2 0xCF1 JUMPI JUMPDEST POP POP PUSH2 0x8AF CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP3 PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x20 DUP5 PUSH1 0x4 DUP2 DUP11 DUP11 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xCB5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE DUP8 DUP6 AND SWAP5 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x564 JUMPI DUP12 SWAP2 PUSH1 0x0 SWAP8 PUSH2 0xC77 JUMPI JUMPDEST POP DUP7 PUSH2 0xBF2 JUMPI JUMPDEST POP POP POP PUSH1 0x0 SWAP10 PUSH1 0x0 SWAP5 ISZERO PUSH2 0xBA5 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 SWAP2 AND DUP1 PUSH2 0xA4F JUMPI JUMPDEST POP POP PUSH1 0x20 DUP2 PUSH2 0x951 DUP10 PUSH2 0x976 SWAP5 CALLER PUSH2 0x2861 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP2 MSTORE SWAP1 PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA15 JUMPI JUMPDEST POP ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 PUSH2 0x9B2 PUSH2 0x444 SWAP4 PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 AND SWAP9 CALLER SWAP9 DUP7 SWAP2 SWAP3 PUSH1 0x80 SWAP4 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 PUSH1 0xA0 DUP5 ADD SWAP8 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109D5C9B8819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA47 JUMPI JUMPDEST DUP2 PUSH2 0xA30 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xA41 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP9 PUSH2 0x98C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA5C DUP4 PUSH2 0x1B62 JUMP JUMPDEST DUP10 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 TIMESTAMP DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 PUSH4 0x624E65F PUSH1 0xE1 SHL PUSH1 0x20 DUP9 ADD MSTORE MLOAD PUSH1 0x24 DUP8 ADD MSTORE MLOAD AND PUSH1 0x44 DUP6 ADD MSTORE MLOAD PUSH1 0x64 DUP5 ADD MSTORE MLOAD PUSH1 0x84 DUP4 ADD MSTORE MLOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 MSTORE PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0xDF NOT DUP5 PUSH2 0xAEE DUP2 DUP9 PUSH1 0xE4 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD DUP2 PUSH1 0x0 CALLER GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xB58 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xB13 JUMPI DUP9 DUP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465637265617365206C6971756964697479206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0xB88 JUMPI JUMPDEST PUSH2 0xB70 DUP2 DUP6 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xB81 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 DUP1 PUSH2 0xB05 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB66 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 POP SWAP9 POP PUSH2 0xBB4 DUP9 DUP4 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP1 SWAP4 DUP2 SWAP5 DUP1 SWAP12 DUP2 PUSH2 0xBDD JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0x92B JUMPI PUSH2 0xBD6 SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP10 DUP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0xBEB SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP12 DUP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP10 POP SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI DUP11 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC41 JUMPI JUMPDEST PUSH2 0xC39 SWAP3 POP SWAP10 CALLER PUSH2 0x1E62 JUMP JUMPDEST DUP11 DUP10 DUP2 PUSH2 0x91C JUMP JUMPDEST POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC6F JUMPI JUMPDEST DUP2 PUSH2 0xC5C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI DUP10 PUSH2 0xC39 SWAP2 MLOAD PUSH2 0xC2D JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC4F JUMP JUMPDEST SWAP2 POP SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCAD JUMPI JUMPDEST DUP2 PUSH2 0xC94 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xCA6 DUP12 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST SWAP6 DUP14 PUSH2 0x915 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC87 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 PUSH2 0xCD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xCE2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x8DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCC4 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP5 POP PUSH2 0xD0D SWAP3 SWAP7 POP DUP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP POP SWAP11 SWAP7 POP POP POP POP SWAP5 SWAP2 POP SWAP4 SWAP6 SWAP4 DUP8 DUP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD58 JUMPI JUMPDEST DUP2 PUSH2 0xD40 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0xD51 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 DUP5 PUSH2 0x86C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD33 JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xDA2 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xDAA PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x906FF2422A6FFA134F2D7CCAFFD446BC0C583A5CB6615749B4B2836942A5FEA8 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103932BBB0B932103A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xE93 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0xEEC PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0xEF4 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x15E JUMPI DUP2 SWAP1 PUSH2 0xF15 PUSH2 0x1CAA JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0xFF0 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xFB8 JUMPI DUP3 ISZERO PUSH2 0xF7E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x749F8BD52D751FB993FA16283117F0242F19E5471F5CB26F1185D1028CD803E5 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C1C9A58D94819995959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B2103A37903A37B5B2B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B210333937B6903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1043 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH2 0x106D PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP3 DUP3 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x11C0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP3 AND SWAP1 DUP4 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x118A JUMPI JUMPDEST PUSH2 0x10D1 SWAP2 POP PUSH2 0x1D88 JUMP JUMPDEST PUSH2 0x10DA CALLER PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI DUP6 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0x1155 JUMPI JUMPDEST POP SWAP2 PUSH2 0x406 PUSH2 0x1124 SWAP3 PUSH1 0x0 SWAP5 CALLER PUSH2 0x1E62 JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST DUP6 DUP1 SWAP3 SWAP6 POP DUP2 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x1183 JUMPI JUMPDEST PUSH2 0x116F DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI MLOAD SWAP2 DUP5 SWAP1 PUSH2 0x406 PUSH2 0x1112 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1165 JUMP JUMPDEST POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11B9 JUMPI JUMPDEST PUSH2 0x11A0 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x11B4 PUSH2 0x10D1 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1196 JUMP JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11F0 JUMPI JUMPDEST PUSH2 0x11D8 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x11E9 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x1092 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11CE JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1210 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1218 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x125C PUSH2 0x1248 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1279 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1281 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH2 0x15E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x15E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x15E JUMPI PUSH1 0x24 SWAP1 CALLDATASIZE DUP3 DUP5 DUP7 ADD ADD GT PUSH2 0x15E JUMPI PUSH2 0x12C4 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP6 ISZERO PUSH2 0x146C JUMPI AND SWAP4 DUP5 ISZERO PUSH2 0x1436 JUMPI DUP3 ISZERO PUSH2 0x1403 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0x1309 DUP5 SLOAD PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x13BD JUMPI JUMPDEST POP PUSH1 0x0 SWAP5 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1354 JUMPI POP SWAP4 DUP3 SWAP4 SWAP5 PUSH1 0x0 SWAP4 PUSH2 0x1347 JUMPI JUMPDEST POP POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 SSTORE STOP JUMPDEST ADD ADD CALLDATALOAD SWAP1 POP DUP4 DUP1 DUP1 PUSH2 0x132E JUMP JUMPDEST SWAP2 PUSH1 0x1F NOT DUP5 AND SWAP6 DUP6 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x13A3 JUMPI POP POP DUP5 PUSH1 0x1 SWAP7 SWAP8 LT PUSH2 0x1387 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP7 PUSH1 0x3 SHL AND SHR NOT SWAP3 ADD ADD CALLDATALOAD AND SWAP1 SSTORE DUP4 DUP1 DUP1 DUP1 PUSH2 0x137C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP8 DUP7 DUP4 SWAP6 SWAP7 DUP10 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP7 ADD SWAP3 ADD SWAP1 PUSH2 0x1368 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP7 LT PUSH2 0x13F9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13ED JUMPI POP PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC DUP2 DUP5 ADD MSTORE PUSH12 0x92DCECC2D8D2C840E0C2E8D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF DUP2 DUP5 ADD MSTORE PUSH15 0x24B73B30B634B2103A37AA37B5B2B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 DUP2 DUP6 ADD MSTORE PUSH17 0x24B73B30B634B210333937B6AA37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x14BD PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x14C5 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14D9 DUP2 ISZERO ISZERO PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0xFC1F1E73948CBC47C5B7F90E5601B7DACCD9AD7173218486CCC74BDD051D05E8 DUP2 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x1531 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1539 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x154D DUP2 ISZERO ISZERO PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x987EB3C2F78454541205F72F34839B434C306C9EAF4922EFD7C0C3060FDB2E4C DUP2 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH2 0x15A2 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH2 0x15CE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23E66501 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP4 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1A2E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29BC6721 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP5 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x19F7 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE DUP5 DUP5 AND SWAP5 DUP4 AND SWAP3 SWAP1 DUP7 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x19C2 JUMPI JUMPDEST POP PUSH2 0x197E JUMPI PUSH2 0x1661 CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x133F7571 PUSH1 0xE3 SHL DUP7 MSTORE DUP9 PUSH1 0x4 DUP8 ADD MSTORE PUSH2 0x180 SWAP6 DUP7 DUP2 DUP7 DUP2 DUP12 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x564 JUMPI DUP10 SWAP2 PUSH1 0x0 SWAP9 PUSH1 0x0 SWAP11 PUSH2 0x1947 JUMPI JUMPDEST POP POP SWAP1 DUP3 SWAP2 PUSH2 0x16A8 DUP13 PUSH1 0x44 SWAP7 SWAP6 CALLER PUSH2 0x2861 JUMP JUMPDEST SWAP11 DUP2 DUP1 SWAP12 DUP14 SWAP4 PUSH2 0x1932 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x191D JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP11 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI DUP10 SWAP4 PUSH1 0x0 SWAP2 PUSH2 0x18E7 JUMPI JUMPDEST POP ISZERO PUSH2 0x17DB JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP3 DUP3 ADD MSTORE DUP4 DUP2 ADD DUP10 SWAP1 MSTORE DUP4 DUP2 MSTORE PUSH2 0x1719 SWAP3 PUSH2 0x474 DUP3 PUSH2 0x1B7E JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x17A6 JUMPI JUMPDEST POP ISZERO PUSH2 0x1774 JUMPI POP PUSH2 0x1743 SWAP1 PUSH2 0x40F CALLER PUSH2 0x2A3B JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2AAA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST DUP5 PUSH1 0xC PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH12 0x14DD185AD94819985A5B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17D4 JUMPI JUMPDEST PUSH2 0x17BD DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x17CE SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP9 PUSH2 0x172F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17B3 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0xA22CB465 PUSH1 0xE0 SHL DUP10 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x18D2 JUMPI DUP2 DUP10 SWAP2 DUP2 PUSH1 0x40 MSTORE PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP3 MSTORE DUP5 PUSH2 0x1838 DUP2 PUSH1 0x7F NOT SWAP4 PUSH1 0x84 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD DUP2 PUSH1 0x0 CALLER GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI DUP9 SWAP1 PUSH1 0x0 SWAP4 PUSH2 0x189B JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x1861 JUMPI DUP6 DUP10 DUP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP5 ADD MSTORE PUSH19 0x13919508185C1C1C9BDD985B0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x18CB JUMPI JUMPDEST PUSH2 0x18B2 DUP2 DUP6 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x18C3 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 DUP8 DUP2 PUSH2 0x1851 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18A8 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1916 JUMPI JUMPDEST PUSH2 0x18FE DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1910 DUP10 SWAP4 PUSH2 0x1D7B JUMP JUMPDEST DUP13 PUSH2 0x16EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x192B SWAP2 PUSH2 0x5FA SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP10 DUP15 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x1940 SWAP2 PUSH2 0x614 SWAP2 CALLER PUSH2 0x20AD JUMP JUMPDEST DUP11 CODESIZE PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x1965 SWAP3 SWAP11 POP PUSH1 0x44 SWAP6 SWAP5 SWAP4 SWAP10 POP DUP1 RETURNDATASIZE LT PUSH2 0x6CF JUMPI PUSH2 0x6B2 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP POP POP POP POP POP SWAP10 SWAP3 POP SWAP1 POP SWAP8 SWAP9 SWAP1 SWAP2 SWAP3 SWAP4 DUP14 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x17 DUP2 DUP5 ADD MSTORE PUSH32 0x506F736974696F6E20616C7265616479207374616B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F0 JUMPI JUMPDEST PUSH2 0x19D9 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x19EA SWAP1 PUSH2 0x1D7B JUMP JUMPDEST DUP10 PUSH2 0x1653 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x19CF JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1A27 JUMPI JUMPDEST PUSH2 0x1A0F DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1A20 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP8 PUSH2 0x1619 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A05 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1A5E JUMPI JUMPDEST PUSH2 0x1A46 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x15E JUMPI PUSH2 0x1A57 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 DUP7 PUSH2 0x15F3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3C JUMP JUMPDEST CALLVALUE PUSH2 0x15E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A81 PUSH2 0x1CAA JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x1AC3 JUMPI PUSH1 0x40 PUSH32 0xDDD31550B26E9EF8ADE466958BE83FF8A014D9B4F36D546B61A6847A45306575 SWAP2 PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xA6D8D2E0E0C2CECA40E8DEDE40D0D2CED PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1B58 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1B42 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB8F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1BD0 DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1C3F JUMPI POP PUSH1 0x1 EQ PUSH2 0x1BFC JUMPI JUMPDEST POP POP PUSH2 0x1BFA SWAP3 POP SUB DUP4 PUSH2 0x1B9A JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C27 JUMPI POP POP PUSH2 0x1BFA SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1BEC JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C0F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1BFA SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C75 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C65 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C9E DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1CBE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CDD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A59081C1BDBDB PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F7420617070726F76656420666F722074686973206D6F64756C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1D8F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDCDA5D1A5BDB881B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1DD7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x1E19 PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE DUP4 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E25 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DDD85C081D1BC81CDD18589B194819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x2078 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xC69DEEC5 PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x20 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 DUP2 PUSH1 0x44 DUP2 DUP11 GAS STATICCALL DUP1 ISZERO PUSH2 0x206D JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x1EC5 SWAP2 POP PUSH2 0x1D88 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x3E491D47 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP6 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x202C JUMPI PUSH1 0x0 SWAP7 PUSH2 0x1FFD JUMPI JUMPDEST POP SWAP2 DUP5 SWAP2 PUSH2 0x1F48 SWAP4 DUP6 MLOAD SWAP3 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP6 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 DUP4 MSTORE PUSH2 0x1F2B DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x468721A7 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1FBA JUMPI JUMPDEST POP ISZERO PUSH2 0x1F7F JUMPI POP POP DUP1 PUSH2 0x1F6D JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1BFA SWAP3 PUSH2 0x4D9 SWAP3 PUSH1 0x1 SLOAD AND SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x64 SWAP3 POP MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11D85D59D9481DDA5D1A191C985DC819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FEB JUMPI JUMPDEST PUSH2 0x1FD0 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x1FE2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE PUSH2 0x1F5B JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1FC6 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 DUP6 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2025 JUMPI JUMPDEST PUSH2 0x2014 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP MLOAD SWAP5 DUP5 PUSH2 0x1F02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x200A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2066 JUMPI JUMPDEST PUSH2 0x204C DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2061 PUSH2 0x1EC5 SWAP2 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x1EBB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2042 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206761756765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x2364 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 DUP3 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 DUP7 EQ PUSH2 0x2359 JUMPI PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x6 DUP5 MSTORE PUSH1 0x40 SWAP7 DUP8 DUP7 KECCAK256 SWAP1 DUP7 MSTORE DUP5 MSTORE PUSH2 0x20F4 DUP8 DUP7 KECCAK256 PUSH2 0x1BBC JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2321 JUMPI PUSH1 0x3 SLOAD DUP9 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP8 DUP3 ADD MSTORE SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 MSTORE SWAP7 PUSH1 0x1F NOT SWAP3 DUP6 SWAP1 PUSH2 0x2139 PUSH1 0x64 DUP12 PUSH2 0x1B9A JUMP JUMPDEST AND SWAP4 DUP10 MLOAD DUP8 DUP2 DUP1 PUSH2 0x2159 PUSH4 0x468721A7 PUSH1 0xE0 SHL SWAP14 DUP15 DUP4 MSTORE DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1DED JUMP JUMPDEST SUB DUP2 DUP13 DUP11 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2317 JUMPI DUP10 SWAP2 PUSH2 0x22DE JUMPI JUMPDEST POP ISZERO PUSH2 0x22A3 JUMPI DUP2 PUSH2 0x217D SWAP2 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x12C TIMESTAMP ADD SWAP2 DUP3 TIMESTAMP GT PUSH2 0x228F JUMPI SWAP2 DUP7 SWAP6 SWAP5 SWAP3 SWAP2 DUP9 SWAP8 SWAP5 SWAP3 DUP13 MLOAD SWAP4 PUSH2 0x21A0 DUP6 PUSH2 0x1B62 JUMP JUMPDEST DUP5 MSTORE DUP9 DUP5 ADD SWAP3 DUP8 DUP5 MSTORE DUP14 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE DUP14 MLOAD SWAP9 DUP10 SWAP6 PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP13 DUP9 ADD MSTORE DUP12 PUSH1 0x24 DUP9 ADD MSTORE MLOAD PUSH1 0x44 DUP8 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xE4 DUP8 ADD PUSH2 0x21EA SWAP2 PUSH2 0x1C85 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x64 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE MLOAD PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP1 DUP2 ADD DUP5 MSTORE PUSH2 0x2214 SWAP1 DUP5 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP6 DUP6 DUP9 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 DUP4 MSTORE PUSH1 0x4 DUP4 ADD SWAP2 PUSH2 0x2232 SWAP3 PUSH2 0x1DED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x2284 JUMPI POP DUP2 SWAP4 PUSH2 0x224B JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 DUP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x227D JUMPI JUMPDEST PUSH2 0x2263 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2275 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2245 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2259 JUMP JUMPDEST MLOAD SWAP2 RETURNDATASIZE SWAP2 POP DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185C1C1C9BDD994819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2310 JUMPI JUMPDEST PUSH2 0x22F5 DUP2 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x230C JUMPI PUSH2 0x2306 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST CODESIZE PUSH2 0x216D JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x22EB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DDD85C081C185D1A081B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1DD7 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND SWAP2 DUP4 AND SWAP1 DUP3 DUP3 EQ PUSH2 0x252F JUMPI PUSH2 0x23CC PUSH2 0x23C7 PUSH32 0x0 SWAP4 DUP5 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x254D JUMP JUMPDEST SWAP4 DUP3 AND DUP4 EQ PUSH2 0x2502 JUMPI PUSH2 0x23C7 PUSH1 0x20 SWAP6 SWAP3 PUSH2 0x23E5 SWAP3 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 SWAP8 DUP9 SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x24BE JUMPI JUMPDEST POP PUSH1 0xFF SWAP2 PUSH2 0x241A SWAP2 PUSH2 0x236C JUMP JUMPDEST SWAP2 AND PUSH1 0x8 ADD PUSH1 0xFF DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xFF PUSH1 0x5 NOT SWAP2 AND ADD PUSH1 0xFF DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH2 0x24A9 JUMPI PUSH1 0xA EXP SWAP1 DUP2 ISZERO PUSH2 0x2494 JUMPI SWAP2 PUSH2 0x245D SWAP2 PUSH4 0x5F5E100 SWAP4 DIV PUSH2 0x236C JUMP JUMPDEST DIV SWAP1 DUP1 SLOAD SWAP2 PUSH2 0x2710 SWAP3 DUP4 SUB SWAP2 DUP4 DUP4 GT PUSH2 0x247F JUMPI POP SWAP1 PUSH2 0x247B SWAP2 PUSH2 0x236C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x12 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP2 SWAP4 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x24FA JUMPI JUMPDEST DUP2 PUSH2 0x24D9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24F6 JUMPI MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1FE8 JUMPI POP SWAP2 PUSH1 0xFF PUSH2 0x240D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x24CC JUMP JUMPDEST POP POP POP PUSH2 0x2514 SWAP1 PUSH4 0x5F5E100 SWAP3 PUSH2 0x236C JUMP JUMPDEST DIV PUSH1 0x4 SLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 SUB DUP3 DUP2 GT PUSH2 0x1DD7 JUMPI PUSH2 0x247B SWAP2 PUSH2 0x236C JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2667 JUMPI PUSH1 0xA0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x2613 JUMPI JUMPDEST POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0x25DE JUMPI PUSH2 0x259C PUSH3 0x15180 SWAP2 TIMESTAMP PUSH2 0x1DCA JUMP JUMPDEST GT PUSH2 0x25A4 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819995959081D1BDBC81BDB19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x265F JUMPI JUMPDEST DUP2 PUSH2 0x262E PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP PUSH2 0x2640 DUP2 PUSH2 0x2536 JUMP JUMPDEST POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x2657 PUSH1 0x80 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD PUSH2 0x2536 JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x2584 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x141C9A58D94819995959081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0x26D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696365206665656420666F7220746F6B656E207061697200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x15E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x15E JUMPI SWAP2 PUSH2 0x2765 PUSH1 0x20 DUP3 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x2772 PUSH1 0x40 DUP4 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x277F PUSH1 0x60 DUP3 ADD PUSH2 0x1D67 JUMP JUMPDEST SWAP2 PUSH2 0x278C PUSH1 0x80 DUP4 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x2799 PUSH1 0xA0 DUP3 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x27A6 PUSH1 0xC0 DUP4 ADD PUSH2 0x2717 JUMP JUMPDEST SWAP2 PUSH2 0x27B3 PUSH1 0xE0 DUP3 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 PUSH2 0x120 DUP2 ADD MLOAD SWAP2 PUSH2 0x27DC PUSH2 0x160 PUSH2 0x27D5 PUSH2 0x140 DUP6 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP4 ADD PUSH2 0x2725 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x27E6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B8C081CDDD85C0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2827 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151BDAD95B8C481CDDD85C0819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP5 AND SWAP1 PUSH1 0x80 DUP8 ADD DUP4 DUP2 GT DUP9 DUP3 LT OR PUSH2 0xB8F JUMPI DUP7 MSTORE DUP7 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP8 ADD DUP3 DUP2 MSTORE DUP7 DUP9 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x60 DUP12 ADD SWAP4 DUP4 DUP6 MSTORE DUP11 MLOAD SWAP12 DUP13 DUP12 PUSH4 0xFC6F7865 PUSH1 0xE0 SHL SWAP2 ADD MSTORE MLOAD PUSH1 0x24 DUP14 ADD MSTORE MLOAD AND PUSH1 0x44 DUP12 ADD MSTORE MLOAD AND PUSH1 0x64 DUP10 ADD MSTORE MLOAD AND PUSH1 0x84 DUP8 ADD MSTORE PUSH1 0x84 DUP7 MSTORE PUSH1 0xC0 DUP7 ADD SWAP3 DUP7 DUP5 LT DUP4 DUP6 GT OR PUSH2 0xB8F JUMPI DUP4 DUP1 SWAP3 DUP2 DUP9 MSTORE PUSH4 0x5229073F PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x0 SWAP6 DUP7 DUP1 SWAP5 DUP12 PUSH2 0x291D DUP2 PUSH1 0xBF NOT SWAP4 PUSH1 0xC4 DUP3 ADD PUSH2 0x1DED JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x2A31 JUMPI DUP4 SWAP3 DUP5 SWAP8 PUSH2 0x2985 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x2951 JUMPI DUP3 DUP5 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP1 SWAP2 JUMP JUMPDEST POP PUSH1 0x64 SWAP2 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x10DBDB1B1958DD0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP7 POP SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP9 RETURNDATACOPY PUSH2 0x2999 DUP2 DUP9 PUSH2 0x1B9A JUMP JUMPDEST DUP3 ADD SWAP6 DUP6 DUP4 PUSH1 0xC0 DUP10 ADD SWAP9 SUB SLT PUSH2 0x2A15 JUMPI PUSH2 0x29B2 SWAP1 PUSH2 0x1D7B JUMP JUMPDEST SWAP2 PUSH1 0xE0 DUP2 ADD MLOAD SWAP1 DUP3 DUP3 GT PUSH2 0x2A2D JUMPI ADD DUP7 PUSH1 0xDF DUP3 ADD SLT ISZERO PUSH2 0x2A15 JUMPI PUSH1 0xC0 DUP2 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x2A19 JUMPI DUP6 MLOAD SWAP7 PUSH2 0x29EE PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP10 PUSH2 0x1B9A JUMP JUMPDEST DUP3 DUP9 MSTORE PUSH1 0xE0 DUP4 DUP4 ADD ADD GT PUSH2 0x2A15 JUMPI SWAP1 PUSH2 0x2A0D SWAP2 PUSH1 0xE0 DUP7 DUP10 ADD SWAP2 ADD PUSH2 0x1C62 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x2932 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2AA1 JUMPI JUMPDEST DUP2 PUSH2 0x2A94 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B9A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1FE8 JUMPI POP MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A87 JUMP INVALID 0xC4 JUMPI 0xDA 0xBB SHR 0xD0 TIMESTAMP 0x2F 0x2D 0x4E 0xE0 0xE3 JUMPDEST 0xED 0x2D ORIGIN 0x4C DUP10 PUSH32 0xF52CA6D0033A86D6A43CE80502A2646970667358221220A1B3005DF6ECA71D1E 0xA7 0x2D SWAP2 JUMPDEST PUSH19 0x967804D812705DD5F6488EA27498F5CFDEE364 PUSH20 0x6F6C634300081400330000000000000000000000 ",
              "sourceMap": "408:24071:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;1094:65;408:24071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;;;;2627:22:0;;2623:91;;408:24071:7;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;3052:40:0;408:24071:7;3052:40:0;;408:24071:7;2623:91:0;408:24071:7;;-1:-1:-1;;;2672:31:0;;408:24071:7;;2672:31:0;;408:24071:7;;;2672:31:0;408:24071:7;;;;;;-1:-1:-1;;408:24071:7;;;;505:27;408:24071;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;-1:-1:-1;;;;;408:24071:7;;:::i;:::-;;;;845:45;408:24071;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;-1:-1:-1;;;;;408:24071:7;;:::i;:::-;;;;;18590:13;408:24071;;18582:65;408:24071;;;;;;18582:65;:::i;:::-;408:24071;;-1:-1:-1;;;18728:19:7;;408:24071;;;;18728:19;;;;;;;;408:24071;18728:19;;;408:24071;-1:-1:-1;408:24071:7;;-1:-1:-1;;;19123:37:7;;408:24071;;;;19123:37;;408:24071;;;19123:37;;;;408:24071;;;-1:-1:-1;;;;;408:24071:7;;19123:37;;;;;;;408:24071;;;19123:37;;;408:24071;-1:-1:-1;;408:24071:7;;-1:-1:-1;;;19194:21:7;;408:24071;;;;;19194:21;;;;;;;;408:24071;19194:21;;;408:24071;18685:10;19306:30;18685:10;19306:30;:::i;:::-;408:24071;;-1:-1:-1;;;19441:46:7;;18685:10;408:24071;19441:46;;408:24071;;;;;;;;-1:-1:-1;;19346:18:7;;-1:-1:-1;;19346:18:7;;-1:-1:-1;;408:24071:7;;;;;;;-1:-1:-1;;;;;408:24071:7;;19441:46;;;;;;;408:24071;19441:46;;;408:24071;-1:-1:-1;19539:1317:7;;;-1:-1:-1;;408:24071:7;;-1:-1:-1;;;19580:38:7;;18685:10;408:24071;19580:38;;408:24071;;;;;;;;;;-1:-1:-1;408:24071:7;;-1:-1:-1;408:24071:7;;;-1:-1:-1;;;;;408:24071:7;;19580:38;;;;;;;408:24071;19580:38;;;19539:1317;19567:51;;19636:14;;19632:668;;19539:1317;;-1:-1:-1;;;;;;;;;;;19539:1317:7;;20959:37;21012:188;19539:1317;;20893:30;18685:10;20893:30;:::i;:::-;20959:37;:::i;:::-;408:24071;;18685:10;;;;408:24071;;;21012:188;408:24071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21012:188;;;;408:24071;19632:668;408:24071;19864:201;408:24071;;;19743:27;;;;19699:118;;;;408:24071;;;19699:118;;408:24071;;19699:118;;;;;:::i;:::-;408:24071;;-1:-1:-1;;;19864:201:7;;408:24071;;;;;;19864:201;;;:::i;:::-;;18685:10;408:24071;18685:10;19864:201;;;;;;;408:24071;19864:201;;;19632:668;408:24071;;;;20959:37;21012:188;408:24071;20149:136;20178:44;-1:-1:-1;;;;;;;;;;;408:24071:7;;;;;;;;;18685:10;20178:44;:::i;:::-;20149:136;:::i;:::-;19632:668;;;;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;;;;19864:201;;;408:24071;19864:201;;408:24071;19864:201;;;;;;408:24071;19864:201;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;19864:201;;;;;;-1:-1:-1;19864:201:7;;;408:24071;;;;;;;;;19580:38;;;;408:24071;19580:38;;408:24071;19580:38;;;;;;408:24071;19580:38;;;:::i;:::-;;;408:24071;;;;;19580:38;;;;;;;-1:-1:-1;19580:38:7;;19539:1317;21012:188;408:24071;;;20959:37;408:24071;;;-1:-1:-1;;;;;;;;;;;408:24071:7;;;;20379:39;408:24071;;;18685:10;;20379:39;:::i;:::-;20358:60;;;;;20487:11;;20483:175;;19539:1317;20675:11;;;20671:175;;19539:1317;;;;;20671:175;20706:125;18685:10;20735:36;18685:10;;20735:36;:::i;:::-;20706:125;:::i;:::-;20671:175;;;;20483;20518:125;18685:10;20547:36;18685:10;;20547:36;:::i;:::-;20518:125;:::i;:::-;20483:175;;;;19441:46;;;408:24071;19441:46;;408:24071;19441:46;;;;;;408:24071;19441:46;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;19441:46;;;;;;-1:-1:-1;19441:46:7;;19194:21;;;;408:24071;19194:21;;408:24071;19194:21;;;;;;408:24071;19194:21;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;19194:21;;;;;;;-1:-1:-1;19194:21:7;;19123:37;;;;;;;;;;;-1:-1:-1;19123:37:7;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;18728:19;;;408:24071;18728:19;;408:24071;18728:19;;;;;;408:24071;18728:19;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;18728:19;;;;;;-1:-1:-1;18728:19:7;;408:24071;;;;;;-1:-1:-1;;408:24071:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;;;;4507:30;;408:24071;;4593:12;408:24071;;-1:-1:-1;;;;;408:24071:7;;;;;4593:12;408:24071;;4661:48;408:24071;4661:48;;408:24071;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;;;;;;;;;;;;15331:13;408:24071;;15323:65;408:24071;;;;;;15323:65;:::i;:::-;408:24071;;-1:-1:-1;;;15469:19:7;;408:24071;;;;;;;;15469:19;;;;;;;408:24071;15469:19;;;408:24071;;;;;;;;15881:37;;;408:24071;15881:37;;408:24071;15881:37;408:24071;;;;;;;;15881:37;;;;;;;408:24071;;;;;15881:37;;;408:24071;15426:10;;15958:30;15426:10;15958:30;:::i;:::-;15998:22;408:24071;;;;;;;;16054:21;;408:24071;;;;;;;16054:21;;;;;;;408:24071;16054:21;;;408:24071;-1:-1:-1;408:24071:7;;-1:-1:-1;;;16152:46:7;;15426:10;408:24071;16152:46;;408:24071;;;;;;;;;;;;;;;;;16152:46;;;;;;;;;408:24071;16152:46;;;408:24071;16247:157;;;;408:24071;16414:19;;;408:24071;16443:19;408:24071;16477:9;;16473:602;;408:24071;;;-1:-1:-1;;;;;408:24071:7;;;17126:13;17122:100;;408:24071;15426:10;;408:24071;15426:10;17232:39;15426:10;18142:154;15426:10;;17232:39;:::i;:::-;-1:-1:-1;;408:24071:7;;-1:-1:-1;;;18003:108:7;;;;408:24071;18003:108;;;408:24071;;;18003:108;;408:24071;18003:108;408:24071;18003:108;:::i;18142:154::-;;15426:10;408:24071;15426:10;18142:154;;;;;;;408:24071;18142:154;;;408:24071;;;;;-1:-1:-1;;;;;;;;;;;15426:10:7;17450:37;17657:188;15426:10;17384:30;15426:10;17384:30;:::i;17450:37::-;408:24071;;;;;;;15426:10;;17657:188;;408:24071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;18142:154;;;408:24071;18142:154;;408:24071;18142:154;;;;;;408:24071;18142:154;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;18142:154;;;;;;-1:-1:-1;18142:154:7;;17122:100;408:24071;;;;;;:::i;:::-;;;;;12004:244;;408:24071;;;;12004:244;;408:24071;;;12004:244;;;408:24071;;;;12004:244;;;12218:15;;408:24071;;;;11936:54;;;;408:24071;11900:358;;;408:24071;;11900:358;;408:24071;;;;;;;;;;;;;;;;;;;;;;;11900:358;;408:24071;;;;;;;;;;;;;;;;-1:-1:-1;;;12289:158:7;;408:24071;;-1:-1:-1;;12289:158:7;;;;;;;;:::i;:::-;;;15426:10;408:24071;15426:10;12289:158;;;;;;;408:24071;12289:158;;;17122:100;408:24071;;;;;17122:100;;;;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;;;;12289:158;408:24071;12289:158;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;12289:158;;;;;;;;;408:24071;;;;;;;;;;;;16473:602;15426:10;;;;16604:39;15426:10;;;16604:39;:::i;:::-;16583:60;;;;;16661:11;;16657:219;;16473:602;16894:11;;;16890:175;16473:602;16890:175;16925:125;15426:10;16954:36;15426:10;;16954:36;:::i;16925:125::-;16890:175;;16473:602;;16657:219;16736:125;15426:10;16765:36;15426:10;;16765:36;:::i;16736:125::-;16657:219;;;;16247:157;408:24071;;-1:-1:-1;;;16288:38:7;;15426:10;408:24071;16288:38;;408:24071;;;;;;;;;;-1:-1:-1;408:24071:7;;;;;;;;;16288:38;;;;;;;;408:24071;16288:38;;;16247:157;16385:7;16275:51;;15426:10;;16385:7;:::i;:::-;16247:157;;;;;16288:38;;;408:24071;16288:38;;408:24071;16288:38;;;;;;408:24071;16288:38;;;:::i;:::-;;;408:24071;;;;;16385:7;408:24071;;16288:38;;;;;-1:-1:-1;16288:38:7;;16152:46;;;;;408:24071;16152:46;;408:24071;16152:46;;;;;;408:24071;16152:46;;;:::i;:::-;;;408:24071;;;;;;;;:::i;:::-;16152:46;;;;;;;-1:-1:-1;16152:46:7;;16054:21;;;;408:24071;16054:21;;408:24071;16054:21;;;;;;408:24071;16054:21;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;16054:21;;;;;;;-1:-1:-1;16054:21:7;;15881:37;;;;;;;;;;;;-1:-1:-1;15881:37:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15469:19;;;;408:24071;15469:19;;408:24071;15469:19;;;;;;408:24071;15469:19;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;15469:19;;;;;;;-1:-1:-1;15469:19:7;;408:24071;;;;;;-1:-1:-1;;408:24071:7;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;;;;4083:29;;408:24071;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;4231:45;408:24071;4231:45;;408:24071;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;632:29;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;1500:62:0;;:::i;:::-;408:24071:7;;;-1:-1:-1;;;;;;408:24071:7;;;;-1:-1:-1;;;;;408:24071:7;3052:40:0;408:24071:7;;3052:40:0;408:24071:7;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;1500:62:0;;;;:::i;:::-;408:24071:7;6213:23;;;408:24071;;;6277:21;;;408:24071;;6337:23;;408:24071;;;;;6393:10;408:24071;;;;;;;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;6450:47;408:24071;6450:47;;408:24071;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9747:13;408:24071;;9739:65;408:24071;;;;;;9739:65;:::i;:::-;408:24071;;-1:-1:-1;;;9887:21:7;;408:24071;9887:21;408:24071;;;9887:21;;;;;;;;408:24071;9887:21;;;408:24071;-1:-1:-1;408:24071:7;;-1:-1:-1;;;9985:46:7;;9842:10;408:24071;9985:46;;408:24071;;;;;;;;;;;9842:10;408:24071;;;;9985:46;;;;;;408:24071;9985:46;;;408:24071;10042:40;;;;:::i;:::-;10122:30;9842:10;10122:30;:::i;:::-;408:24071;;-1:-1:-1;;;10184:38:7;;9842:10;408:24071;10184:38;;408:24071;;;;;;;;;;;;;;;;;10184:38;;;;;;;;;408:24071;10184:38;;;408:24071;9842:10;;10278:7;10390:37;9842:10;408:24071;9842:10;;10278:7;:::i;10390:37::-;408:24071;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;408:24071:7;9842:10;10443:176;;408:24071;10184:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;;10278:7;10184:38;;;;;;;9985:46;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;10042:40;408:24071;;:::i;:::-;9985:46;;;;;;;9887:21;;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;9887:21;;;;;;;;;408:24071;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;964:62;408:24071;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;;;;5153:23;;408:24071;;;5216:21;;;408:24071;;5275:15;;408:24071;;;;;;5317:9;408:24071;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:24071:7;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;3309:43;3317:18;;;3309:43;:::i;:::-;408:24071;;;;3362:13;408:24071;;;;;;;-1:-1:-1;;408:24071:7;;;;;3403:30;408:24071;;3403:30;408:24071;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;408:24071:7;3705:43;3713:18;;;3705:43;:::i;:::-;408:24071;;;;3758:13;408:24071;;;;;;;-1:-1:-1;;408:24071:7;;;3800:29;408:24071;;3800:29;408:24071;;;;;;;-1:-1:-1;;408:24071:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21650:13;408:24071;;21642:65;408:24071;;;;;;21642:65;:::i;:::-;408:24071;;-1:-1:-1;;;21788:19:7;;408:24071;21788:19;408:24071;;;21788:19;;;;;;;;408:24071;21788:19;;;408:24071;-1:-1:-1;408:24071:7;;-1:-1:-1;;;21840:21:7;;408:24071;21840:21;408:24071;;;21840:21;;;;;;;;408:24071;21840:21;;;408:24071;-1:-1:-1;408:24071:7;;-1:-1:-1;;;22103:46:7;;21745:10;408:24071;22103:46;;408:24071;;;;;;;;;;;;;;;21745:10;408:24071;;;;22103:46;;;;;;;408:24071;22103:46;;;408:24071;22167:9;408:24071;;22244:30;21745:10;22244:30;:::i;:::-;408:24071;;;;;;;22522:37;;;408:24071;22522:37;;408:24071;22522:37;;;;;;;;;;;;;;408:24071;;;;;22522:37;;;408:24071;21745:10;;;;;22658:85;21745:10;408:24071;21745:10;;;22658:85;:::i;:::-;22804:11;;;;;;22800:109;;408:24071;22922:11;;;22918:109;;408:24071;;;;;;;;;;;;23098:98;;21745:10;408:24071;23098:98;;408:24071;;;;;;23098:98;;;;;;;;408:24071;23098:98;;;408:24071;23211:11;;23207:500;;408:24071;-1:-1:-1;;408:24071:7;;-1:-1:-1;;;23772:92:7;;;;;;;408:24071;;;23772:92;;;23895:157;;23772:92;408:24071;23772:92;:::i;23895:157::-;;21745:10;408:24071;21745:10;23895:157;;;;;;;408:24071;23895:157;;;408:24071;;;;;21745:10;24194:37;21745:10;24128:30;21745:10;24128:30;:::i;24194:37::-;408:24071;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;408:24071:7;21745:10;24247:223;;408:24071;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;23895:157;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;23895:157;;;;;;;;23207:500;408:24071;;;;;23306:54;;;;23266:160;;;;;;;408:24071;;;;;;;23266:160;;408:24071;;;;;;;;;;;;;;;;;;;;;;23465:178;;;;;;;;;;;;:::i;:::-;;;21745:10;408:24071;21745:10;23465:178;;;;;;;;;408:24071;23465:178;;;23207:500;408:24071;;;;;;23207:500;;;;;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;23465:178;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;23465:178;;;;;;;;;;408:24071;;;;;;;;;;;;23098:98;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;;:::i;:::-;23098:98;;;;;;;;22918:109;22949:67;21745:10;22957:36;21745:10;;22957:36;:::i;22949:67::-;22918:109;;;;22800;22831:67;21745:10;22839:36;21745:10;;22839:36;:::i;22831:67::-;22800:109;;;;22522:37;;;;;408:24071;22522:37;;;;;;;-1:-1:-1;22522:37:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;;;;;22103:46;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;22103:46;;;;;;;;21840:21;;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;21840:21;;;;;;;;;21788:19;;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;21788:19;;;;;;;;;408:24071;;;;;;-1:-1:-1;;408:24071:7;;;;;;1500:62:0;;:::i;:::-;2879:4:7;2857:26;;408:24071;;;3029:58;408:24071;;;;;;;;;;;;;;;;3029:58;408:24071;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;408:24071:7;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;408:24071:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;408:24071:7;;;;-1:-1:-1;408:24071:7;;-1:-1:-1;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;408:24071:7;;;;:::o;1796:162:0:-;1710:6;408:24071:7;-1:-1:-1;;;;;408:24071:7;735:10:3;1855:23:0;1851:101;;1796:162::o;1851:101::-;408:24071:7;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;408:24071:7;;;1901:40:0;408:24071:7;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;10699:948;;-1:-1:-1;;;;;408:24071:7;;;;;10834:19;;408:24071;;;;;-1:-1:-1;;;10942:46:7;;408:24071;;;-1:-1:-1;;;;;408:24071:7;;10942:46;;;408:24071;;;;;;;10942:46;;408:24071;;;;;10942:46;408:24071;;;10942:46;;;;;;;10851:1;10942:46;;;10699:948;10999:40;;;;:::i;:::-;408:24071;;-1:-1:-1;;;11067:38:7;;-1:-1:-1;;;;;408:24071:7;;10942:46;11067:38;;408:24071;;;;;;;;;;;;;;;;11067:38;;;;;;;10851:1;11067:38;;;10699:948;408:24071;;;;11269:153;408:24071;;;11180:26;;;;11144:93;;;;;;;408:24071;11144:93;;;;;;:::i;:::-;10851:1;408:24071;;;;;;;;;;;11269:153;;10942:46;11269:153;;;:::i;:::-;;;;;;;;;;10851:1;11269:153;;;10699:948;408:24071;;;;11484:10;;;11480:161;;10699:948;;;:::o;11480:161::-;11510:120;408:24071;11535:40;408:24071;;;;11535:40;;:::i;408:24071::-;;;;;;;;;;;10942:46;408:24071;;;;11144:93;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;11269:153;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;;:::i;:::-;11269:153;;;408:24071;;;11269:153;;;;;;408:24071;;;10851:1;408:24071;;;;;11067:38;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;-1:-1:-1;408:24071:7;;;11067:38;;;;;;;;408:24071;;;10851:1;408:24071;;;;;10942:46;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;10999:40;408:24071;;:::i;:::-;10942:46;;;;;;;;408:24071;;;10851:1;408:24071;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;13579:1591;;;13715:13;;13711:30;;13764:12;408:24071;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;13755:21;;;13751:38;;13727:1;408:24071;;;;;5740:9;408:24071;;;;;;;;;;;;;;;;;:::i;:::-;;;5787:15;408:24071;;14024:10;408:24071;;;-1:-1:-1;;;13951:115:7;;;;408:24071;;;-1:-1:-1;;;;;408:24071:7;13951:115;;;408:24071;;;;;;;;13951:115;;408:24071;-1:-1:-1;;;408:24071:7;;13951:115;408:24071;;13951:115;:::i;:::-;408:24071;;;;;;;14097:152;408:24071;;;14097:152;;;;;13951:115;14097:152;;;:::i;:::-;;;;;;;;;;;;;;;;13579:1591;408:24071;;;;14397:43;;;;:::i;:::-;14692:3;14674:15;408:24071;14674:15;;;408:24071;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14534:285;;;408:24071;;;;14534:285;;;408:24071;;;14534:285;;;408:24071;;;14534:285;;;408:24071;;;;;14918:31;;;;;;14882:97;;;;;13951:115;14882:97;;408:24071;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14882:97;;;;;;;;;;:::i;:::-;14024:10;408:24071;;;;;;15009:154;;;;;;;;13951:115;15009:154;;;;;;:::i;:::-;;;;;;;;;;;;;;;13579:1591;14990:173;;;13579:1591;:::o;15009:154::-;;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;;:::i;:::-;15009:154;;;;;;;;;;;408:24071;;;;-1:-1:-1;408:24071:7;;;;;;-1:-1:-1;;;408:24071:7;;;13951:115;408:24071;13951:115;408:24071;;;;;-1:-1:-1;;;408:24071:7;;13951:115;408:24071;;;;;;13951:115;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;14097:152;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;;:::i;:::-;14097:152;;;408:24071;;;;14097:152;;;;;;408:24071;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;13751:38;13778:11;;;;;;408:24071;13778:11;:::o;13711:30::-;13730:11;;;13737:4;13730:11;:::o;408:24071::-;;;;;;;;;;;;;;;;:::o;7949:1707::-;8095:12;408:24071;-1:-1:-1;;;;;408:24071:7;;;;;;;;8086:21;;;8082:42;;8296:32;8229:33;8243:4;8229:33;;;:::i;:::-;8296:32;:::i;:::-;408:24071;;;8375:13;;8371:353;;8824:26;8981:32;8824:26;;8885:33;8824:26;;:::i;8885:33::-;408:24071;;;;;;;;;;8981:32;;;;;;;;;;;;;-1:-1:-1;8981:32:7;;;7949:1707;9236:25;408:24071;9236:25;;;;:::i;:::-;408:24071;;9285:1;716:5;408:24071;716:5;;;;408:24071;716:5;;408:24071;;716:5;408:24071;716:5;;;;408:24071;;716:5;;;;;;;408:24071;;;;;;9454:26;408:24071;9484:3;408:24071;;9454:26;:::i;:::-;408:24071;;;;716:5;;408:24071;;;;;;;;;9554:59;;;;;:::i;:::-;408:24071;7949:1707;:::o;408:24071::-;;;;;;-1:-1:-1;408:24071:7;;;-1:-1:-1;408:24071:7;;;;;;;-1:-1:-1;408:24071:7;;;-1:-1:-1;408:24071:7;716:5;408:24071;;;;;-1:-1:-1;408:24071:7;;;-1:-1:-1;408:24071:7;8981:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;716:5;;;;;408:24071;;;;716:5;;;;-1:-1:-1;8981:32:7;408:24071;8981:32;;716:5;408:24071;;;8981:32;;;-1:-1:-1;8981:32:7;;8371:353;8545:24;;;;;8573:3;8545:24;;:::i;:::-;408:24071;8655:17;408:24071;716:5;;408:24071;;;;;;;;8614:59;;;:::i;8082:42::-;8109:15;;;;;:::o;408:24071::-;;;;;;;;;;:::o;6696:473::-;-1:-1:-1;;;;;408:24071:7;6807:23;;408:24071;;;6980:24;408:24071;;;;;;;;;;6980:24;;;;;;;;6828:1;;;6980:24;;;6696:473;7023:9;6828:1;7023:9;;408:24071;;;7068:27;7099:8;7068:15;;:27;:::i;:::-;:39;408:24071;;6696:473;:::o;408:24071::-;;;-1:-1:-1;;;408:24071:7;;;6980:24;408:24071;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;6980:24;408:24071;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;6980:24;;;;408:24071;6980:24;;;;;;;;;408:24071;6980:24;;;:::i;:::-;;;408:24071;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;6980:24;;;;;;;-1:-1:-1;6980:24:7;;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;7411:282;;408:24071;;;;;;;;-1:-1:-1;408:24071:7;7556:10;408:24071;;;;-1:-1:-1;408:24071:7;;;-1:-1:-1;408:24071:7;;;;-1:-1:-1;408:24071:7;;;7604:23;;408:24071;;7411:282;:::o;408:24071::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;408:24071:7;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;408:24071:7;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;408:24071:7;;;;;;;;;;;;-1:-1:-1;;;408:24071:7;;;;;;;12636:878;408:24071;;;;;;-1:-1:-1;;;;;408:24071:7;12636:878;;408:24071;;;;;;;;;;;;;;;;;;;;;12920:227;;;;;408:24071;;;12920:227;;;13068:17;-1:-1:-1;;;;;408:24071:7;;;;;;12920:227;;;408:24071;;;;;;12862:44;;;;;;12826:331;;;408:24071;12826:331;;;408:24071;;;;;;;;;;;;;;;;;;;;12826:331;;408:24071;;;;;;;;;;;;;;;;;;;;;;13210:180;;-1:-1:-1;13210:180:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;13210:180:7;;;12636:878;408:24071;;;;;;;;;;13465:42;;408:24071;;;;13465:42;;;408:24071;;;;13444:63;12636:878;:::o;408:24071::-;;;;;;;;;;;12826:331;408:24071;;;;12826:331;408:24071;;;-1:-1:-1;;;408:24071:7;;;;;13210:180;;;;;;;;;;;;;;;:::i;:::-;;;;;;408:24071;13210:180;;408:24071;;;;;;;;:::i;:::-;;12862:44;408:24071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:24071:7;;;;;:::i;:::-;;;;12862:44;408:24071;;;;;;;;;;12862:44;408:24071;;;;;;:::i;:::-;13210:180;;;;;408:24071;;;;;-1:-1:-1;;;408:24071:7;;;12826:331;408:24071;12826:331;408:24071;;;;;;13210:180;408:24071;;;;;;;;;21256:131;21351:12;408:24071;;;-1:-1:-1;;;21344:36:7;;-1:-1:-1;;;;;408:24071:7;;;21344:36;;;408:24071;;21344:36;;408:24071;;;;;;;21344:36;;;;;;;-1:-1:-1;21344:36:7;;;21337:43;21256:131;:::o;21344:36::-;;;;;;;;;;;;;;;;:::i;:::-;;;408:24071;;;;;;21256:131;:::o;21344:36::-;;;-1:-1:-1;21344:36:7;"
            },
            "methodIdentifiers": {
              "USDC()": "89a30271",
              "approvePool(address)": "424c265b",
              "approvedPools(address)": "f0bbcec4",
              "collectAndConvertFees(address,uint256)": "e6370309",
              "owner()": "8da5cb5b",
              "priceFeeds(address,address)": "f90c6906",
              "removePool(address)": "3b7d0946",
              "renounceOwnership()": "715018a6",
              "rewardStable()": "f2bf87e3",
              "rewardToken()": "f7c618c1",
              "setPriceFeed(address,address,address)": "67a1d5ab",
              "setRewardStable(address)": "c13d2f75",
              "setRewardToken(address)": "8aee8127",
              "setSlippageTolerance(uint256)": "117da1ee",
              "setSwapPath(address,address,bytes)": "483103a4",
              "slippageTolerance()": "d03153aa",
              "stakeAndCollect(address,uint256)": "31a8f1c9",
              "swapPaths(address,address)": "4a6a749c",
              "swapRouter()": "c31c9c07",
              "transferOwnership(address)": "f2fde38b",
              "unstakeAndCollect(address,uint256)": "4bdc76cc",
              "withdrawAndCollect(address,uint256)": "ac6e07ee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardStable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"veloAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsdtAmount\",\"type\":\"uint256\"}],\"name\":\"EarningsCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"PriceFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldStable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStable\",\"type\":\"address\"}],\"name\":\"RewardStableUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"RewardTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTolerance\",\"type\":\"uint256\"}],\"name\":\"SlippageToleranceUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"approvePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedPools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"collectAndConvertFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardStable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRewardStable\",\"type\":\"address\"}],\"name\":\"setRewardStable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRewardToken\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippageTolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"setSwapPath\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeAndCollect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapPaths\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeAndCollect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawAndCollect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"approvePool(address)\":{\"details\":\"Can only be called by the owner\",\"params\":{\"pool\":\"The address of the pool to approve\"}},\"collectAndConvertFees(address,uint256)\":{\"params\":{\"pool\":\"The pool address\",\"tokenId\":\"The ID of the position\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removePool(address)\":{\"details\":\"Can only be called by the owner\",\"params\":{\"pool\":\"The address of the pool to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setPriceFeed(address,address,address)\":{\"params\":{\"fromToken\":\"The source token address\",\"priceFeed\":\"The Chainlink price feed address for the token pair\",\"toToken\":\"The destination token address\"}},\"setRewardStable(address)\":{\"params\":{\"_newRewardStable\":\"The new reward stable token address\"}},\"setRewardToken(address)\":{\"params\":{\"_newRewardToken\":\"The new reward token address\"}},\"setSlippageTolerance(uint256)\":{\"params\":{\"_slippageTolerance\":\"The new slippage tolerance (in basis points, e.g. 50 = 0.5%)\"}},\"setSwapPath(address,address,bytes)\":{\"details\":\"Can only be called by the owner\",\"params\":{\"fromToken\":\"The address of the token to swap from\",\"path\":\"The encoded path for the swap\",\"toToken\":\"The address of the token to swap to\"}},\"stakeAndCollect(address,uint256)\":{\"params\":{\"pool\":\"The pool address\",\"tokenId\":\"The ID of the position\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approvePool(address)\":{\"notice\":\"Approve a pool for all safes\"},\"collectAndConvertFees(address,uint256)\":{\"notice\":\"Collects fees from a position and converts them to USDT\"},\"removePool(address)\":{\"notice\":\"Remove approval for a pool for all safes\"},\"setPriceFeed(address,address,address)\":{\"notice\":\"Set the price feed for a token pair\"},\"setRewardStable(address)\":{\"notice\":\"Update the reward stable token address (USDT)\"},\"setRewardToken(address)\":{\"notice\":\"Update the reward token address (Velo)\"},\"setSlippageTolerance(uint256)\":{\"notice\":\"Set the slippage tolerance for swaps\"},\"setSwapPath(address,address,bytes)\":{\"notice\":\"Update the encoded path for swaps between two tokens\"},\"stakeAndCollect(address,uint256)\":{\"notice\":\"Stakes a position in the gauge and collects any earned fees before staking\"},\"withdrawAndCollect(address,uint256)\":{\"notice\":\"Main function to withdraw liquidity and collect fees\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CholoDromeModule.sol\":\"CholoDromeModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@safe-global/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/CholoDromeModule.sol\":{\"keccak256\":\"0xd0e451e520ae163e3792fa8f552b917ae320d6ca8c249f54ecc222212ea5c288\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://c06618d4bf374110d70c7aabb6d66b1327b08e43802a0298be0c3d70ecdf4c0f\",\"dweb:/ipfs/QmPxNybVPx24Nne2NVXum2ya9LaQcoxSf2JGwWwJNUGrbz\"]},\"contracts/ISafe.sol\":{\"keccak256\":\"0xec4ad500789329b75099b31353d14df98c94078c527615ff6ce905b0b9729667\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://ae311afc5c81830743ecbd70befd39fee66ac5a7e3b61948e877b983a3d0e657\",\"dweb:/ipfs/QmVDfkbQQjR4p4j7ZkojiGvVpW81RGzYLzAA844FdBcgKY\"]},\"contracts/choloInterfaces.sol\":{\"keccak256\":\"0x2bdfda224a3aef9f4bc95080983c4f98857d76ca1c0c0006a04542428935a342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad08890e0d87ff18328122dc44b33423e48e3e444c99090b6c6052c7edbcb0b5\",\"dweb:/ipfs/QmNvZp5siNorYFtSrETDnS96VUtoFrbF6KpZGXX84HwYxq\"]}},\"version\":1}"
        }
      },
      "contracts/ISafe.sol": {
        "ISafe": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "enum Enum.Operation",
                  "name": "operation",
                  "type": "uint8"
                }
              ],
              "name": "execTransactionFromModule",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "enum Enum.Operation",
                  "name": "operation",
                  "type": "uint8"
                }
              ],
              "name": "execTransactionFromModuleReturnData",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "returnData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "execTransactionFromModule(address,uint256,bytes,uint8)": "468721a7",
              "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)": "5229073f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ISafe.sol\":\"ISafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@safe-global/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"contracts/ISafe.sol\":{\"keccak256\":\"0xec4ad500789329b75099b31353d14df98c94078c527615ff6ce905b0b9729667\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://ae311afc5c81830743ecbd70befd39fee66ac5a7e3b61948e877b983a3d0e657\",\"dweb:/ipfs/QmVDfkbQQjR4p4j7ZkojiGvVpW81RGzYLzAA844FdBcgKY\"]}},\"version\":1}"
        }
      },
      "contracts/choloInterfaces.sol": {
        "AggregatorV3Interface": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "latestRoundData",
              "outputs": [
                {
                  "internalType": "uint80",
                  "name": "roundId",
                  "type": "uint80"
                },
                {
                  "internalType": "int256",
                  "name": "answer",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "startedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "updatedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint80",
                  "name": "answeredInRound",
                  "type": "uint80"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "latestRoundData()": "feaf968c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/choloInterfaces.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/choloInterfaces.sol\":{\"keccak256\":\"0x2bdfda224a3aef9f4bc95080983c4f98857d76ca1c0c0006a04542428935a342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad08890e0d87ff18328122dc44b33423e48e3e444c99090b6c6052c7edbcb0b5\",\"dweb:/ipfs/QmNvZp5siNorYFtSrETDnS96VUtoFrbF6KpZGXX84HwYxq\"]}},\"version\":1}"
        },
        "ICLGauge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "earned",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "depositor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "stakedContains",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "earned(address,uint256)": "3e491d47",
              "getReward(uint256)": "1c4b774b",
              "stakedContains(address,uint256)": "c69deec5",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakedContains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"tokenId\":\"The tokenId of the position\"}},\"earned(address,uint256)\":{\"details\":\"Throws if account is not the position ownerpool.updateRewardsGrowthGlobal() needs to be called first, to return the correct claimable rewards\",\"params\":{\"account\":\"The address of the user\",\"tokenId\":\"The tokenId of the position\"},\"returns\":{\"_0\":\"The amount of claimable reward\"}},\"getReward(uint256)\":{\"details\":\"Throws if not called by the position owner\",\"params\":{\"tokenId\":\"The tokenId of the position\"}},\"stakedContains(address,uint256)\":{\"params\":{\"depositor\":\"The address of the user\",\"tokenId\":\"The tokenId of the position\"},\"returns\":{\"_0\":\"Whether the position is staked in the gauge\"}},\"withdraw(uint256)\":{\"params\":{\"tokenId\":\"The tokenId of the position\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Used to deposit a CL position into the gaugeAllows the user to receive emissions instead of fees\"},\"earned(address,uint256)\":{\"notice\":\"Returns the claimable rewards for a given account and tokenId\"},\"getReward(uint256)\":{\"notice\":\"Retrieve rewards for a tokenId\"},\"stakedContains(address,uint256)\":{\"notice\":\"Check whether a position is staked in the gauge by a certain user\"},\"withdraw(uint256)\":{\"notice\":\"Used to withdraw a CL position from the gaugeAllows the user to receive fees instead of emissionsOutstanding emissions will be collected on withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/choloInterfaces.sol\":\"ICLGauge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/choloInterfaces.sol\":{\"keccak256\":\"0x2bdfda224a3aef9f4bc95080983c4f98857d76ca1c0c0006a04542428935a342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad08890e0d87ff18328122dc44b33423e48e3e444c99090b6c6052c7edbcb0b5\",\"dweb:/ipfs/QmNvZp5siNorYFtSrETDnS96VUtoFrbF6KpZGXX84HwYxq\"]}},\"version\":1}"
        },
        "ICLPool": {
          "abi": [
            {
              "inputs": [],
              "name": "gauge",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nft",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "gauge()": "a6f19c84",
              "nft()": "47ccca02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"gauge()\":{\"returns\":{\"_0\":\"The gauge contract address\"}},\"nft()\":{\"returns\":{\"_0\":\"The nft manager contract address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"gauge()\":{\"notice\":\"The gauge corresponding to this pool\"},\"nft()\":{\"notice\":\"The nft manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/choloInterfaces.sol\":\"ICLPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/choloInterfaces.sol\":{\"keccak256\":\"0x2bdfda224a3aef9f4bc95080983c4f98857d76ca1c0c0006a04542428935a342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad08890e0d87ff18328122dc44b33423e48e3e444c99090b6c6052c7edbcb0b5\",\"dweb:/ipfs/QmNvZp5siNorYFtSrETDnS96VUtoFrbF6KpZGXX84HwYxq\"]}},\"version\":1}"
        },
        "INonfungiblePositionManager": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount0Max",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount1Max",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.CollectParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "liquidity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "decreaseLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside0LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside1LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "burn(uint256)": "42966c68",
              "collect((uint256,address,uint128,uint128))": "fc6f7865",
              "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
              "isApprovedForAll(address,address)": "e985e9c5",
              "positions(uint256)": "99fbab88",
              "setApprovalForAll(address,bool)": "a22cb465"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"details\":\"The use of this function can cause a loss to users of the NonfungiblePositionManagerfor tokens that have very high decimals.The amount of tokens necessary for the loss is: 3.4028237e+38.This is equivalent to 1e20 value with 18 decimals.\",\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"The address that acts on behalf of the owner\",\"owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if operator is approved to transfer all of owner's tokens\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"True if the operator is approved, false to revoke approval\",\"operator\":\"The address to approve/remove as an operator\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipientUsed to update staked positions before deposit and withdraw\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Returns true if operator is approved to transfer all of owner's tokens\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Approve or remove operator as an operator for the caller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/choloInterfaces.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/choloInterfaces.sol\":{\"keccak256\":\"0x2bdfda224a3aef9f4bc95080983c4f98857d76ca1c0c0006a04542428935a342\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad08890e0d87ff18328122dc44b33423e48e3e444c99090b6c6052c7edbcb0b5\",\"dweb:/ipfs/QmNvZp5siNorYFtSrETDnS96VUtoFrbF6KpZGXX84HwYxq\"]}},\"version\":1}"
        }
      }
    }
  }
}